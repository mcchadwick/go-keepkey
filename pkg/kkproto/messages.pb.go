// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package kkproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Mapping between KeepKey wire identifier (uint) and a protobuf message
type MessageType int32

const (
	MessageType_MessageType_Initialize     MessageType = 0
	MessageType_MessageType_Ping           MessageType = 1
	MessageType_MessageType_Success        MessageType = 2
	MessageType_MessageType_Failure        MessageType = 3
	MessageType_MessageType_ChangePin      MessageType = 4
	MessageType_MessageType_WipeDevice     MessageType = 5
	MessageType_MessageType_FirmwareErase  MessageType = 6
	MessageType_MessageType_FirmwareUpload MessageType = 7
	MessageType_MessageType_GetEntropy     MessageType = 9
	MessageType_MessageType_Entropy        MessageType = 10
	MessageType_MessageType_GetPublicKey   MessageType = 11
	MessageType_MessageType_PublicKey      MessageType = 12
	MessageType_MessageType_LoadDevice     MessageType = 13
	MessageType_MessageType_ResetDevice    MessageType = 14
	MessageType_MessageType_SignTx         MessageType = 15
	// Formerly SimpleSignTx = 16
	MessageType_MessageType_Features          MessageType = 17
	MessageType_MessageType_PinMatrixRequest  MessageType = 18
	MessageType_MessageType_PinMatrixAck      MessageType = 19
	MessageType_MessageType_Cancel            MessageType = 20
	MessageType_MessageType_TxRequest         MessageType = 21
	MessageType_MessageType_TxAck             MessageType = 22
	MessageType_MessageType_CipherKeyValue    MessageType = 23
	MessageType_MessageType_ClearSession      MessageType = 24
	MessageType_MessageType_ApplySettings     MessageType = 25
	MessageType_MessageType_ButtonRequest     MessageType = 26
	MessageType_MessageType_ButtonAck         MessageType = 27
	MessageType_MessageType_GetAddress        MessageType = 29
	MessageType_MessageType_Address           MessageType = 30
	MessageType_MessageType_EntropyRequest    MessageType = 35
	MessageType_MessageType_EntropyAck        MessageType = 36
	MessageType_MessageType_SignMessage       MessageType = 38
	MessageType_MessageType_VerifyMessage     MessageType = 39
	MessageType_MessageType_MessageSignature  MessageType = 40
	MessageType_MessageType_PassphraseRequest MessageType = 41
	MessageType_MessageType_PassphraseAck     MessageType = 42
	// Formerly EstimateTxSize = 43
	// Formerly TxSize = 44
	MessageType_MessageType_RecoveryDevice             MessageType = 45
	MessageType_MessageType_WordRequest                MessageType = 46
	MessageType_MessageType_WordAck                    MessageType = 47
	MessageType_MessageType_CipheredKeyValue           MessageType = 48
	MessageType_MessageType_EncryptMessage             MessageType = 49
	MessageType_MessageType_EncryptedMessage           MessageType = 50
	MessageType_MessageType_DecryptMessage             MessageType = 51
	MessageType_MessageType_DecryptedMessage           MessageType = 52
	MessageType_MessageType_SignIdentity               MessageType = 53
	MessageType_MessageType_SignedIdentity             MessageType = 54
	MessageType_MessageType_GetFeatures                MessageType = 55
	MessageType_MessageType_EthereumGetAddress         MessageType = 56
	MessageType_MessageType_EthereumAddress            MessageType = 57
	MessageType_MessageType_EthereumSignTx             MessageType = 58
	MessageType_MessageType_EthereumTxRequest          MessageType = 59
	MessageType_MessageType_EthereumTxAck              MessageType = 60
	MessageType_MessageType_CharacterRequest           MessageType = 80
	MessageType_MessageType_CharacterAck               MessageType = 81
	MessageType_MessageType_RawTxAck                   MessageType = 82
	MessageType_MessageType_ApplyPolicies              MessageType = 83
	MessageType_MessageType_FlashHash                  MessageType = 84
	MessageType_MessageType_FlashWrite                 MessageType = 85
	MessageType_MessageType_FlashHashResponse          MessageType = 86
	MessageType_MessageType_DebugLinkFlashDump         MessageType = 87
	MessageType_MessageType_DebugLinkFlashDumpResponse MessageType = 88
	MessageType_MessageType_SoftReset                  MessageType = 89
	MessageType_MessageType_DebugLinkDecision          MessageType = 100
	MessageType_MessageType_DebugLinkGetState          MessageType = 101
	MessageType_MessageType_DebugLinkState             MessageType = 102
	MessageType_MessageType_DebugLinkStop              MessageType = 103
	MessageType_MessageType_DebugLinkLog               MessageType = 104
	MessageType_MessageType_DebugLinkFillConfig        MessageType = 105
	MessageType_MessageType_GetCoinTable               MessageType = 106
	MessageType_MessageType_CoinTable                  MessageType = 107
	MessageType_MessageType_ChangeWipeCode             MessageType = 108
	// Ripple
	MessageType_MessageType_RippleGetAddress MessageType = 400
	MessageType_MessageType_RippleAddress    MessageType = 401
	MessageType_MessageType_RippleSignTx     MessageType = 402
	MessageType_MessageType_RippleSignedTx   MessageType = 403
	// Ethereum
	MessageType_MessageType_EthereumSignMessage      MessageType = 500
	MessageType_MessageType_EthereumVerifyMessage    MessageType = 501
	MessageType_MessageType_EthereumMessageSignature MessageType = 502
	// EOS
	MessageType_MessageType_EosGetPublicKey    MessageType = 600
	MessageType_MessageType_EosPublicKey       MessageType = 601
	MessageType_MessageType_EosSignTx          MessageType = 602
	MessageType_MessageType_EosTxActionRequest MessageType = 603
	MessageType_MessageType_EosTxActionAck     MessageType = 604
	MessageType_MessageType_EosSignedTx        MessageType = 605
	// Nano
	MessageType_MessageType_NanoGetAddress MessageType = 700
	MessageType_MessageType_NanoAddress    MessageType = 701
	MessageType_MessageType_NanoSignTx     MessageType = 702
	MessageType_MessageType_NanoSignedTx   MessageType = 703
	// Binance
	MessageType_MessageType_BinanceGetAddress   MessageType = 800
	MessageType_MessageType_BinanceAddress      MessageType = 801
	MessageType_MessageType_BinanceGetPublicKey MessageType = 802
	MessageType_MessageType_BinancePublicKey    MessageType = 803
	MessageType_MessageType_BinanceSignTx       MessageType = 804
	MessageType_MessageType_BinanceTxRequest    MessageType = 805
	MessageType_MessageType_BinanceTransferMsg  MessageType = 806
	MessageType_MessageType_BinanceOrderMsg     MessageType = 807
	MessageType_MessageType_BinanceCancelMsg    MessageType = 808
	MessageType_MessageType_BinanceSignedTx     MessageType = 809
	// Cosmos
	MessageType_MessageType_CosmosGetAddress MessageType = 900
	MessageType_MessageType_CosmosAddress    MessageType = 901
	MessageType_MessageType_CosmosSignTx     MessageType = 902
	MessageType_MessageType_CosmosMsgRequest MessageType = 903
	MessageType_MessageType_CosmosMsgAck     MessageType = 904
	MessageType_MessageType_CosmosSignedTx   MessageType = 905
)

var MessageType_name = map[int32]string{
	0:   "MessageType_Initialize",
	1:   "MessageType_Ping",
	2:   "MessageType_Success",
	3:   "MessageType_Failure",
	4:   "MessageType_ChangePin",
	5:   "MessageType_WipeDevice",
	6:   "MessageType_FirmwareErase",
	7:   "MessageType_FirmwareUpload",
	9:   "MessageType_GetEntropy",
	10:  "MessageType_Entropy",
	11:  "MessageType_GetPublicKey",
	12:  "MessageType_PublicKey",
	13:  "MessageType_LoadDevice",
	14:  "MessageType_ResetDevice",
	15:  "MessageType_SignTx",
	17:  "MessageType_Features",
	18:  "MessageType_PinMatrixRequest",
	19:  "MessageType_PinMatrixAck",
	20:  "MessageType_Cancel",
	21:  "MessageType_TxRequest",
	22:  "MessageType_TxAck",
	23:  "MessageType_CipherKeyValue",
	24:  "MessageType_ClearSession",
	25:  "MessageType_ApplySettings",
	26:  "MessageType_ButtonRequest",
	27:  "MessageType_ButtonAck",
	29:  "MessageType_GetAddress",
	30:  "MessageType_Address",
	35:  "MessageType_EntropyRequest",
	36:  "MessageType_EntropyAck",
	38:  "MessageType_SignMessage",
	39:  "MessageType_VerifyMessage",
	40:  "MessageType_MessageSignature",
	41:  "MessageType_PassphraseRequest",
	42:  "MessageType_PassphraseAck",
	45:  "MessageType_RecoveryDevice",
	46:  "MessageType_WordRequest",
	47:  "MessageType_WordAck",
	48:  "MessageType_CipheredKeyValue",
	49:  "MessageType_EncryptMessage",
	50:  "MessageType_EncryptedMessage",
	51:  "MessageType_DecryptMessage",
	52:  "MessageType_DecryptedMessage",
	53:  "MessageType_SignIdentity",
	54:  "MessageType_SignedIdentity",
	55:  "MessageType_GetFeatures",
	56:  "MessageType_EthereumGetAddress",
	57:  "MessageType_EthereumAddress",
	58:  "MessageType_EthereumSignTx",
	59:  "MessageType_EthereumTxRequest",
	60:  "MessageType_EthereumTxAck",
	80:  "MessageType_CharacterRequest",
	81:  "MessageType_CharacterAck",
	82:  "MessageType_RawTxAck",
	83:  "MessageType_ApplyPolicies",
	84:  "MessageType_FlashHash",
	85:  "MessageType_FlashWrite",
	86:  "MessageType_FlashHashResponse",
	87:  "MessageType_DebugLinkFlashDump",
	88:  "MessageType_DebugLinkFlashDumpResponse",
	89:  "MessageType_SoftReset",
	100: "MessageType_DebugLinkDecision",
	101: "MessageType_DebugLinkGetState",
	102: "MessageType_DebugLinkState",
	103: "MessageType_DebugLinkStop",
	104: "MessageType_DebugLinkLog",
	105: "MessageType_DebugLinkFillConfig",
	106: "MessageType_GetCoinTable",
	107: "MessageType_CoinTable",
	108: "MessageType_ChangeWipeCode",
	400: "MessageType_RippleGetAddress",
	401: "MessageType_RippleAddress",
	402: "MessageType_RippleSignTx",
	403: "MessageType_RippleSignedTx",
	500: "MessageType_EthereumSignMessage",
	501: "MessageType_EthereumVerifyMessage",
	502: "MessageType_EthereumMessageSignature",
	600: "MessageType_EosGetPublicKey",
	601: "MessageType_EosPublicKey",
	602: "MessageType_EosSignTx",
	603: "MessageType_EosTxActionRequest",
	604: "MessageType_EosTxActionAck",
	605: "MessageType_EosSignedTx",
	700: "MessageType_NanoGetAddress",
	701: "MessageType_NanoAddress",
	702: "MessageType_NanoSignTx",
	703: "MessageType_NanoSignedTx",
	800: "MessageType_BinanceGetAddress",
	801: "MessageType_BinanceAddress",
	802: "MessageType_BinanceGetPublicKey",
	803: "MessageType_BinancePublicKey",
	804: "MessageType_BinanceSignTx",
	805: "MessageType_BinanceTxRequest",
	806: "MessageType_BinanceTransferMsg",
	807: "MessageType_BinanceOrderMsg",
	808: "MessageType_BinanceCancelMsg",
	809: "MessageType_BinanceSignedTx",
	900: "MessageType_CosmosGetAddress",
	901: "MessageType_CosmosAddress",
	902: "MessageType_CosmosSignTx",
	903: "MessageType_CosmosMsgRequest",
	904: "MessageType_CosmosMsgAck",
	905: "MessageType_CosmosSignedTx",
}
var MessageType_value = map[string]int32{
	"MessageType_Initialize":                 0,
	"MessageType_Ping":                       1,
	"MessageType_Success":                    2,
	"MessageType_Failure":                    3,
	"MessageType_ChangePin":                  4,
	"MessageType_WipeDevice":                 5,
	"MessageType_FirmwareErase":              6,
	"MessageType_FirmwareUpload":             7,
	"MessageType_GetEntropy":                 9,
	"MessageType_Entropy":                    10,
	"MessageType_GetPublicKey":               11,
	"MessageType_PublicKey":                  12,
	"MessageType_LoadDevice":                 13,
	"MessageType_ResetDevice":                14,
	"MessageType_SignTx":                     15,
	"MessageType_Features":                   17,
	"MessageType_PinMatrixRequest":           18,
	"MessageType_PinMatrixAck":               19,
	"MessageType_Cancel":                     20,
	"MessageType_TxRequest":                  21,
	"MessageType_TxAck":                      22,
	"MessageType_CipherKeyValue":             23,
	"MessageType_ClearSession":               24,
	"MessageType_ApplySettings":              25,
	"MessageType_ButtonRequest":              26,
	"MessageType_ButtonAck":                  27,
	"MessageType_GetAddress":                 29,
	"MessageType_Address":                    30,
	"MessageType_EntropyRequest":             35,
	"MessageType_EntropyAck":                 36,
	"MessageType_SignMessage":                38,
	"MessageType_VerifyMessage":              39,
	"MessageType_MessageSignature":           40,
	"MessageType_PassphraseRequest":          41,
	"MessageType_PassphraseAck":              42,
	"MessageType_RecoveryDevice":             45,
	"MessageType_WordRequest":                46,
	"MessageType_WordAck":                    47,
	"MessageType_CipheredKeyValue":           48,
	"MessageType_EncryptMessage":             49,
	"MessageType_EncryptedMessage":           50,
	"MessageType_DecryptMessage":             51,
	"MessageType_DecryptedMessage":           52,
	"MessageType_SignIdentity":               53,
	"MessageType_SignedIdentity":             54,
	"MessageType_GetFeatures":                55,
	"MessageType_EthereumGetAddress":         56,
	"MessageType_EthereumAddress":            57,
	"MessageType_EthereumSignTx":             58,
	"MessageType_EthereumTxRequest":          59,
	"MessageType_EthereumTxAck":              60,
	"MessageType_CharacterRequest":           80,
	"MessageType_CharacterAck":               81,
	"MessageType_RawTxAck":                   82,
	"MessageType_ApplyPolicies":              83,
	"MessageType_FlashHash":                  84,
	"MessageType_FlashWrite":                 85,
	"MessageType_FlashHashResponse":          86,
	"MessageType_DebugLinkFlashDump":         87,
	"MessageType_DebugLinkFlashDumpResponse": 88,
	"MessageType_SoftReset":                  89,
	"MessageType_DebugLinkDecision":          100,
	"MessageType_DebugLinkGetState":          101,
	"MessageType_DebugLinkState":             102,
	"MessageType_DebugLinkStop":              103,
	"MessageType_DebugLinkLog":               104,
	"MessageType_DebugLinkFillConfig":        105,
	"MessageType_GetCoinTable":               106,
	"MessageType_CoinTable":                  107,
	"MessageType_ChangeWipeCode":             108,
	"MessageType_RippleGetAddress":           400,
	"MessageType_RippleAddress":              401,
	"MessageType_RippleSignTx":               402,
	"MessageType_RippleSignedTx":             403,
	"MessageType_EthereumSignMessage":        500,
	"MessageType_EthereumVerifyMessage":      501,
	"MessageType_EthereumMessageSignature":   502,
	"MessageType_EosGetPublicKey":            600,
	"MessageType_EosPublicKey":               601,
	"MessageType_EosSignTx":                  602,
	"MessageType_EosTxActionRequest":         603,
	"MessageType_EosTxActionAck":             604,
	"MessageType_EosSignedTx":                605,
	"MessageType_NanoGetAddress":             700,
	"MessageType_NanoAddress":                701,
	"MessageType_NanoSignTx":                 702,
	"MessageType_NanoSignedTx":               703,
	"MessageType_BinanceGetAddress":          800,
	"MessageType_BinanceAddress":             801,
	"MessageType_BinanceGetPublicKey":        802,
	"MessageType_BinancePublicKey":           803,
	"MessageType_BinanceSignTx":              804,
	"MessageType_BinanceTxRequest":           805,
	"MessageType_BinanceTransferMsg":         806,
	"MessageType_BinanceOrderMsg":            807,
	"MessageType_BinanceCancelMsg":           808,
	"MessageType_BinanceSignedTx":            809,
	"MessageType_CosmosGetAddress":           900,
	"MessageType_CosmosAddress":              901,
	"MessageType_CosmosSignTx":               902,
	"MessageType_CosmosMsgRequest":           903,
	"MessageType_CosmosMsgAck":               904,
	"MessageType_CosmosSignedTx":             905,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{0}
}

// *
// Request: Reset device to default state and ask for device details
// @next Features
type Initialize struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Initialize) Reset()         { *m = Initialize{} }
func (m *Initialize) String() string { return proto.CompactTextString(m) }
func (*Initialize) ProtoMessage()    {}
func (*Initialize) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{0}
}
func (m *Initialize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Initialize.Unmarshal(m, b)
}
func (m *Initialize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Initialize.Marshal(b, m, deterministic)
}
func (dst *Initialize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Initialize.Merge(dst, src)
}
func (m *Initialize) XXX_Size() int {
	return xxx_messageInfo_Initialize.Size(m)
}
func (m *Initialize) XXX_DiscardUnknown() {
	xxx_messageInfo_Initialize.DiscardUnknown(m)
}

var xxx_messageInfo_Initialize proto.InternalMessageInfo

// *
// Request: Ask for device details (no device reset)
// @next Features
type GetFeatures struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeatures) Reset()         { *m = GetFeatures{} }
func (m *GetFeatures) String() string { return proto.CompactTextString(m) }
func (*GetFeatures) ProtoMessage()    {}
func (*GetFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{1}
}
func (m *GetFeatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeatures.Unmarshal(m, b)
}
func (m *GetFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeatures.Marshal(b, m, deterministic)
}
func (dst *GetFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeatures.Merge(dst, src)
}
func (m *GetFeatures) XXX_Size() int {
	return xxx_messageInfo_GetFeatures.Size(m)
}
func (m *GetFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeatures proto.InternalMessageInfo

// *
// Response: Reports various information about the device
// @prev Initialize
// @prev GetFeatures
type Features struct {
	Vendor               *string       `protobuf:"bytes,1,opt,name=vendor" json:"vendor,omitempty"`
	MajorVersion         *uint32       `protobuf:"varint,2,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	MinorVersion         *uint32       `protobuf:"varint,3,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
	PatchVersion         *uint32       `protobuf:"varint,4,opt,name=patch_version,json=patchVersion" json:"patch_version,omitempty"`
	BootloaderMode       *bool         `protobuf:"varint,5,opt,name=bootloader_mode,json=bootloaderMode" json:"bootloader_mode,omitempty"`
	DeviceId             *string       `protobuf:"bytes,6,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	PinProtection        *bool         `protobuf:"varint,7,opt,name=pin_protection,json=pinProtection" json:"pin_protection,omitempty"`
	PassphraseProtection *bool         `protobuf:"varint,8,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	Language             *string       `protobuf:"bytes,9,opt,name=language" json:"language,omitempty"`
	Label                *string       `protobuf:"bytes,10,opt,name=label" json:"label,omitempty"`
	Coins                []*CoinType   `protobuf:"bytes,11,rep,name=coins" json:"coins,omitempty"`
	Initialized          *bool         `protobuf:"varint,12,opt,name=initialized" json:"initialized,omitempty"`
	Revision             []byte        `protobuf:"bytes,13,opt,name=revision" json:"revision,omitempty"`
	BootloaderHash       []byte        `protobuf:"bytes,14,opt,name=bootloader_hash,json=bootloaderHash" json:"bootloader_hash,omitempty"`
	Imported             *bool         `protobuf:"varint,15,opt,name=imported" json:"imported,omitempty"`
	PinCached            *bool         `protobuf:"varint,16,opt,name=pin_cached,json=pinCached" json:"pin_cached,omitempty"`
	PassphraseCached     *bool         `protobuf:"varint,17,opt,name=passphrase_cached,json=passphraseCached" json:"passphrase_cached,omitempty"`
	Policies             []*PolicyType `protobuf:"bytes,18,rep,name=policies" json:"policies,omitempty"`
	Model                *string       `protobuf:"bytes,21,opt,name=model" json:"model,omitempty"`
	FirmwareVariant      *string       `protobuf:"bytes,22,opt,name=firmware_variant,json=firmwareVariant" json:"firmware_variant,omitempty"`
	FirmwareHash         []byte        `protobuf:"bytes,23,opt,name=firmware_hash,json=firmwareHash" json:"firmware_hash,omitempty"`
	NoBackup             *bool         `protobuf:"varint,24,opt,name=no_backup,json=noBackup" json:"no_backup,omitempty"`
	WipeCodeProtection   *bool         `protobuf:"varint,25,opt,name=wipe_code_protection,json=wipeCodeProtection" json:"wipe_code_protection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Features) Reset()         { *m = Features{} }
func (m *Features) String() string { return proto.CompactTextString(m) }
func (*Features) ProtoMessage()    {}
func (*Features) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{2}
}
func (m *Features) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Features.Unmarshal(m, b)
}
func (m *Features) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Features.Marshal(b, m, deterministic)
}
func (dst *Features) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Features.Merge(dst, src)
}
func (m *Features) XXX_Size() int {
	return xxx_messageInfo_Features.Size(m)
}
func (m *Features) XXX_DiscardUnknown() {
	xxx_messageInfo_Features.DiscardUnknown(m)
}

var xxx_messageInfo_Features proto.InternalMessageInfo

func (m *Features) GetVendor() string {
	if m != nil && m.Vendor != nil {
		return *m.Vendor
	}
	return ""
}

func (m *Features) GetMajorVersion() uint32 {
	if m != nil && m.MajorVersion != nil {
		return *m.MajorVersion
	}
	return 0
}

func (m *Features) GetMinorVersion() uint32 {
	if m != nil && m.MinorVersion != nil {
		return *m.MinorVersion
	}
	return 0
}

func (m *Features) GetPatchVersion() uint32 {
	if m != nil && m.PatchVersion != nil {
		return *m.PatchVersion
	}
	return 0
}

func (m *Features) GetBootloaderMode() bool {
	if m != nil && m.BootloaderMode != nil {
		return *m.BootloaderMode
	}
	return false
}

func (m *Features) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *Features) GetPinProtection() bool {
	if m != nil && m.PinProtection != nil {
		return *m.PinProtection
	}
	return false
}

func (m *Features) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

func (m *Features) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *Features) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *Features) GetCoins() []*CoinType {
	if m != nil {
		return m.Coins
	}
	return nil
}

func (m *Features) GetInitialized() bool {
	if m != nil && m.Initialized != nil {
		return *m.Initialized
	}
	return false
}

func (m *Features) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Features) GetBootloaderHash() []byte {
	if m != nil {
		return m.BootloaderHash
	}
	return nil
}

func (m *Features) GetImported() bool {
	if m != nil && m.Imported != nil {
		return *m.Imported
	}
	return false
}

func (m *Features) GetPinCached() bool {
	if m != nil && m.PinCached != nil {
		return *m.PinCached
	}
	return false
}

func (m *Features) GetPassphraseCached() bool {
	if m != nil && m.PassphraseCached != nil {
		return *m.PassphraseCached
	}
	return false
}

func (m *Features) GetPolicies() []*PolicyType {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *Features) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *Features) GetFirmwareVariant() string {
	if m != nil && m.FirmwareVariant != nil {
		return *m.FirmwareVariant
	}
	return ""
}

func (m *Features) GetFirmwareHash() []byte {
	if m != nil {
		return m.FirmwareHash
	}
	return nil
}

func (m *Features) GetNoBackup() bool {
	if m != nil && m.NoBackup != nil {
		return *m.NoBackup
	}
	return false
}

func (m *Features) GetWipeCodeProtection() bool {
	if m != nil && m.WipeCodeProtection != nil {
		return *m.WipeCodeProtection
	}
	return false
}

// *
// Request: Ask the device for its list of supported coins
// @next CoinTable
type GetCoinTable struct {
	Start                *uint32  `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	End                  *uint32  `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCoinTable) Reset()         { *m = GetCoinTable{} }
func (m *GetCoinTable) String() string { return proto.CompactTextString(m) }
func (*GetCoinTable) ProtoMessage()    {}
func (*GetCoinTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{3}
}
func (m *GetCoinTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCoinTable.Unmarshal(m, b)
}
func (m *GetCoinTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCoinTable.Marshal(b, m, deterministic)
}
func (dst *GetCoinTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCoinTable.Merge(dst, src)
}
func (m *GetCoinTable) XXX_Size() int {
	return xxx_messageInfo_GetCoinTable.Size(m)
}
func (m *GetCoinTable) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCoinTable.DiscardUnknown(m)
}

var xxx_messageInfo_GetCoinTable proto.InternalMessageInfo

func (m *GetCoinTable) GetStart() uint32 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *GetCoinTable) GetEnd() uint32 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

// *
// Response: A subset of the supported coins
// @prev GetCoinTable
type CoinTable struct {
	Table                []*CoinType `protobuf:"bytes,1,rep,name=table" json:"table,omitempty"`
	NumCoins             *uint32     `protobuf:"varint,2,opt,name=num_coins,json=numCoins" json:"num_coins,omitempty"`
	ChunkSize            *uint32     `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize" json:"chunk_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CoinTable) Reset()         { *m = CoinTable{} }
func (m *CoinTable) String() string { return proto.CompactTextString(m) }
func (*CoinTable) ProtoMessage()    {}
func (*CoinTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{4}
}
func (m *CoinTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinTable.Unmarshal(m, b)
}
func (m *CoinTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinTable.Marshal(b, m, deterministic)
}
func (dst *CoinTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinTable.Merge(dst, src)
}
func (m *CoinTable) XXX_Size() int {
	return xxx_messageInfo_CoinTable.Size(m)
}
func (m *CoinTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinTable.DiscardUnknown(m)
}

var xxx_messageInfo_CoinTable proto.InternalMessageInfo

func (m *CoinTable) GetTable() []*CoinType {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *CoinTable) GetNumCoins() uint32 {
	if m != nil && m.NumCoins != nil {
		return *m.NumCoins
	}
	return 0
}

func (m *CoinTable) GetChunkSize() uint32 {
	if m != nil && m.ChunkSize != nil {
		return *m.ChunkSize
	}
	return 0
}

// *
// Request: clear session (removes cached PIN, passphrase, etc).
// @next Success
type ClearSession struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearSession) Reset()         { *m = ClearSession{} }
func (m *ClearSession) String() string { return proto.CompactTextString(m) }
func (*ClearSession) ProtoMessage()    {}
func (*ClearSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{5}
}
func (m *ClearSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearSession.Unmarshal(m, b)
}
func (m *ClearSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearSession.Marshal(b, m, deterministic)
}
func (dst *ClearSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearSession.Merge(dst, src)
}
func (m *ClearSession) XXX_Size() int {
	return xxx_messageInfo_ClearSession.Size(m)
}
func (m *ClearSession) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearSession.DiscardUnknown(m)
}

var xxx_messageInfo_ClearSession proto.InternalMessageInfo

// *
// Request: change language and/or label of the device
// @next Success
// @next Failure
// @next ButtonRequest
// @next PinMatrixRequest
type ApplySettings struct {
	Language             *string  `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Label                *string  `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	UsePassphrase        *bool    `protobuf:"varint,3,opt,name=use_passphrase,json=usePassphrase" json:"use_passphrase,omitempty"`
	AutoLockDelayMs      *uint32  `protobuf:"varint,4,opt,name=auto_lock_delay_ms,json=autoLockDelayMs" json:"auto_lock_delay_ms,omitempty"`
	U2FCounter           *uint32  `protobuf:"varint,5,opt,name=u2f_counter,json=u2fCounter" json:"u2f_counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplySettings) Reset()         { *m = ApplySettings{} }
func (m *ApplySettings) String() string { return proto.CompactTextString(m) }
func (*ApplySettings) ProtoMessage()    {}
func (*ApplySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{6}
}
func (m *ApplySettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplySettings.Unmarshal(m, b)
}
func (m *ApplySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplySettings.Marshal(b, m, deterministic)
}
func (dst *ApplySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplySettings.Merge(dst, src)
}
func (m *ApplySettings) XXX_Size() int {
	return xxx_messageInfo_ApplySettings.Size(m)
}
func (m *ApplySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplySettings.DiscardUnknown(m)
}

var xxx_messageInfo_ApplySettings proto.InternalMessageInfo

func (m *ApplySettings) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *ApplySettings) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *ApplySettings) GetUsePassphrase() bool {
	if m != nil && m.UsePassphrase != nil {
		return *m.UsePassphrase
	}
	return false
}

func (m *ApplySettings) GetAutoLockDelayMs() uint32 {
	if m != nil && m.AutoLockDelayMs != nil {
		return *m.AutoLockDelayMs
	}
	return 0
}

func (m *ApplySettings) GetU2FCounter() uint32 {
	if m != nil && m.U2FCounter != nil {
		return *m.U2FCounter
	}
	return 0
}

// *
// Request: Starts workflow for setting/changing/removing the PIN
// @next ButtonRequest
// @next PinMatrixRequest
type ChangePin struct {
	Remove               *bool    `protobuf:"varint,1,opt,name=remove" json:"remove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePin) Reset()         { *m = ChangePin{} }
func (m *ChangePin) String() string { return proto.CompactTextString(m) }
func (*ChangePin) ProtoMessage()    {}
func (*ChangePin) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{7}
}
func (m *ChangePin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePin.Unmarshal(m, b)
}
func (m *ChangePin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePin.Marshal(b, m, deterministic)
}
func (dst *ChangePin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePin.Merge(dst, src)
}
func (m *ChangePin) XXX_Size() int {
	return xxx_messageInfo_ChangePin.Size(m)
}
func (m *ChangePin) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePin.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePin proto.InternalMessageInfo

func (m *ChangePin) GetRemove() bool {
	if m != nil && m.Remove != nil {
		return *m.Remove
	}
	return false
}

// *
// Request: Test if the device is alive, device sends back the message in Success response
// @next Success
type Ping struct {
	Message              *string  `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	ButtonProtection     *bool    `protobuf:"varint,2,opt,name=button_protection,json=buttonProtection" json:"button_protection,omitempty"`
	PinProtection        *bool    `protobuf:"varint,3,opt,name=pin_protection,json=pinProtection" json:"pin_protection,omitempty"`
	PassphraseProtection *bool    `protobuf:"varint,4,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{8}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Ping) GetButtonProtection() bool {
	if m != nil && m.ButtonProtection != nil {
		return *m.ButtonProtection
	}
	return false
}

func (m *Ping) GetPinProtection() bool {
	if m != nil && m.PinProtection != nil {
		return *m.PinProtection
	}
	return false
}

func (m *Ping) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

// *
// Response: Success of the previous request
type Success struct {
	Message              *string  `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{9}
}
func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (dst *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(dst, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

func (m *Success) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// *
// Response: Failure of the previous request
type Failure struct {
	Code                 *FailureType `protobuf:"varint,1,opt,name=code,enum=FailureType" json:"code,omitempty"`
	Message              *string      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Failure) Reset()         { *m = Failure{} }
func (m *Failure) String() string { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()    {}
func (*Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{10}
}
func (m *Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure.Unmarshal(m, b)
}
func (m *Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure.Marshal(b, m, deterministic)
}
func (dst *Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure.Merge(dst, src)
}
func (m *Failure) XXX_Size() int {
	return xxx_messageInfo_Failure.Size(m)
}
func (m *Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_Failure proto.InternalMessageInfo

func (m *Failure) GetCode() FailureType {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return FailureType_Failure_UnexpectedMessage
}

func (m *Failure) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// *
// Response: Device is waiting for HW button press.
// @next ButtonAck
// @next Cancel
type ButtonRequest struct {
	Code                 *ButtonRequestType `protobuf:"varint,1,opt,name=code,enum=ButtonRequestType" json:"code,omitempty"`
	Data                 *string            `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ButtonRequest) Reset()         { *m = ButtonRequest{} }
func (m *ButtonRequest) String() string { return proto.CompactTextString(m) }
func (*ButtonRequest) ProtoMessage()    {}
func (*ButtonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{11}
}
func (m *ButtonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonRequest.Unmarshal(m, b)
}
func (m *ButtonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonRequest.Marshal(b, m, deterministic)
}
func (dst *ButtonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonRequest.Merge(dst, src)
}
func (m *ButtonRequest) XXX_Size() int {
	return xxx_messageInfo_ButtonRequest.Size(m)
}
func (m *ButtonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonRequest proto.InternalMessageInfo

func (m *ButtonRequest) GetCode() ButtonRequestType {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ButtonRequestType_ButtonRequest_Other
}

func (m *ButtonRequest) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

// *
// Request: Computer agrees to wait for HW button press
// @prev ButtonRequest
type ButtonAck struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ButtonAck) Reset()         { *m = ButtonAck{} }
func (m *ButtonAck) String() string { return proto.CompactTextString(m) }
func (*ButtonAck) ProtoMessage()    {}
func (*ButtonAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{12}
}
func (m *ButtonAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonAck.Unmarshal(m, b)
}
func (m *ButtonAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonAck.Marshal(b, m, deterministic)
}
func (dst *ButtonAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonAck.Merge(dst, src)
}
func (m *ButtonAck) XXX_Size() int {
	return xxx_messageInfo_ButtonAck.Size(m)
}
func (m *ButtonAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonAck.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonAck proto.InternalMessageInfo

// *
// Response: Device is asking computer to show PIN matrix and awaits PIN encoded using this matrix scheme
// @next PinMatrixAck
// @next Cancel
type PinMatrixRequest struct {
	Type                 *PinMatrixRequestType `protobuf:"varint,1,opt,name=type,enum=PinMatrixRequestType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PinMatrixRequest) Reset()         { *m = PinMatrixRequest{} }
func (m *PinMatrixRequest) String() string { return proto.CompactTextString(m) }
func (*PinMatrixRequest) ProtoMessage()    {}
func (*PinMatrixRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{13}
}
func (m *PinMatrixRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinMatrixRequest.Unmarshal(m, b)
}
func (m *PinMatrixRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinMatrixRequest.Marshal(b, m, deterministic)
}
func (dst *PinMatrixRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinMatrixRequest.Merge(dst, src)
}
func (m *PinMatrixRequest) XXX_Size() int {
	return xxx_messageInfo_PinMatrixRequest.Size(m)
}
func (m *PinMatrixRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PinMatrixRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PinMatrixRequest proto.InternalMessageInfo

func (m *PinMatrixRequest) GetType() PinMatrixRequestType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PinMatrixRequestType_PinMatrixRequestType_Current
}

// *
// Request: Computer responds with encoded PIN
// @prev PinMatrixRequest
type PinMatrixAck struct {
	Pin                  *string  `protobuf:"bytes,1,req,name=pin" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinMatrixAck) Reset()         { *m = PinMatrixAck{} }
func (m *PinMatrixAck) String() string { return proto.CompactTextString(m) }
func (*PinMatrixAck) ProtoMessage()    {}
func (*PinMatrixAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{14}
}
func (m *PinMatrixAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinMatrixAck.Unmarshal(m, b)
}
func (m *PinMatrixAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinMatrixAck.Marshal(b, m, deterministic)
}
func (dst *PinMatrixAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinMatrixAck.Merge(dst, src)
}
func (m *PinMatrixAck) XXX_Size() int {
	return xxx_messageInfo_PinMatrixAck.Size(m)
}
func (m *PinMatrixAck) XXX_DiscardUnknown() {
	xxx_messageInfo_PinMatrixAck.DiscardUnknown(m)
}

var xxx_messageInfo_PinMatrixAck proto.InternalMessageInfo

func (m *PinMatrixAck) GetPin() string {
	if m != nil && m.Pin != nil {
		return *m.Pin
	}
	return ""
}

// *
// Request: Abort last operation that required user interaction
// @prev ButtonRequest
// @prev PinMatrixRequest
// @prev PassphraseRequest
type Cancel struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cancel) Reset()         { *m = Cancel{} }
func (m *Cancel) String() string { return proto.CompactTextString(m) }
func (*Cancel) ProtoMessage()    {}
func (*Cancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{15}
}
func (m *Cancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cancel.Unmarshal(m, b)
}
func (m *Cancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cancel.Marshal(b, m, deterministic)
}
func (dst *Cancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cancel.Merge(dst, src)
}
func (m *Cancel) XXX_Size() int {
	return xxx_messageInfo_Cancel.Size(m)
}
func (m *Cancel) XXX_DiscardUnknown() {
	xxx_messageInfo_Cancel.DiscardUnknown(m)
}

var xxx_messageInfo_Cancel proto.InternalMessageInfo

// *
// Response: Device awaits encryption passphrase
// @next PassphraseAck
// @next Cancel
type PassphraseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassphraseRequest) Reset()         { *m = PassphraseRequest{} }
func (m *PassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*PassphraseRequest) ProtoMessage()    {}
func (*PassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{16}
}
func (m *PassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassphraseRequest.Unmarshal(m, b)
}
func (m *PassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassphraseRequest.Marshal(b, m, deterministic)
}
func (dst *PassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassphraseRequest.Merge(dst, src)
}
func (m *PassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_PassphraseRequest.Size(m)
}
func (m *PassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PassphraseRequest proto.InternalMessageInfo

// *
// Request: Send passphrase back
// @prev PassphraseRequest
type PassphraseAck struct {
	Passphrase           *string  `protobuf:"bytes,1,req,name=passphrase" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassphraseAck) Reset()         { *m = PassphraseAck{} }
func (m *PassphraseAck) String() string { return proto.CompactTextString(m) }
func (*PassphraseAck) ProtoMessage()    {}
func (*PassphraseAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{17}
}
func (m *PassphraseAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassphraseAck.Unmarshal(m, b)
}
func (m *PassphraseAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassphraseAck.Marshal(b, m, deterministic)
}
func (dst *PassphraseAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassphraseAck.Merge(dst, src)
}
func (m *PassphraseAck) XXX_Size() int {
	return xxx_messageInfo_PassphraseAck.Size(m)
}
func (m *PassphraseAck) XXX_DiscardUnknown() {
	xxx_messageInfo_PassphraseAck.DiscardUnknown(m)
}

var xxx_messageInfo_PassphraseAck proto.InternalMessageInfo

func (m *PassphraseAck) GetPassphrase() string {
	if m != nil && m.Passphrase != nil {
		return *m.Passphrase
	}
	return ""
}

// *
// Request: Request a sample of random data generated by hardware RNG. May be used for testing.
// @next ButtonRequest
// @next Entropy
// @next Failure
type GetEntropy struct {
	Size                 *uint32  `protobuf:"varint,1,req,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEntropy) Reset()         { *m = GetEntropy{} }
func (m *GetEntropy) String() string { return proto.CompactTextString(m) }
func (*GetEntropy) ProtoMessage()    {}
func (*GetEntropy) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{18}
}
func (m *GetEntropy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEntropy.Unmarshal(m, b)
}
func (m *GetEntropy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEntropy.Marshal(b, m, deterministic)
}
func (dst *GetEntropy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntropy.Merge(dst, src)
}
func (m *GetEntropy) XXX_Size() int {
	return xxx_messageInfo_GetEntropy.Size(m)
}
func (m *GetEntropy) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntropy.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntropy proto.InternalMessageInfo

func (m *GetEntropy) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

// *
// Response: Reply with random data generated by internal RNG
// @prev GetEntropy
type Entropy struct {
	Entropy              []byte   `protobuf:"bytes,1,req,name=entropy" json:"entropy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entropy) Reset()         { *m = Entropy{} }
func (m *Entropy) String() string { return proto.CompactTextString(m) }
func (*Entropy) ProtoMessage()    {}
func (*Entropy) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{19}
}
func (m *Entropy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entropy.Unmarshal(m, b)
}
func (m *Entropy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entropy.Marshal(b, m, deterministic)
}
func (dst *Entropy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entropy.Merge(dst, src)
}
func (m *Entropy) XXX_Size() int {
	return xxx_messageInfo_Entropy.Size(m)
}
func (m *Entropy) XXX_DiscardUnknown() {
	xxx_messageInfo_Entropy.DiscardUnknown(m)
}

var xxx_messageInfo_Entropy proto.InternalMessageInfo

func (m *Entropy) GetEntropy() []byte {
	if m != nil {
		return m.Entropy
	}
	return nil
}

// *
// Request: Ask device for public key corresponding to address_n path
// @next PassphraseRequest
// @next PublicKey
// @next Failure
type GetPublicKey struct {
	AddressN             []uint32         `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	EcdsaCurveName       *string          `protobuf:"bytes,2,opt,name=ecdsa_curve_name,json=ecdsaCurveName" json:"ecdsa_curve_name,omitempty"`
	ShowDisplay          *bool            `protobuf:"varint,3,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"`
	CoinName             *string          `protobuf:"bytes,4,opt,name=coin_name,json=coinName,def=Bitcoin" json:"coin_name,omitempty"`
	ScriptType           *InputScriptType `protobuf:"varint,5,opt,name=script_type,json=scriptType,enum=InputScriptType,def=0" json:"script_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetPublicKey) Reset()         { *m = GetPublicKey{} }
func (m *GetPublicKey) String() string { return proto.CompactTextString(m) }
func (*GetPublicKey) ProtoMessage()    {}
func (*GetPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{20}
}
func (m *GetPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPublicKey.Unmarshal(m, b)
}
func (m *GetPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPublicKey.Marshal(b, m, deterministic)
}
func (dst *GetPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPublicKey.Merge(dst, src)
}
func (m *GetPublicKey) XXX_Size() int {
	return xxx_messageInfo_GetPublicKey.Size(m)
}
func (m *GetPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_GetPublicKey proto.InternalMessageInfo

const Default_GetPublicKey_CoinName string = "Bitcoin"
const Default_GetPublicKey_ScriptType InputScriptType = InputScriptType_SPENDADDRESS

func (m *GetPublicKey) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *GetPublicKey) GetEcdsaCurveName() string {
	if m != nil && m.EcdsaCurveName != nil {
		return *m.EcdsaCurveName
	}
	return ""
}

func (m *GetPublicKey) GetShowDisplay() bool {
	if m != nil && m.ShowDisplay != nil {
		return *m.ShowDisplay
	}
	return false
}

func (m *GetPublicKey) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return Default_GetPublicKey_CoinName
}

func (m *GetPublicKey) GetScriptType() InputScriptType {
	if m != nil && m.ScriptType != nil {
		return *m.ScriptType
	}
	return Default_GetPublicKey_ScriptType
}

// *
// Response: Contains public key derived from device private seed
// @prev GetPublicKey
type PublicKey struct {
	Node                 *HDNodeType `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Xpub                 *string     `protobuf:"bytes,2,opt,name=xpub" json:"xpub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{21}
}
func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (dst *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(dst, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *PublicKey) GetXpub() string {
	if m != nil && m.Xpub != nil {
		return *m.Xpub
	}
	return ""
}

// *
// Request: Ask device for address corresponding to address_n path
// @next PassphraseRequest
// @next Address
// @next Failure
type GetAddress struct {
	AddressN             []uint32                  `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	CoinName             *string                   `protobuf:"bytes,2,opt,name=coin_name,json=coinName,def=Bitcoin" json:"coin_name,omitempty"`
	ShowDisplay          *bool                     `protobuf:"varint,3,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"`
	Multisig             *MultisigRedeemScriptType `protobuf:"bytes,4,opt,name=multisig" json:"multisig,omitempty"`
	ScriptType           *InputScriptType          `protobuf:"varint,5,opt,name=script_type,json=scriptType,enum=InputScriptType,def=0" json:"script_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetAddress) Reset()         { *m = GetAddress{} }
func (m *GetAddress) String() string { return proto.CompactTextString(m) }
func (*GetAddress) ProtoMessage()    {}
func (*GetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{22}
}
func (m *GetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddress.Unmarshal(m, b)
}
func (m *GetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddress.Marshal(b, m, deterministic)
}
func (dst *GetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddress.Merge(dst, src)
}
func (m *GetAddress) XXX_Size() int {
	return xxx_messageInfo_GetAddress.Size(m)
}
func (m *GetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddress proto.InternalMessageInfo

const Default_GetAddress_CoinName string = "Bitcoin"
const Default_GetAddress_ScriptType InputScriptType = InputScriptType_SPENDADDRESS

func (m *GetAddress) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *GetAddress) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return Default_GetAddress_CoinName
}

func (m *GetAddress) GetShowDisplay() bool {
	if m != nil && m.ShowDisplay != nil {
		return *m.ShowDisplay
	}
	return false
}

func (m *GetAddress) GetMultisig() *MultisigRedeemScriptType {
	if m != nil {
		return m.Multisig
	}
	return nil
}

func (m *GetAddress) GetScriptType() InputScriptType {
	if m != nil && m.ScriptType != nil {
		return *m.ScriptType
	}
	return Default_GetAddress_ScriptType
}

// *
// Request: Ask device for Ethereum address corresponding to address_n path
// @next PassphraseRequest
// @next EthereumAddress
// @next Failure
type EthereumGetAddress struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	ShowDisplay          *bool    `protobuf:"varint,2,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumGetAddress) Reset()         { *m = EthereumGetAddress{} }
func (m *EthereumGetAddress) String() string { return proto.CompactTextString(m) }
func (*EthereumGetAddress) ProtoMessage()    {}
func (*EthereumGetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{23}
}
func (m *EthereumGetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumGetAddress.Unmarshal(m, b)
}
func (m *EthereumGetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumGetAddress.Marshal(b, m, deterministic)
}
func (dst *EthereumGetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumGetAddress.Merge(dst, src)
}
func (m *EthereumGetAddress) XXX_Size() int {
	return xxx_messageInfo_EthereumGetAddress.Size(m)
}
func (m *EthereumGetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumGetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumGetAddress proto.InternalMessageInfo

func (m *EthereumGetAddress) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *EthereumGetAddress) GetShowDisplay() bool {
	if m != nil && m.ShowDisplay != nil {
		return *m.ShowDisplay
	}
	return false
}

// *
// Response: Contains address derived from device private seed
// @prev GetAddress
type Address struct {
	Address              *string  `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{24}
}
func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (dst *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(dst, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

// *
// Response: Contains an Ethereum address derived from device private seed
// @prev EthereumGetAddress
type EthereumAddress struct {
	Address              []byte   `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	AddressStr           *string  `protobuf:"bytes,2,opt,name=address_str,json=addressStr" json:"address_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumAddress) Reset()         { *m = EthereumAddress{} }
func (m *EthereumAddress) String() string { return proto.CompactTextString(m) }
func (*EthereumAddress) ProtoMessage()    {}
func (*EthereumAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{25}
}
func (m *EthereumAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumAddress.Unmarshal(m, b)
}
func (m *EthereumAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumAddress.Marshal(b, m, deterministic)
}
func (dst *EthereumAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumAddress.Merge(dst, src)
}
func (m *EthereumAddress) XXX_Size() int {
	return xxx_messageInfo_EthereumAddress.Size(m)
}
func (m *EthereumAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumAddress proto.InternalMessageInfo

func (m *EthereumAddress) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *EthereumAddress) GetAddressStr() string {
	if m != nil && m.AddressStr != nil {
		return *m.AddressStr
	}
	return ""
}

// *
// Request: Request device to wipe all sensitive data and settings
// @next ButtonRequest
type WipeDevice struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WipeDevice) Reset()         { *m = WipeDevice{} }
func (m *WipeDevice) String() string { return proto.CompactTextString(m) }
func (*WipeDevice) ProtoMessage()    {}
func (*WipeDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{26}
}
func (m *WipeDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WipeDevice.Unmarshal(m, b)
}
func (m *WipeDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WipeDevice.Marshal(b, m, deterministic)
}
func (dst *WipeDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WipeDevice.Merge(dst, src)
}
func (m *WipeDevice) XXX_Size() int {
	return xxx_messageInfo_WipeDevice.Size(m)
}
func (m *WipeDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_WipeDevice.DiscardUnknown(m)
}

var xxx_messageInfo_WipeDevice proto.InternalMessageInfo

// *
// Request: Load seed and related internal settings from the computer
// @next ButtonRequest
// @next Success
// @next Failure
type LoadDevice struct {
	Mnemonic             *string     `protobuf:"bytes,1,opt,name=mnemonic" json:"mnemonic,omitempty"`
	Node                 *HDNodeType `protobuf:"bytes,2,opt,name=node" json:"node,omitempty"`
	Pin                  *string     `protobuf:"bytes,3,opt,name=pin" json:"pin,omitempty"`
	PassphraseProtection *bool       `protobuf:"varint,4,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	Language             *string     `protobuf:"bytes,5,opt,name=language,def=english" json:"language,omitempty"`
	Label                *string     `protobuf:"bytes,6,opt,name=label" json:"label,omitempty"`
	SkipChecksum         *bool       `protobuf:"varint,7,opt,name=skip_checksum,json=skipChecksum" json:"skip_checksum,omitempty"`
	U2FCounter           *uint32     `protobuf:"varint,8,opt,name=u2f_counter,json=u2fCounter" json:"u2f_counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LoadDevice) Reset()         { *m = LoadDevice{} }
func (m *LoadDevice) String() string { return proto.CompactTextString(m) }
func (*LoadDevice) ProtoMessage()    {}
func (*LoadDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{27}
}
func (m *LoadDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadDevice.Unmarshal(m, b)
}
func (m *LoadDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadDevice.Marshal(b, m, deterministic)
}
func (dst *LoadDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadDevice.Merge(dst, src)
}
func (m *LoadDevice) XXX_Size() int {
	return xxx_messageInfo_LoadDevice.Size(m)
}
func (m *LoadDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadDevice.DiscardUnknown(m)
}

var xxx_messageInfo_LoadDevice proto.InternalMessageInfo

const Default_LoadDevice_Language string = "english"

func (m *LoadDevice) GetMnemonic() string {
	if m != nil && m.Mnemonic != nil {
		return *m.Mnemonic
	}
	return ""
}

func (m *LoadDevice) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *LoadDevice) GetPin() string {
	if m != nil && m.Pin != nil {
		return *m.Pin
	}
	return ""
}

func (m *LoadDevice) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

func (m *LoadDevice) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_LoadDevice_Language
}

func (m *LoadDevice) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *LoadDevice) GetSkipChecksum() bool {
	if m != nil && m.SkipChecksum != nil {
		return *m.SkipChecksum
	}
	return false
}

func (m *LoadDevice) GetU2FCounter() uint32 {
	if m != nil && m.U2FCounter != nil {
		return *m.U2FCounter
	}
	return 0
}

// *
// Request: Ask device to do initialization involving user interaction
// @next EntropyRequest
// @next Failure
type ResetDevice struct {
	DisplayRandom        *bool    `protobuf:"varint,1,opt,name=display_random,json=displayRandom" json:"display_random,omitempty"`
	Strength             *uint32  `protobuf:"varint,2,opt,name=strength,def=256" json:"strength,omitempty"`
	PassphraseProtection *bool    `protobuf:"varint,3,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	PinProtection        *bool    `protobuf:"varint,4,opt,name=pin_protection,json=pinProtection" json:"pin_protection,omitempty"`
	Language             *string  `protobuf:"bytes,5,opt,name=language,def=english" json:"language,omitempty"`
	Label                *string  `protobuf:"bytes,6,opt,name=label" json:"label,omitempty"`
	NoBackup             *bool    `protobuf:"varint,7,opt,name=no_backup,json=noBackup" json:"no_backup,omitempty"`
	AutoLockDelayMs      *uint32  `protobuf:"varint,8,opt,name=auto_lock_delay_ms,json=autoLockDelayMs" json:"auto_lock_delay_ms,omitempty"`
	U2FCounter           *uint32  `protobuf:"varint,9,opt,name=u2f_counter,json=u2fCounter" json:"u2f_counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetDevice) Reset()         { *m = ResetDevice{} }
func (m *ResetDevice) String() string { return proto.CompactTextString(m) }
func (*ResetDevice) ProtoMessage()    {}
func (*ResetDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{28}
}
func (m *ResetDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetDevice.Unmarshal(m, b)
}
func (m *ResetDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetDevice.Marshal(b, m, deterministic)
}
func (dst *ResetDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetDevice.Merge(dst, src)
}
func (m *ResetDevice) XXX_Size() int {
	return xxx_messageInfo_ResetDevice.Size(m)
}
func (m *ResetDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetDevice.DiscardUnknown(m)
}

var xxx_messageInfo_ResetDevice proto.InternalMessageInfo

const Default_ResetDevice_Strength uint32 = 256
const Default_ResetDevice_Language string = "english"

func (m *ResetDevice) GetDisplayRandom() bool {
	if m != nil && m.DisplayRandom != nil {
		return *m.DisplayRandom
	}
	return false
}

func (m *ResetDevice) GetStrength() uint32 {
	if m != nil && m.Strength != nil {
		return *m.Strength
	}
	return Default_ResetDevice_Strength
}

func (m *ResetDevice) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

func (m *ResetDevice) GetPinProtection() bool {
	if m != nil && m.PinProtection != nil {
		return *m.PinProtection
	}
	return false
}

func (m *ResetDevice) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_ResetDevice_Language
}

func (m *ResetDevice) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *ResetDevice) GetNoBackup() bool {
	if m != nil && m.NoBackup != nil {
		return *m.NoBackup
	}
	return false
}

func (m *ResetDevice) GetAutoLockDelayMs() uint32 {
	if m != nil && m.AutoLockDelayMs != nil {
		return *m.AutoLockDelayMs
	}
	return 0
}

func (m *ResetDevice) GetU2FCounter() uint32 {
	if m != nil && m.U2FCounter != nil {
		return *m.U2FCounter
	}
	return 0
}

// *
// Response: Ask for additional entropy from host computer
// @prev ResetDevice
// @next EntropyAck
type EntropyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntropyRequest) Reset()         { *m = EntropyRequest{} }
func (m *EntropyRequest) String() string { return proto.CompactTextString(m) }
func (*EntropyRequest) ProtoMessage()    {}
func (*EntropyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{29}
}
func (m *EntropyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntropyRequest.Unmarshal(m, b)
}
func (m *EntropyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntropyRequest.Marshal(b, m, deterministic)
}
func (dst *EntropyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntropyRequest.Merge(dst, src)
}
func (m *EntropyRequest) XXX_Size() int {
	return xxx_messageInfo_EntropyRequest.Size(m)
}
func (m *EntropyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntropyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntropyRequest proto.InternalMessageInfo

// *
// Request: Provide additional entropy for seed generation function
// @prev EntropyRequest
// @next ButtonRequest
type EntropyAck struct {
	Entropy              []byte   `protobuf:"bytes,1,opt,name=entropy" json:"entropy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntropyAck) Reset()         { *m = EntropyAck{} }
func (m *EntropyAck) String() string { return proto.CompactTextString(m) }
func (*EntropyAck) ProtoMessage()    {}
func (*EntropyAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{30}
}
func (m *EntropyAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntropyAck.Unmarshal(m, b)
}
func (m *EntropyAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntropyAck.Marshal(b, m, deterministic)
}
func (dst *EntropyAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntropyAck.Merge(dst, src)
}
func (m *EntropyAck) XXX_Size() int {
	return xxx_messageInfo_EntropyAck.Size(m)
}
func (m *EntropyAck) XXX_DiscardUnknown() {
	xxx_messageInfo_EntropyAck.DiscardUnknown(m)
}

var xxx_messageInfo_EntropyAck proto.InternalMessageInfo

func (m *EntropyAck) GetEntropy() []byte {
	if m != nil {
		return m.Entropy
	}
	return nil
}

// *
// Request: Start recovery workflow asking user for specific words of mnemonic
// Used to recovery device safely even on untrusted computer.
// @next WordRequest
type RecoveryDevice struct {
	WordCount            *uint32  `protobuf:"varint,1,opt,name=word_count,json=wordCount" json:"word_count,omitempty"`
	PassphraseProtection *bool    `protobuf:"varint,2,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	PinProtection        *bool    `protobuf:"varint,3,opt,name=pin_protection,json=pinProtection" json:"pin_protection,omitempty"`
	Language             *string  `protobuf:"bytes,4,opt,name=language,def=english" json:"language,omitempty"`
	Label                *string  `protobuf:"bytes,5,opt,name=label" json:"label,omitempty"`
	EnforceWordlist      *bool    `protobuf:"varint,6,opt,name=enforce_wordlist,json=enforceWordlist" json:"enforce_wordlist,omitempty"`
	UseCharacterCipher   *bool    `protobuf:"varint,7,opt,name=use_character_cipher,json=useCharacterCipher" json:"use_character_cipher,omitempty"`
	AutoLockDelayMs      *uint32  `protobuf:"varint,8,opt,name=auto_lock_delay_ms,json=autoLockDelayMs" json:"auto_lock_delay_ms,omitempty"`
	U2FCounter           *uint32  `protobuf:"varint,9,opt,name=u2f_counter,json=u2fCounter" json:"u2f_counter,omitempty"`
	DryRun               *bool    `protobuf:"varint,10,opt,name=dry_run,json=dryRun" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoveryDevice) Reset()         { *m = RecoveryDevice{} }
func (m *RecoveryDevice) String() string { return proto.CompactTextString(m) }
func (*RecoveryDevice) ProtoMessage()    {}
func (*RecoveryDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{31}
}
func (m *RecoveryDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoveryDevice.Unmarshal(m, b)
}
func (m *RecoveryDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoveryDevice.Marshal(b, m, deterministic)
}
func (dst *RecoveryDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoveryDevice.Merge(dst, src)
}
func (m *RecoveryDevice) XXX_Size() int {
	return xxx_messageInfo_RecoveryDevice.Size(m)
}
func (m *RecoveryDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoveryDevice.DiscardUnknown(m)
}

var xxx_messageInfo_RecoveryDevice proto.InternalMessageInfo

const Default_RecoveryDevice_Language string = "english"

func (m *RecoveryDevice) GetWordCount() uint32 {
	if m != nil && m.WordCount != nil {
		return *m.WordCount
	}
	return 0
}

func (m *RecoveryDevice) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

func (m *RecoveryDevice) GetPinProtection() bool {
	if m != nil && m.PinProtection != nil {
		return *m.PinProtection
	}
	return false
}

func (m *RecoveryDevice) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_RecoveryDevice_Language
}

func (m *RecoveryDevice) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *RecoveryDevice) GetEnforceWordlist() bool {
	if m != nil && m.EnforceWordlist != nil {
		return *m.EnforceWordlist
	}
	return false
}

func (m *RecoveryDevice) GetUseCharacterCipher() bool {
	if m != nil && m.UseCharacterCipher != nil {
		return *m.UseCharacterCipher
	}
	return false
}

func (m *RecoveryDevice) GetAutoLockDelayMs() uint32 {
	if m != nil && m.AutoLockDelayMs != nil {
		return *m.AutoLockDelayMs
	}
	return 0
}

func (m *RecoveryDevice) GetU2FCounter() uint32 {
	if m != nil && m.U2FCounter != nil {
		return *m.U2FCounter
	}
	return 0
}

func (m *RecoveryDevice) GetDryRun() bool {
	if m != nil && m.DryRun != nil {
		return *m.DryRun
	}
	return false
}

// *
// Response: Device is waiting for user to enter word of the mnemonic
// Its position is shown only on device's internal display.
// @prev RecoveryDevice
// @prev WordAck
type WordRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordRequest) Reset()         { *m = WordRequest{} }
func (m *WordRequest) String() string { return proto.CompactTextString(m) }
func (*WordRequest) ProtoMessage()    {}
func (*WordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{32}
}
func (m *WordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordRequest.Unmarshal(m, b)
}
func (m *WordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordRequest.Marshal(b, m, deterministic)
}
func (dst *WordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordRequest.Merge(dst, src)
}
func (m *WordRequest) XXX_Size() int {
	return xxx_messageInfo_WordRequest.Size(m)
}
func (m *WordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WordRequest proto.InternalMessageInfo

// *
// Request: Computer replies with word from the mnemonic
// @prev WordRequest
// @next WordRequest
// @next Success
// @next Failure
type WordAck struct {
	Word                 *string  `protobuf:"bytes,1,req,name=word" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordAck) Reset()         { *m = WordAck{} }
func (m *WordAck) String() string { return proto.CompactTextString(m) }
func (*WordAck) ProtoMessage()    {}
func (*WordAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{33}
}
func (m *WordAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordAck.Unmarshal(m, b)
}
func (m *WordAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordAck.Marshal(b, m, deterministic)
}
func (dst *WordAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordAck.Merge(dst, src)
}
func (m *WordAck) XXX_Size() int {
	return xxx_messageInfo_WordAck.Size(m)
}
func (m *WordAck) XXX_DiscardUnknown() {
	xxx_messageInfo_WordAck.DiscardUnknown(m)
}

var xxx_messageInfo_WordAck proto.InternalMessageInfo

func (m *WordAck) GetWord() string {
	if m != nil && m.Word != nil {
		return *m.Word
	}
	return ""
}

// *
// Response: Device is waiting for user to enter character of the mnemonic using cipher.
// The cipher is shown on device's internal display.
// @prev RecoveryDevice
// @prev CharacterAck
type CharacterRequest struct {
	WordPos              *uint32  `protobuf:"varint,1,req,name=word_pos,json=wordPos" json:"word_pos,omitempty"`
	CharacterPos         *uint32  `protobuf:"varint,2,req,name=character_pos,json=characterPos" json:"character_pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharacterRequest) Reset()         { *m = CharacterRequest{} }
func (m *CharacterRequest) String() string { return proto.CompactTextString(m) }
func (*CharacterRequest) ProtoMessage()    {}
func (*CharacterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{34}
}
func (m *CharacterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterRequest.Unmarshal(m, b)
}
func (m *CharacterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterRequest.Marshal(b, m, deterministic)
}
func (dst *CharacterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterRequest.Merge(dst, src)
}
func (m *CharacterRequest) XXX_Size() int {
	return xxx_messageInfo_CharacterRequest.Size(m)
}
func (m *CharacterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterRequest proto.InternalMessageInfo

func (m *CharacterRequest) GetWordPos() uint32 {
	if m != nil && m.WordPos != nil {
		return *m.WordPos
	}
	return 0
}

func (m *CharacterRequest) GetCharacterPos() uint32 {
	if m != nil && m.CharacterPos != nil {
		return *m.CharacterPos
	}
	return 0
}

// *
// Request: Computer replies with character from the mnemonic using cipher
// @prev CharacterRequest
// @next CharacterRequest
// @next Failure
type CharacterAck struct {
	Character            *string  `protobuf:"bytes,1,opt,name=character" json:"character,omitempty"`
	Delete               *bool    `protobuf:"varint,2,opt,name=delete" json:"delete,omitempty"`
	Done                 *bool    `protobuf:"varint,3,opt,name=done" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharacterAck) Reset()         { *m = CharacterAck{} }
func (m *CharacterAck) String() string { return proto.CompactTextString(m) }
func (*CharacterAck) ProtoMessage()    {}
func (*CharacterAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{35}
}
func (m *CharacterAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterAck.Unmarshal(m, b)
}
func (m *CharacterAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterAck.Marshal(b, m, deterministic)
}
func (dst *CharacterAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterAck.Merge(dst, src)
}
func (m *CharacterAck) XXX_Size() int {
	return xxx_messageInfo_CharacterAck.Size(m)
}
func (m *CharacterAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterAck.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterAck proto.InternalMessageInfo

func (m *CharacterAck) GetCharacter() string {
	if m != nil && m.Character != nil {
		return *m.Character
	}
	return ""
}

func (m *CharacterAck) GetDelete() bool {
	if m != nil && m.Delete != nil {
		return *m.Delete
	}
	return false
}

func (m *CharacterAck) GetDone() bool {
	if m != nil && m.Done != nil {
		return *m.Done
	}
	return false
}

// *
// Request: Ask device to sign message
// @next MessageSignature
// @next Failure
type SignMessage struct {
	AddressN             []uint32         `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Message              []byte           `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	CoinName             *string          `protobuf:"bytes,3,opt,name=coin_name,json=coinName,def=Bitcoin" json:"coin_name,omitempty"`
	ScriptType           *InputScriptType `protobuf:"varint,4,opt,name=script_type,json=scriptType,enum=InputScriptType,def=0" json:"script_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SignMessage) Reset()         { *m = SignMessage{} }
func (m *SignMessage) String() string { return proto.CompactTextString(m) }
func (*SignMessage) ProtoMessage()    {}
func (*SignMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{36}
}
func (m *SignMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessage.Unmarshal(m, b)
}
func (m *SignMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessage.Marshal(b, m, deterministic)
}
func (dst *SignMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessage.Merge(dst, src)
}
func (m *SignMessage) XXX_Size() int {
	return xxx_messageInfo_SignMessage.Size(m)
}
func (m *SignMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessage proto.InternalMessageInfo

const Default_SignMessage_CoinName string = "Bitcoin"
const Default_SignMessage_ScriptType InputScriptType = InputScriptType_SPENDADDRESS

func (m *SignMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *SignMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignMessage) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return Default_SignMessage_CoinName
}

func (m *SignMessage) GetScriptType() InputScriptType {
	if m != nil && m.ScriptType != nil {
		return *m.ScriptType
	}
	return Default_SignMessage_ScriptType
}

// *
// Request: Ask device to verify message
// @next Success
// @next Failure
type VerifyMessage struct {
	Address              *string  `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CoinName             *string  `protobuf:"bytes,4,opt,name=coin_name,json=coinName,def=Bitcoin" json:"coin_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyMessage) Reset()         { *m = VerifyMessage{} }
func (m *VerifyMessage) String() string { return proto.CompactTextString(m) }
func (*VerifyMessage) ProtoMessage()    {}
func (*VerifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{37}
}
func (m *VerifyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyMessage.Unmarshal(m, b)
}
func (m *VerifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyMessage.Marshal(b, m, deterministic)
}
func (dst *VerifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyMessage.Merge(dst, src)
}
func (m *VerifyMessage) XXX_Size() int {
	return xxx_messageInfo_VerifyMessage.Size(m)
}
func (m *VerifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyMessage proto.InternalMessageInfo

const Default_VerifyMessage_CoinName string = "Bitcoin"

func (m *VerifyMessage) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *VerifyMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *VerifyMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *VerifyMessage) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return Default_VerifyMessage_CoinName
}

// *
// Response: Signed message
// @prev SignMessage
type MessageSignature struct {
	Address              *string  `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageSignature) Reset()         { *m = MessageSignature{} }
func (m *MessageSignature) String() string { return proto.CompactTextString(m) }
func (*MessageSignature) ProtoMessage()    {}
func (*MessageSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{38}
}
func (m *MessageSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageSignature.Unmarshal(m, b)
}
func (m *MessageSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageSignature.Marshal(b, m, deterministic)
}
func (dst *MessageSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageSignature.Merge(dst, src)
}
func (m *MessageSignature) XXX_Size() int {
	return xxx_messageInfo_MessageSignature.Size(m)
}
func (m *MessageSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageSignature.DiscardUnknown(m)
}

var xxx_messageInfo_MessageSignature proto.InternalMessageInfo

func (m *MessageSignature) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *MessageSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// *
// Request: Ask device to encrypt message
// @next EncryptedMessage
// @next Failure
type EncryptMessage struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	DisplayOnly          *bool    `protobuf:"varint,3,opt,name=display_only,json=displayOnly" json:"display_only,omitempty"`
	AddressN             []uint32 `protobuf:"varint,4,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	CoinName             *string  `protobuf:"bytes,5,opt,name=coin_name,json=coinName,def=Bitcoin" json:"coin_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptMessage) Reset()         { *m = EncryptMessage{} }
func (m *EncryptMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptMessage) ProtoMessage()    {}
func (*EncryptMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{39}
}
func (m *EncryptMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptMessage.Unmarshal(m, b)
}
func (m *EncryptMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptMessage.Marshal(b, m, deterministic)
}
func (dst *EncryptMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptMessage.Merge(dst, src)
}
func (m *EncryptMessage) XXX_Size() int {
	return xxx_messageInfo_EncryptMessage.Size(m)
}
func (m *EncryptMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptMessage proto.InternalMessageInfo

const Default_EncryptMessage_CoinName string = "Bitcoin"

func (m *EncryptMessage) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *EncryptMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *EncryptMessage) GetDisplayOnly() bool {
	if m != nil && m.DisplayOnly != nil {
		return *m.DisplayOnly
	}
	return false
}

func (m *EncryptMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *EncryptMessage) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return Default_EncryptMessage_CoinName
}

// *
// Response: Encrypted message
// @prev EncryptMessage
type EncryptedMessage struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce" json:"nonce,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,3,opt,name=hmac" json:"hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptedMessage) Reset()         { *m = EncryptedMessage{} }
func (m *EncryptedMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptedMessage) ProtoMessage()    {}
func (*EncryptedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{40}
}
func (m *EncryptedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptedMessage.Unmarshal(m, b)
}
func (m *EncryptedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptedMessage.Marshal(b, m, deterministic)
}
func (dst *EncryptedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedMessage.Merge(dst, src)
}
func (m *EncryptedMessage) XXX_Size() int {
	return xxx_messageInfo_EncryptedMessage.Size(m)
}
func (m *EncryptedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedMessage proto.InternalMessageInfo

func (m *EncryptedMessage) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *EncryptedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *EncryptedMessage) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

// *
// Request: Ask device to decrypt message
// @next Success
// @next Failure
type DecryptMessage struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,4,opt,name=hmac" json:"hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptMessage) Reset()         { *m = DecryptMessage{} }
func (m *DecryptMessage) String() string { return proto.CompactTextString(m) }
func (*DecryptMessage) ProtoMessage()    {}
func (*DecryptMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{41}
}
func (m *DecryptMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptMessage.Unmarshal(m, b)
}
func (m *DecryptMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptMessage.Marshal(b, m, deterministic)
}
func (dst *DecryptMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptMessage.Merge(dst, src)
}
func (m *DecryptMessage) XXX_Size() int {
	return xxx_messageInfo_DecryptMessage.Size(m)
}
func (m *DecryptMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptMessage proto.InternalMessageInfo

func (m *DecryptMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *DecryptMessage) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *DecryptMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DecryptMessage) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

// *
// Response: Decrypted message
// @prev DecryptedMessage
type DecryptedMessage struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Address              *string  `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptedMessage) Reset()         { *m = DecryptedMessage{} }
func (m *DecryptedMessage) String() string { return proto.CompactTextString(m) }
func (*DecryptedMessage) ProtoMessage()    {}
func (*DecryptedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{42}
}
func (m *DecryptedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptedMessage.Unmarshal(m, b)
}
func (m *DecryptedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptedMessage.Marshal(b, m, deterministic)
}
func (dst *DecryptedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptedMessage.Merge(dst, src)
}
func (m *DecryptedMessage) XXX_Size() int {
	return xxx_messageInfo_DecryptedMessage.Size(m)
}
func (m *DecryptedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptedMessage proto.InternalMessageInfo

func (m *DecryptedMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DecryptedMessage) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

// *
// Request: Ask device to encrypt or decrypt value of given key
// @next CipheredKeyValue
// @next Failure
type CipherKeyValue struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Key                  *string  `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Encrypt              *bool    `protobuf:"varint,4,opt,name=encrypt" json:"encrypt,omitempty"`
	AskOnEncrypt         *bool    `protobuf:"varint,5,opt,name=ask_on_encrypt,json=askOnEncrypt" json:"ask_on_encrypt,omitempty"`
	AskOnDecrypt         *bool    `protobuf:"varint,6,opt,name=ask_on_decrypt,json=askOnDecrypt" json:"ask_on_decrypt,omitempty"`
	Iv                   []byte   `protobuf:"bytes,7,opt,name=iv" json:"iv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipherKeyValue) Reset()         { *m = CipherKeyValue{} }
func (m *CipherKeyValue) String() string { return proto.CompactTextString(m) }
func (*CipherKeyValue) ProtoMessage()    {}
func (*CipherKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{43}
}
func (m *CipherKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherKeyValue.Unmarshal(m, b)
}
func (m *CipherKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherKeyValue.Marshal(b, m, deterministic)
}
func (dst *CipherKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherKeyValue.Merge(dst, src)
}
func (m *CipherKeyValue) XXX_Size() int {
	return xxx_messageInfo_CipherKeyValue.Size(m)
}
func (m *CipherKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CipherKeyValue proto.InternalMessageInfo

func (m *CipherKeyValue) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *CipherKeyValue) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CipherKeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CipherKeyValue) GetEncrypt() bool {
	if m != nil && m.Encrypt != nil {
		return *m.Encrypt
	}
	return false
}

func (m *CipherKeyValue) GetAskOnEncrypt() bool {
	if m != nil && m.AskOnEncrypt != nil {
		return *m.AskOnEncrypt
	}
	return false
}

func (m *CipherKeyValue) GetAskOnDecrypt() bool {
	if m != nil && m.AskOnDecrypt != nil {
		return *m.AskOnDecrypt
	}
	return false
}

func (m *CipherKeyValue) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

// *
// Response: Return ciphered/deciphered value
// @prev CipherKeyValue
type CipheredKeyValue struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipheredKeyValue) Reset()         { *m = CipheredKeyValue{} }
func (m *CipheredKeyValue) String() string { return proto.CompactTextString(m) }
func (*CipheredKeyValue) ProtoMessage()    {}
func (*CipheredKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{44}
}
func (m *CipheredKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipheredKeyValue.Unmarshal(m, b)
}
func (m *CipheredKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipheredKeyValue.Marshal(b, m, deterministic)
}
func (dst *CipheredKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipheredKeyValue.Merge(dst, src)
}
func (m *CipheredKeyValue) XXX_Size() int {
	return xxx_messageInfo_CipheredKeyValue.Size(m)
}
func (m *CipheredKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CipheredKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CipheredKeyValue proto.InternalMessageInfo

func (m *CipheredKeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// *
// Request: Ask device to sign transaction
// @next PassphraseRequest
// @next PinMatrixRequest
// @next TxRequest
// @next Failure
type SignTx struct {
	OutputsCount         *uint32  `protobuf:"varint,1,req,name=outputs_count,json=outputsCount" json:"outputs_count,omitempty"`
	InputsCount          *uint32  `protobuf:"varint,2,req,name=inputs_count,json=inputsCount" json:"inputs_count,omitempty"`
	CoinName             *string  `protobuf:"bytes,3,opt,name=coin_name,json=coinName,def=Bitcoin" json:"coin_name,omitempty"`
	Version              *uint32  `protobuf:"varint,4,opt,name=version,def=1" json:"version,omitempty"`
	LockTime             *uint32  `protobuf:"varint,5,opt,name=lock_time,json=lockTime,def=0" json:"lock_time,omitempty"`
	Expiry               *uint32  `protobuf:"varint,6,opt,name=expiry" json:"expiry,omitempty"`
	Overwintered         *bool    `protobuf:"varint,7,opt,name=overwintered" json:"overwintered,omitempty"`
	VersionGroupId       *uint32  `protobuf:"varint,8,opt,name=version_group_id,json=versionGroupId" json:"version_group_id,omitempty"`
	BranchId             *uint32  `protobuf:"varint,10,opt,name=branch_id,json=branchId" json:"branch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTx) Reset()         { *m = SignTx{} }
func (m *SignTx) String() string { return proto.CompactTextString(m) }
func (*SignTx) ProtoMessage()    {}
func (*SignTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{45}
}
func (m *SignTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTx.Unmarshal(m, b)
}
func (m *SignTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTx.Marshal(b, m, deterministic)
}
func (dst *SignTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTx.Merge(dst, src)
}
func (m *SignTx) XXX_Size() int {
	return xxx_messageInfo_SignTx.Size(m)
}
func (m *SignTx) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTx.DiscardUnknown(m)
}

var xxx_messageInfo_SignTx proto.InternalMessageInfo

const Default_SignTx_CoinName string = "Bitcoin"
const Default_SignTx_Version uint32 = 1
const Default_SignTx_LockTime uint32 = 0

func (m *SignTx) GetOutputsCount() uint32 {
	if m != nil && m.OutputsCount != nil {
		return *m.OutputsCount
	}
	return 0
}

func (m *SignTx) GetInputsCount() uint32 {
	if m != nil && m.InputsCount != nil {
		return *m.InputsCount
	}
	return 0
}

func (m *SignTx) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return Default_SignTx_CoinName
}

func (m *SignTx) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_SignTx_Version
}

func (m *SignTx) GetLockTime() uint32 {
	if m != nil && m.LockTime != nil {
		return *m.LockTime
	}
	return Default_SignTx_LockTime
}

func (m *SignTx) GetExpiry() uint32 {
	if m != nil && m.Expiry != nil {
		return *m.Expiry
	}
	return 0
}

func (m *SignTx) GetOverwintered() bool {
	if m != nil && m.Overwintered != nil {
		return *m.Overwintered
	}
	return false
}

func (m *SignTx) GetVersionGroupId() uint32 {
	if m != nil && m.VersionGroupId != nil {
		return *m.VersionGroupId
	}
	return 0
}

func (m *SignTx) GetBranchId() uint32 {
	if m != nil && m.BranchId != nil {
		return *m.BranchId
	}
	return 0
}

// *
// Response: Device asks for information for signing transaction or returns the last result
// If request_index is set, device awaits TxAck message (with fields filled in according to request_type)
// If signature_index is set, 'signature' contains signed input of signature_index's input
// @prev SignTx
// @prev TxAck
type TxRequest struct {
	RequestType          *RequestType             `protobuf:"varint,1,opt,name=request_type,json=requestType,enum=RequestType" json:"request_type,omitempty"`
	Details              *TxRequestDetailsType    `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
	Serialized           *TxRequestSerializedType `protobuf:"bytes,3,opt,name=serialized" json:"serialized,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{46}
}
func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (dst *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(dst, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetRequestType() RequestType {
	if m != nil && m.RequestType != nil {
		return *m.RequestType
	}
	return RequestType_TXINPUT
}

func (m *TxRequest) GetDetails() *TxRequestDetailsType {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TxRequest) GetSerialized() *TxRequestSerializedType {
	if m != nil {
		return m.Serialized
	}
	return nil
}

// *
// Request: Reported transaction data
// @prev TxRequest
// @next TxRequest
type TxAck struct {
	Tx                   *TransactionType `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TxAck) Reset()         { *m = TxAck{} }
func (m *TxAck) String() string { return proto.CompactTextString(m) }
func (*TxAck) ProtoMessage()    {}
func (*TxAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{47}
}
func (m *TxAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxAck.Unmarshal(m, b)
}
func (m *TxAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxAck.Marshal(b, m, deterministic)
}
func (dst *TxAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxAck.Merge(dst, src)
}
func (m *TxAck) XXX_Size() int {
	return xxx_messageInfo_TxAck.Size(m)
}
func (m *TxAck) XXX_DiscardUnknown() {
	xxx_messageInfo_TxAck.DiscardUnknown(m)
}

var xxx_messageInfo_TxAck proto.InternalMessageInfo

func (m *TxAck) GetTx() *TransactionType {
	if m != nil {
		return m.Tx
	}
	return nil
}

// *
// Request: Reported raw transaction data
// @prev TxRequest
// @next TxRequest
type RawTxAck struct {
	Tx                   *RawTransactionType `protobuf:"bytes,1,opt,name=tx" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RawTxAck) Reset()         { *m = RawTxAck{} }
func (m *RawTxAck) String() string { return proto.CompactTextString(m) }
func (*RawTxAck) ProtoMessage()    {}
func (*RawTxAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{48}
}
func (m *RawTxAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTxAck.Unmarshal(m, b)
}
func (m *RawTxAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTxAck.Marshal(b, m, deterministic)
}
func (dst *RawTxAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTxAck.Merge(dst, src)
}
func (m *RawTxAck) XXX_Size() int {
	return xxx_messageInfo_RawTxAck.Size(m)
}
func (m *RawTxAck) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTxAck.DiscardUnknown(m)
}

var xxx_messageInfo_RawTxAck proto.InternalMessageInfo

func (m *RawTxAck) GetTx() *RawTransactionType {
	if m != nil {
		return m.Tx
	}
	return nil
}

// *
// Request: Ask device to sign transaction
// All fields are optional from the protocol's point of view. Each field defaults to value `0` if missing.
// Note: the first at most 1024 bytes of data MUST be transmitted as part of this message.
// @next PassphraseRequest
// @next PinMatrixRequest
// @next EthereumTxRequest
// @next Failure
type EthereumSignTx struct {
	AddressN             []uint32           `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Nonce                []byte             `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
	GasPrice             []byte             `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice" json:"gas_price,omitempty"`
	GasLimit             []byte             `protobuf:"bytes,4,opt,name=gas_limit,json=gasLimit" json:"gas_limit,omitempty"`
	To                   []byte             `protobuf:"bytes,5,opt,name=to" json:"to,omitempty"`
	Value                []byte             `protobuf:"bytes,6,opt,name=value" json:"value,omitempty"`
	DataInitialChunk     []byte             `protobuf:"bytes,7,opt,name=data_initial_chunk,json=dataInitialChunk" json:"data_initial_chunk,omitempty"`
	DataLength           *uint32            `protobuf:"varint,8,opt,name=data_length,json=dataLength" json:"data_length,omitempty"`
	ToAddressN           []uint32           `protobuf:"varint,9,rep,name=to_address_n,json=toAddressN" json:"to_address_n,omitempty"`
	AddressType          *OutputAddressType `protobuf:"varint,10,opt,name=address_type,json=addressType,enum=OutputAddressType" json:"address_type,omitempty"`
	ExchangeType         *ExchangeType      `protobuf:"bytes,11,opt,name=exchange_type,json=exchangeType" json:"exchange_type,omitempty"`
	ChainId              *uint32            `protobuf:"varint,12,opt,name=chain_id,json=chainId" json:"chain_id,omitempty"`
	TokenValue           []byte             `protobuf:"bytes,100,opt,name=token_value,json=tokenValue" json:"token_value,omitempty"`
	TokenTo              []byte             `protobuf:"bytes,101,opt,name=token_to,json=tokenTo" json:"token_to,omitempty"`
	TokenShortcut        *string            `protobuf:"bytes,102,opt,name=token_shortcut,json=tokenShortcut" json:"token_shortcut,omitempty"`
	TxType               *uint32            `protobuf:"varint,103,opt,name=tx_type,json=txType" json:"tx_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EthereumSignTx) Reset()         { *m = EthereumSignTx{} }
func (m *EthereumSignTx) String() string { return proto.CompactTextString(m) }
func (*EthereumSignTx) ProtoMessage()    {}
func (*EthereumSignTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{49}
}
func (m *EthereumSignTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumSignTx.Unmarshal(m, b)
}
func (m *EthereumSignTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumSignTx.Marshal(b, m, deterministic)
}
func (dst *EthereumSignTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumSignTx.Merge(dst, src)
}
func (m *EthereumSignTx) XXX_Size() int {
	return xxx_messageInfo_EthereumSignTx.Size(m)
}
func (m *EthereumSignTx) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumSignTx.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumSignTx proto.InternalMessageInfo

func (m *EthereumSignTx) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *EthereumSignTx) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *EthereumSignTx) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *EthereumSignTx) GetGasLimit() []byte {
	if m != nil {
		return m.GasLimit
	}
	return nil
}

func (m *EthereumSignTx) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *EthereumSignTx) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *EthereumSignTx) GetDataInitialChunk() []byte {
	if m != nil {
		return m.DataInitialChunk
	}
	return nil
}

func (m *EthereumSignTx) GetDataLength() uint32 {
	if m != nil && m.DataLength != nil {
		return *m.DataLength
	}
	return 0
}

func (m *EthereumSignTx) GetToAddressN() []uint32 {
	if m != nil {
		return m.ToAddressN
	}
	return nil
}

func (m *EthereumSignTx) GetAddressType() OutputAddressType {
	if m != nil && m.AddressType != nil {
		return *m.AddressType
	}
	return OutputAddressType_SPEND
}

func (m *EthereumSignTx) GetExchangeType() *ExchangeType {
	if m != nil {
		return m.ExchangeType
	}
	return nil
}

func (m *EthereumSignTx) GetChainId() uint32 {
	if m != nil && m.ChainId != nil {
		return *m.ChainId
	}
	return 0
}

func (m *EthereumSignTx) GetTokenValue() []byte {
	if m != nil {
		return m.TokenValue
	}
	return nil
}

func (m *EthereumSignTx) GetTokenTo() []byte {
	if m != nil {
		return m.TokenTo
	}
	return nil
}

func (m *EthereumSignTx) GetTokenShortcut() string {
	if m != nil && m.TokenShortcut != nil {
		return *m.TokenShortcut
	}
	return ""
}

func (m *EthereumSignTx) GetTxType() uint32 {
	if m != nil && m.TxType != nil {
		return *m.TxType
	}
	return 0
}

// *
// Response: Device asks for more data from transaction payload, or returns the signature.
// If data_length is set, device awaits that many more bytes of payload.
// Otherwise, the signature_* fields contain the computed transaction signature. All three fields will be present.
// @prev EthereumSignTx
// @next EthereumTxAck
type EthereumTxRequest struct {
	DataLength           *uint32  `protobuf:"varint,1,opt,name=data_length,json=dataLength" json:"data_length,omitempty"`
	SignatureV           *uint32  `protobuf:"varint,2,opt,name=signature_v,json=signatureV" json:"signature_v,omitempty"`
	SignatureR           []byte   `protobuf:"bytes,3,opt,name=signature_r,json=signatureR" json:"signature_r,omitempty"`
	SignatureS           []byte   `protobuf:"bytes,4,opt,name=signature_s,json=signatureS" json:"signature_s,omitempty"`
	Hash                 []byte   `protobuf:"bytes,5,opt,name=hash" json:"hash,omitempty"`
	SignatureDer         []byte   `protobuf:"bytes,6,opt,name=signature_der,json=signatureDer" json:"signature_der,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumTxRequest) Reset()         { *m = EthereumTxRequest{} }
func (m *EthereumTxRequest) String() string { return proto.CompactTextString(m) }
func (*EthereumTxRequest) ProtoMessage()    {}
func (*EthereumTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{50}
}
func (m *EthereumTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumTxRequest.Unmarshal(m, b)
}
func (m *EthereumTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumTxRequest.Marshal(b, m, deterministic)
}
func (dst *EthereumTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumTxRequest.Merge(dst, src)
}
func (m *EthereumTxRequest) XXX_Size() int {
	return xxx_messageInfo_EthereumTxRequest.Size(m)
}
func (m *EthereumTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumTxRequest proto.InternalMessageInfo

func (m *EthereumTxRequest) GetDataLength() uint32 {
	if m != nil && m.DataLength != nil {
		return *m.DataLength
	}
	return 0
}

func (m *EthereumTxRequest) GetSignatureV() uint32 {
	if m != nil && m.SignatureV != nil {
		return *m.SignatureV
	}
	return 0
}

func (m *EthereumTxRequest) GetSignatureR() []byte {
	if m != nil {
		return m.SignatureR
	}
	return nil
}

func (m *EthereumTxRequest) GetSignatureS() []byte {
	if m != nil {
		return m.SignatureS
	}
	return nil
}

func (m *EthereumTxRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *EthereumTxRequest) GetSignatureDer() []byte {
	if m != nil {
		return m.SignatureDer
	}
	return nil
}

// *
// Request: Transaction payload data.
// @prev EthereumTxRequest
// @next EthereumTxRequest
type EthereumTxAck struct {
	DataChunk            []byte   `protobuf:"bytes,1,opt,name=data_chunk,json=dataChunk" json:"data_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumTxAck) Reset()         { *m = EthereumTxAck{} }
func (m *EthereumTxAck) String() string { return proto.CompactTextString(m) }
func (*EthereumTxAck) ProtoMessage()    {}
func (*EthereumTxAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{51}
}
func (m *EthereumTxAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumTxAck.Unmarshal(m, b)
}
func (m *EthereumTxAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumTxAck.Marshal(b, m, deterministic)
}
func (dst *EthereumTxAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumTxAck.Merge(dst, src)
}
func (m *EthereumTxAck) XXX_Size() int {
	return xxx_messageInfo_EthereumTxAck.Size(m)
}
func (m *EthereumTxAck) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumTxAck.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumTxAck proto.InternalMessageInfo

func (m *EthereumTxAck) GetDataChunk() []byte {
	if m != nil {
		return m.DataChunk
	}
	return nil
}

// *
// Request: Ask device to sign message
// @next EthereumMessageSignature
// @next Failure
type EthereumSignMessage struct {
	AddressN             []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Message              []byte   `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumSignMessage) Reset()         { *m = EthereumSignMessage{} }
func (m *EthereumSignMessage) String() string { return proto.CompactTextString(m) }
func (*EthereumSignMessage) ProtoMessage()    {}
func (*EthereumSignMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{52}
}
func (m *EthereumSignMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumSignMessage.Unmarshal(m, b)
}
func (m *EthereumSignMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumSignMessage.Marshal(b, m, deterministic)
}
func (dst *EthereumSignMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumSignMessage.Merge(dst, src)
}
func (m *EthereumSignMessage) XXX_Size() int {
	return xxx_messageInfo_EthereumSignMessage.Size(m)
}
func (m *EthereumSignMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumSignMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumSignMessage proto.InternalMessageInfo

func (m *EthereumSignMessage) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *EthereumSignMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

// *
// Request: Ask device to verify message
// @next Success
// @next Failure
type EthereumVerifyMessage struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumVerifyMessage) Reset()         { *m = EthereumVerifyMessage{} }
func (m *EthereumVerifyMessage) String() string { return proto.CompactTextString(m) }
func (*EthereumVerifyMessage) ProtoMessage()    {}
func (*EthereumVerifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{53}
}
func (m *EthereumVerifyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumVerifyMessage.Unmarshal(m, b)
}
func (m *EthereumVerifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumVerifyMessage.Marshal(b, m, deterministic)
}
func (dst *EthereumVerifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumVerifyMessage.Merge(dst, src)
}
func (m *EthereumVerifyMessage) XXX_Size() int {
	return xxx_messageInfo_EthereumVerifyMessage.Size(m)
}
func (m *EthereumVerifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumVerifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumVerifyMessage proto.InternalMessageInfo

func (m *EthereumVerifyMessage) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *EthereumVerifyMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *EthereumVerifyMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

// *
// Response: Signed message
// @prev EthereumSignMessage
type EthereumMessageSignature struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumMessageSignature) Reset()         { *m = EthereumMessageSignature{} }
func (m *EthereumMessageSignature) String() string { return proto.CompactTextString(m) }
func (*EthereumMessageSignature) ProtoMessage()    {}
func (*EthereumMessageSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{54}
}
func (m *EthereumMessageSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumMessageSignature.Unmarshal(m, b)
}
func (m *EthereumMessageSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumMessageSignature.Marshal(b, m, deterministic)
}
func (dst *EthereumMessageSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumMessageSignature.Merge(dst, src)
}
func (m *EthereumMessageSignature) XXX_Size() int {
	return xxx_messageInfo_EthereumMessageSignature.Size(m)
}
func (m *EthereumMessageSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumMessageSignature.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumMessageSignature proto.InternalMessageInfo

func (m *EthereumMessageSignature) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *EthereumMessageSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// *
// Request: Ask device to sign identity
// @next SignedIdentity
// @next Failure
type SignIdentity struct {
	Identity             *IdentityType `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	ChallengeHidden      []byte        `protobuf:"bytes,2,opt,name=challenge_hidden,json=challengeHidden" json:"challenge_hidden,omitempty"`
	ChallengeVisual      *string       `protobuf:"bytes,3,opt,name=challenge_visual,json=challengeVisual" json:"challenge_visual,omitempty"`
	EcdsaCurveName       *string       `protobuf:"bytes,4,opt,name=ecdsa_curve_name,json=ecdsaCurveName" json:"ecdsa_curve_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SignIdentity) Reset()         { *m = SignIdentity{} }
func (m *SignIdentity) String() string { return proto.CompactTextString(m) }
func (*SignIdentity) ProtoMessage()    {}
func (*SignIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{55}
}
func (m *SignIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignIdentity.Unmarshal(m, b)
}
func (m *SignIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignIdentity.Marshal(b, m, deterministic)
}
func (dst *SignIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignIdentity.Merge(dst, src)
}
func (m *SignIdentity) XXX_Size() int {
	return xxx_messageInfo_SignIdentity.Size(m)
}
func (m *SignIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_SignIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_SignIdentity proto.InternalMessageInfo

func (m *SignIdentity) GetIdentity() *IdentityType {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *SignIdentity) GetChallengeHidden() []byte {
	if m != nil {
		return m.ChallengeHidden
	}
	return nil
}

func (m *SignIdentity) GetChallengeVisual() string {
	if m != nil && m.ChallengeVisual != nil {
		return *m.ChallengeVisual
	}
	return ""
}

func (m *SignIdentity) GetEcdsaCurveName() string {
	if m != nil && m.EcdsaCurveName != nil {
		return *m.EcdsaCurveName
	}
	return ""
}

// *
// Response: Device provides signed identity
// @prev SignIdentity
type SignedIdentity struct {
	Address              *string  `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedIdentity) Reset()         { *m = SignedIdentity{} }
func (m *SignedIdentity) String() string { return proto.CompactTextString(m) }
func (*SignedIdentity) ProtoMessage()    {}
func (*SignedIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{56}
}
func (m *SignedIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedIdentity.Unmarshal(m, b)
}
func (m *SignedIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedIdentity.Marshal(b, m, deterministic)
}
func (dst *SignedIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedIdentity.Merge(dst, src)
}
func (m *SignedIdentity) XXX_Size() int {
	return xxx_messageInfo_SignedIdentity.Size(m)
}
func (m *SignedIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_SignedIdentity proto.InternalMessageInfo

func (m *SignedIdentity) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *SignedIdentity) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *SignedIdentity) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// *
// Request: Ask device to apply policy
// @next Success
// @next Failure
// @next ButtonRequest
// @next PinMatrixRequest
type ApplyPolicies struct {
	Policy               []*PolicyType `protobuf:"bytes,1,rep,name=policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ApplyPolicies) Reset()         { *m = ApplyPolicies{} }
func (m *ApplyPolicies) String() string { return proto.CompactTextString(m) }
func (*ApplyPolicies) ProtoMessage()    {}
func (*ApplyPolicies) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{57}
}
func (m *ApplyPolicies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyPolicies.Unmarshal(m, b)
}
func (m *ApplyPolicies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyPolicies.Marshal(b, m, deterministic)
}
func (dst *ApplyPolicies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyPolicies.Merge(dst, src)
}
func (m *ApplyPolicies) XXX_Size() int {
	return xxx_messageInfo_ApplyPolicies.Size(m)
}
func (m *ApplyPolicies) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyPolicies.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyPolicies proto.InternalMessageInfo

func (m *ApplyPolicies) GetPolicy() []*PolicyType {
	if m != nil {
		return m.Policy
	}
	return nil
}

// *
// Request: Ask the device to return a hash of flash memory
// @next FlashHashResponse
// @next Failure
type FlashHash struct {
	Address              *uint32  `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Length               *uint32  `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Challenge            []byte   `protobuf:"bytes,3,opt,name=challenge" json:"challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlashHash) Reset()         { *m = FlashHash{} }
func (m *FlashHash) String() string { return proto.CompactTextString(m) }
func (*FlashHash) ProtoMessage()    {}
func (*FlashHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{58}
}
func (m *FlashHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlashHash.Unmarshal(m, b)
}
func (m *FlashHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlashHash.Marshal(b, m, deterministic)
}
func (dst *FlashHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlashHash.Merge(dst, src)
}
func (m *FlashHash) XXX_Size() int {
	return xxx_messageInfo_FlashHash.Size(m)
}
func (m *FlashHash) XXX_DiscardUnknown() {
	xxx_messageInfo_FlashHash.DiscardUnknown(m)
}

var xxx_messageInfo_FlashHash proto.InternalMessageInfo

func (m *FlashHash) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *FlashHash) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *FlashHash) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

// *
// Request: Write a chunk of data into flash memory
// @next FlashHashResponse
// @next Failure
type FlashWrite struct {
	Address              *uint32  `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Erase                *bool    `protobuf:"varint,3,opt,name=erase" json:"erase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlashWrite) Reset()         { *m = FlashWrite{} }
func (m *FlashWrite) String() string { return proto.CompactTextString(m) }
func (*FlashWrite) ProtoMessage()    {}
func (*FlashWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{59}
}
func (m *FlashWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlashWrite.Unmarshal(m, b)
}
func (m *FlashWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlashWrite.Marshal(b, m, deterministic)
}
func (dst *FlashWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlashWrite.Merge(dst, src)
}
func (m *FlashWrite) XXX_Size() int {
	return xxx_messageInfo_FlashWrite.Size(m)
}
func (m *FlashWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_FlashWrite.DiscardUnknown(m)
}

var xxx_messageInfo_FlashWrite proto.InternalMessageInfo

func (m *FlashWrite) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *FlashWrite) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FlashWrite) GetErase() bool {
	if m != nil && m.Erase != nil {
		return *m.Erase
	}
	return false
}

// *
// Response: Returns hash of requested data sector
// @prev FlashHash
// @prev FlashWrite
type FlashHashResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlashHashResponse) Reset()         { *m = FlashHashResponse{} }
func (m *FlashHashResponse) String() string { return proto.CompactTextString(m) }
func (*FlashHashResponse) ProtoMessage()    {}
func (*FlashHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{60}
}
func (m *FlashHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlashHashResponse.Unmarshal(m, b)
}
func (m *FlashHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlashHashResponse.Marshal(b, m, deterministic)
}
func (dst *FlashHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlashHashResponse.Merge(dst, src)
}
func (m *FlashHashResponse) XXX_Size() int {
	return xxx_messageInfo_FlashHashResponse.Size(m)
}
func (m *FlashHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlashHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlashHashResponse proto.InternalMessageInfo

func (m *FlashHashResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// *
// Request: Returns a portion of flash requested
// @next DebugLinkFlashDumpResponse
// @next Failure
type DebugLinkFlashDump struct {
	Address              *uint32  `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Length               *uint32  `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkFlashDump) Reset()         { *m = DebugLinkFlashDump{} }
func (m *DebugLinkFlashDump) String() string { return proto.CompactTextString(m) }
func (*DebugLinkFlashDump) ProtoMessage()    {}
func (*DebugLinkFlashDump) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{61}
}
func (m *DebugLinkFlashDump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkFlashDump.Unmarshal(m, b)
}
func (m *DebugLinkFlashDump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkFlashDump.Marshal(b, m, deterministic)
}
func (dst *DebugLinkFlashDump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkFlashDump.Merge(dst, src)
}
func (m *DebugLinkFlashDump) XXX_Size() int {
	return xxx_messageInfo_DebugLinkFlashDump.Size(m)
}
func (m *DebugLinkFlashDump) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkFlashDump.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkFlashDump proto.InternalMessageInfo

func (m *DebugLinkFlashDump) GetAddress() uint32 {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return 0
}

func (m *DebugLinkFlashDump) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

// *
// Response: flash data
// @prev DebugLinkFlashDump
type DebugLinkFlashDumpResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkFlashDumpResponse) Reset()         { *m = DebugLinkFlashDumpResponse{} }
func (m *DebugLinkFlashDumpResponse) String() string { return proto.CompactTextString(m) }
func (*DebugLinkFlashDumpResponse) ProtoMessage()    {}
func (*DebugLinkFlashDumpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{62}
}
func (m *DebugLinkFlashDumpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkFlashDumpResponse.Unmarshal(m, b)
}
func (m *DebugLinkFlashDumpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkFlashDumpResponse.Marshal(b, m, deterministic)
}
func (dst *DebugLinkFlashDumpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkFlashDumpResponse.Merge(dst, src)
}
func (m *DebugLinkFlashDumpResponse) XXX_Size() int {
	return xxx_messageInfo_DebugLinkFlashDumpResponse.Size(m)
}
func (m *DebugLinkFlashDumpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkFlashDumpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkFlashDumpResponse proto.InternalMessageInfo

func (m *DebugLinkFlashDumpResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// *
// Request: Ask the device to perform a soft reset
type SoftReset struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoftReset) Reset()         { *m = SoftReset{} }
func (m *SoftReset) String() string { return proto.CompactTextString(m) }
func (*SoftReset) ProtoMessage()    {}
func (*SoftReset) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{63}
}
func (m *SoftReset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftReset.Unmarshal(m, b)
}
func (m *SoftReset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftReset.Marshal(b, m, deterministic)
}
func (dst *SoftReset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftReset.Merge(dst, src)
}
func (m *SoftReset) XXX_Size() int {
	return xxx_messageInfo_SoftReset.Size(m)
}
func (m *SoftReset) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftReset.DiscardUnknown(m)
}

var xxx_messageInfo_SoftReset proto.InternalMessageInfo

// *
// Request: Ask device to erase its firmware
// @next Success
// @next Failure
type FirmwareErase struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirmwareErase) Reset()         { *m = FirmwareErase{} }
func (m *FirmwareErase) String() string { return proto.CompactTextString(m) }
func (*FirmwareErase) ProtoMessage()    {}
func (*FirmwareErase) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{64}
}
func (m *FirmwareErase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareErase.Unmarshal(m, b)
}
func (m *FirmwareErase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareErase.Marshal(b, m, deterministic)
}
func (dst *FirmwareErase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareErase.Merge(dst, src)
}
func (m *FirmwareErase) XXX_Size() int {
	return xxx_messageInfo_FirmwareErase.Size(m)
}
func (m *FirmwareErase) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareErase.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareErase proto.InternalMessageInfo

// *
// Request: Send firmware in binary form to the device
// @next Success
// @next Failure
type FirmwareUpload struct {
	PayloadHash          []byte   `protobuf:"bytes,1,req,name=payload_hash,json=payloadHash" json:"payload_hash,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,req,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirmwareUpload) Reset()         { *m = FirmwareUpload{} }
func (m *FirmwareUpload) String() string { return proto.CompactTextString(m) }
func (*FirmwareUpload) ProtoMessage()    {}
func (*FirmwareUpload) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{65}
}
func (m *FirmwareUpload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareUpload.Unmarshal(m, b)
}
func (m *FirmwareUpload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareUpload.Marshal(b, m, deterministic)
}
func (dst *FirmwareUpload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareUpload.Merge(dst, src)
}
func (m *FirmwareUpload) XXX_Size() int {
	return xxx_messageInfo_FirmwareUpload.Size(m)
}
func (m *FirmwareUpload) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareUpload.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareUpload proto.InternalMessageInfo

func (m *FirmwareUpload) GetPayloadHash() []byte {
	if m != nil {
		return m.PayloadHash
	}
	return nil
}

func (m *FirmwareUpload) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// *
// Request: "Press" the button on the device
// @next Success
type DebugLinkDecision struct {
	YesNo                *bool    `protobuf:"varint,1,req,name=yes_no,json=yesNo" json:"yes_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkDecision) Reset()         { *m = DebugLinkDecision{} }
func (m *DebugLinkDecision) String() string { return proto.CompactTextString(m) }
func (*DebugLinkDecision) ProtoMessage()    {}
func (*DebugLinkDecision) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{66}
}
func (m *DebugLinkDecision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkDecision.Unmarshal(m, b)
}
func (m *DebugLinkDecision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkDecision.Marshal(b, m, deterministic)
}
func (dst *DebugLinkDecision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkDecision.Merge(dst, src)
}
func (m *DebugLinkDecision) XXX_Size() int {
	return xxx_messageInfo_DebugLinkDecision.Size(m)
}
func (m *DebugLinkDecision) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkDecision.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkDecision proto.InternalMessageInfo

func (m *DebugLinkDecision) GetYesNo() bool {
	if m != nil && m.YesNo != nil {
		return *m.YesNo
	}
	return false
}

// *
// Request: Computer asks for device state
// @next DebugLinkState
type DebugLinkGetState struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkGetState) Reset()         { *m = DebugLinkGetState{} }
func (m *DebugLinkGetState) String() string { return proto.CompactTextString(m) }
func (*DebugLinkGetState) ProtoMessage()    {}
func (*DebugLinkGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{67}
}
func (m *DebugLinkGetState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkGetState.Unmarshal(m, b)
}
func (m *DebugLinkGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkGetState.Marshal(b, m, deterministic)
}
func (dst *DebugLinkGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkGetState.Merge(dst, src)
}
func (m *DebugLinkGetState) XXX_Size() int {
	return xxx_messageInfo_DebugLinkGetState.Size(m)
}
func (m *DebugLinkGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkGetState.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkGetState proto.InternalMessageInfo

// *
// Response: Device current state
// @prev DebugLinkGetState
type DebugLinkState struct {
	Layout                    []byte      `protobuf:"bytes,1,opt,name=layout" json:"layout,omitempty"`
	Pin                       *string     `protobuf:"bytes,2,opt,name=pin" json:"pin,omitempty"`
	Matrix                    *string     `protobuf:"bytes,3,opt,name=matrix" json:"matrix,omitempty"`
	Mnemonic                  *string     `protobuf:"bytes,4,opt,name=mnemonic" json:"mnemonic,omitempty"`
	Node                      *HDNodeType `protobuf:"bytes,5,opt,name=node" json:"node,omitempty"`
	PassphraseProtection      *bool       `protobuf:"varint,6,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	ResetWord                 *string     `protobuf:"bytes,7,opt,name=reset_word,json=resetWord" json:"reset_word,omitempty"`
	ResetEntropy              []byte      `protobuf:"bytes,8,opt,name=reset_entropy,json=resetEntropy" json:"reset_entropy,omitempty"`
	RecoveryFakeWord          *string     `protobuf:"bytes,9,opt,name=recovery_fake_word,json=recoveryFakeWord" json:"recovery_fake_word,omitempty"`
	RecoveryWordPos           *uint32     `protobuf:"varint,10,opt,name=recovery_word_pos,json=recoveryWordPos" json:"recovery_word_pos,omitempty"`
	RecoveryCipher            *string     `protobuf:"bytes,11,opt,name=recovery_cipher,json=recoveryCipher" json:"recovery_cipher,omitempty"`
	RecoveryAutoCompletedWord *string     `protobuf:"bytes,12,opt,name=recovery_auto_completed_word,json=recoveryAutoCompletedWord" json:"recovery_auto_completed_word,omitempty"`
	FirmwareHash              []byte      `protobuf:"bytes,13,opt,name=firmware_hash,json=firmwareHash" json:"firmware_hash,omitempty"`
	StorageHash               []byte      `protobuf:"bytes,14,opt,name=storage_hash,json=storageHash" json:"storage_hash,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}    `json:"-"`
	XXX_unrecognized          []byte      `json:"-"`
	XXX_sizecache             int32       `json:"-"`
}

func (m *DebugLinkState) Reset()         { *m = DebugLinkState{} }
func (m *DebugLinkState) String() string { return proto.CompactTextString(m) }
func (*DebugLinkState) ProtoMessage()    {}
func (*DebugLinkState) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{68}
}
func (m *DebugLinkState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkState.Unmarshal(m, b)
}
func (m *DebugLinkState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkState.Marshal(b, m, deterministic)
}
func (dst *DebugLinkState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkState.Merge(dst, src)
}
func (m *DebugLinkState) XXX_Size() int {
	return xxx_messageInfo_DebugLinkState.Size(m)
}
func (m *DebugLinkState) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkState.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkState proto.InternalMessageInfo

func (m *DebugLinkState) GetLayout() []byte {
	if m != nil {
		return m.Layout
	}
	return nil
}

func (m *DebugLinkState) GetPin() string {
	if m != nil && m.Pin != nil {
		return *m.Pin
	}
	return ""
}

func (m *DebugLinkState) GetMatrix() string {
	if m != nil && m.Matrix != nil {
		return *m.Matrix
	}
	return ""
}

func (m *DebugLinkState) GetMnemonic() string {
	if m != nil && m.Mnemonic != nil {
		return *m.Mnemonic
	}
	return ""
}

func (m *DebugLinkState) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *DebugLinkState) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

func (m *DebugLinkState) GetResetWord() string {
	if m != nil && m.ResetWord != nil {
		return *m.ResetWord
	}
	return ""
}

func (m *DebugLinkState) GetResetEntropy() []byte {
	if m != nil {
		return m.ResetEntropy
	}
	return nil
}

func (m *DebugLinkState) GetRecoveryFakeWord() string {
	if m != nil && m.RecoveryFakeWord != nil {
		return *m.RecoveryFakeWord
	}
	return ""
}

func (m *DebugLinkState) GetRecoveryWordPos() uint32 {
	if m != nil && m.RecoveryWordPos != nil {
		return *m.RecoveryWordPos
	}
	return 0
}

func (m *DebugLinkState) GetRecoveryCipher() string {
	if m != nil && m.RecoveryCipher != nil {
		return *m.RecoveryCipher
	}
	return ""
}

func (m *DebugLinkState) GetRecoveryAutoCompletedWord() string {
	if m != nil && m.RecoveryAutoCompletedWord != nil {
		return *m.RecoveryAutoCompletedWord
	}
	return ""
}

func (m *DebugLinkState) GetFirmwareHash() []byte {
	if m != nil {
		return m.FirmwareHash
	}
	return nil
}

func (m *DebugLinkState) GetStorageHash() []byte {
	if m != nil {
		return m.StorageHash
	}
	return nil
}

// *
// Request: Ask device to restart
type DebugLinkStop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkStop) Reset()         { *m = DebugLinkStop{} }
func (m *DebugLinkStop) String() string { return proto.CompactTextString(m) }
func (*DebugLinkStop) ProtoMessage()    {}
func (*DebugLinkStop) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{69}
}
func (m *DebugLinkStop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkStop.Unmarshal(m, b)
}
func (m *DebugLinkStop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkStop.Marshal(b, m, deterministic)
}
func (dst *DebugLinkStop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkStop.Merge(dst, src)
}
func (m *DebugLinkStop) XXX_Size() int {
	return xxx_messageInfo_DebugLinkStop.Size(m)
}
func (m *DebugLinkStop) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkStop.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkStop proto.InternalMessageInfo

// *
// Response: Device wants host to log event
type DebugLinkLog struct {
	Level                *uint32  `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Bucket               *string  `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Text                 *string  `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkLog) Reset()         { *m = DebugLinkLog{} }
func (m *DebugLinkLog) String() string { return proto.CompactTextString(m) }
func (*DebugLinkLog) ProtoMessage()    {}
func (*DebugLinkLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{70}
}
func (m *DebugLinkLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkLog.Unmarshal(m, b)
}
func (m *DebugLinkLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkLog.Marshal(b, m, deterministic)
}
func (dst *DebugLinkLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkLog.Merge(dst, src)
}
func (m *DebugLinkLog) XXX_Size() int {
	return xxx_messageInfo_DebugLinkLog.Size(m)
}
func (m *DebugLinkLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkLog.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkLog proto.InternalMessageInfo

func (m *DebugLinkLog) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DebugLinkLog) GetBucket() string {
	if m != nil && m.Bucket != nil {
		return *m.Bucket
	}
	return ""
}

func (m *DebugLinkLog) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

// *
// Request: Ask device to fill config area with sample data (used for testing firmware upload)
type DebugLinkFillConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugLinkFillConfig) Reset()         { *m = DebugLinkFillConfig{} }
func (m *DebugLinkFillConfig) String() string { return proto.CompactTextString(m) }
func (*DebugLinkFillConfig) ProtoMessage()    {}
func (*DebugLinkFillConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{71}
}
func (m *DebugLinkFillConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugLinkFillConfig.Unmarshal(m, b)
}
func (m *DebugLinkFillConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugLinkFillConfig.Marshal(b, m, deterministic)
}
func (dst *DebugLinkFillConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugLinkFillConfig.Merge(dst, src)
}
func (m *DebugLinkFillConfig) XXX_Size() int {
	return xxx_messageInfo_DebugLinkFillConfig.Size(m)
}
func (m *DebugLinkFillConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugLinkFillConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DebugLinkFillConfig proto.InternalMessageInfo

// *
// Request: Starts workflow for setting/removing the wipe code
// @start
// @next Success
// @next Failure
type ChangeWipeCode struct {
	Remove               *bool    `protobuf:"varint,1,opt,name=remove" json:"remove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeWipeCode) Reset()         { *m = ChangeWipeCode{} }
func (m *ChangeWipeCode) String() string { return proto.CompactTextString(m) }
func (*ChangeWipeCode) ProtoMessage()    {}
func (*ChangeWipeCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_924d6d1722861682, []int{72}
}
func (m *ChangeWipeCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeWipeCode.Unmarshal(m, b)
}
func (m *ChangeWipeCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeWipeCode.Marshal(b, m, deterministic)
}
func (dst *ChangeWipeCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeWipeCode.Merge(dst, src)
}
func (m *ChangeWipeCode) XXX_Size() int {
	return xxx_messageInfo_ChangeWipeCode.Size(m)
}
func (m *ChangeWipeCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeWipeCode.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeWipeCode proto.InternalMessageInfo

func (m *ChangeWipeCode) GetRemove() bool {
	if m != nil && m.Remove != nil {
		return *m.Remove
	}
	return false
}

func init() {
	proto.RegisterType((*Initialize)(nil), "Initialize")
	proto.RegisterType((*GetFeatures)(nil), "GetFeatures")
	proto.RegisterType((*Features)(nil), "Features")
	proto.RegisterType((*GetCoinTable)(nil), "GetCoinTable")
	proto.RegisterType((*CoinTable)(nil), "CoinTable")
	proto.RegisterType((*ClearSession)(nil), "ClearSession")
	proto.RegisterType((*ApplySettings)(nil), "ApplySettings")
	proto.RegisterType((*ChangePin)(nil), "ChangePin")
	proto.RegisterType((*Ping)(nil), "Ping")
	proto.RegisterType((*Success)(nil), "Success")
	proto.RegisterType((*Failure)(nil), "Failure")
	proto.RegisterType((*ButtonRequest)(nil), "ButtonRequest")
	proto.RegisterType((*ButtonAck)(nil), "ButtonAck")
	proto.RegisterType((*PinMatrixRequest)(nil), "PinMatrixRequest")
	proto.RegisterType((*PinMatrixAck)(nil), "PinMatrixAck")
	proto.RegisterType((*Cancel)(nil), "Cancel")
	proto.RegisterType((*PassphraseRequest)(nil), "PassphraseRequest")
	proto.RegisterType((*PassphraseAck)(nil), "PassphraseAck")
	proto.RegisterType((*GetEntropy)(nil), "GetEntropy")
	proto.RegisterType((*Entropy)(nil), "Entropy")
	proto.RegisterType((*GetPublicKey)(nil), "GetPublicKey")
	proto.RegisterType((*PublicKey)(nil), "PublicKey")
	proto.RegisterType((*GetAddress)(nil), "GetAddress")
	proto.RegisterType((*EthereumGetAddress)(nil), "EthereumGetAddress")
	proto.RegisterType((*Address)(nil), "Address")
	proto.RegisterType((*EthereumAddress)(nil), "EthereumAddress")
	proto.RegisterType((*WipeDevice)(nil), "WipeDevice")
	proto.RegisterType((*LoadDevice)(nil), "LoadDevice")
	proto.RegisterType((*ResetDevice)(nil), "ResetDevice")
	proto.RegisterType((*EntropyRequest)(nil), "EntropyRequest")
	proto.RegisterType((*EntropyAck)(nil), "EntropyAck")
	proto.RegisterType((*RecoveryDevice)(nil), "RecoveryDevice")
	proto.RegisterType((*WordRequest)(nil), "WordRequest")
	proto.RegisterType((*WordAck)(nil), "WordAck")
	proto.RegisterType((*CharacterRequest)(nil), "CharacterRequest")
	proto.RegisterType((*CharacterAck)(nil), "CharacterAck")
	proto.RegisterType((*SignMessage)(nil), "SignMessage")
	proto.RegisterType((*VerifyMessage)(nil), "VerifyMessage")
	proto.RegisterType((*MessageSignature)(nil), "MessageSignature")
	proto.RegisterType((*EncryptMessage)(nil), "EncryptMessage")
	proto.RegisterType((*EncryptedMessage)(nil), "EncryptedMessage")
	proto.RegisterType((*DecryptMessage)(nil), "DecryptMessage")
	proto.RegisterType((*DecryptedMessage)(nil), "DecryptedMessage")
	proto.RegisterType((*CipherKeyValue)(nil), "CipherKeyValue")
	proto.RegisterType((*CipheredKeyValue)(nil), "CipheredKeyValue")
	proto.RegisterType((*SignTx)(nil), "SignTx")
	proto.RegisterType((*TxRequest)(nil), "TxRequest")
	proto.RegisterType((*TxAck)(nil), "TxAck")
	proto.RegisterType((*RawTxAck)(nil), "RawTxAck")
	proto.RegisterType((*EthereumSignTx)(nil), "EthereumSignTx")
	proto.RegisterType((*EthereumTxRequest)(nil), "EthereumTxRequest")
	proto.RegisterType((*EthereumTxAck)(nil), "EthereumTxAck")
	proto.RegisterType((*EthereumSignMessage)(nil), "EthereumSignMessage")
	proto.RegisterType((*EthereumVerifyMessage)(nil), "EthereumVerifyMessage")
	proto.RegisterType((*EthereumMessageSignature)(nil), "EthereumMessageSignature")
	proto.RegisterType((*SignIdentity)(nil), "SignIdentity")
	proto.RegisterType((*SignedIdentity)(nil), "SignedIdentity")
	proto.RegisterType((*ApplyPolicies)(nil), "ApplyPolicies")
	proto.RegisterType((*FlashHash)(nil), "FlashHash")
	proto.RegisterType((*FlashWrite)(nil), "FlashWrite")
	proto.RegisterType((*FlashHashResponse)(nil), "FlashHashResponse")
	proto.RegisterType((*DebugLinkFlashDump)(nil), "DebugLinkFlashDump")
	proto.RegisterType((*DebugLinkFlashDumpResponse)(nil), "DebugLinkFlashDumpResponse")
	proto.RegisterType((*SoftReset)(nil), "SoftReset")
	proto.RegisterType((*FirmwareErase)(nil), "FirmwareErase")
	proto.RegisterType((*FirmwareUpload)(nil), "FirmwareUpload")
	proto.RegisterType((*DebugLinkDecision)(nil), "DebugLinkDecision")
	proto.RegisterType((*DebugLinkGetState)(nil), "DebugLinkGetState")
	proto.RegisterType((*DebugLinkState)(nil), "DebugLinkState")
	proto.RegisterType((*DebugLinkStop)(nil), "DebugLinkStop")
	proto.RegisterType((*DebugLinkLog)(nil), "DebugLinkLog")
	proto.RegisterType((*DebugLinkFillConfig)(nil), "DebugLinkFillConfig")
	proto.RegisterType((*ChangeWipeCode)(nil), "ChangeWipeCode")
	proto.RegisterEnum("MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_messages_924d6d1722861682) }

var fileDescriptor_messages_924d6d1722861682 = []byte{
	// 4001 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xdd, 0x73, 0x1c, 0x49,
	0x52, 0x67, 0x3e, 0x34, 0x1f, 0x39, 0x3d, 0xa3, 0x72, 0xdb, 0xb2, 0xc7, 0xf2, 0xca, 0x96, 0xdb,
	0x5e, 0x5b, 0xf6, 0x2d, 0x63, 0x9f, 0xee, 0x76, 0x39, 0x0c, 0xc4, 0x61, 0x4b, 0xb6, 0xd7, 0xd8,
	0xf2, 0x8a, 0x96, 0xce, 0x3e, 0x82, 0x87, 0x8e, 0x56, 0x77, 0x69, 0xa6, 0x6f, 0x7a, 0xba, 0xfb,
	0xfa, 0x43, 0xd6, 0xdc, 0x33, 0x70, 0xc0, 0xd3, 0x1d, 0x47, 0x10, 0x3c, 0x1e, 0x9f, 0xb7, 0x17,
	0x3c, 0x12, 0x6c, 0x04, 0x11, 0x7c, 0xfc, 0x01, 0xbc, 0xf0, 0xc6, 0x77, 0xf0, 0xce, 0x33, 0xf0,
	0x4c, 0x54, 0x55, 0x56, 0x7f, 0x4d, 0x8f, 0xec, 0xdd, 0xe5, 0x45, 0x31, 0x95, 0xf5, 0xeb, 0xac,
	0xcc, 0xac, 0xcc, 0xac, 0xac, 0x2c, 0xc1, 0x60, 0x46, 0xa3, 0xc8, 0x1c, 0xd3, 0x68, 0x14, 0x84,
	0x7e, 0xec, 0xaf, 0xf7, 0xe2, 0x79, 0x20, 0x07, 0x9a, 0x02, 0xf0, 0xcc, 0x73, 0x62, 0xc7, 0x74,
	0x9d, 0xef, 0x51, 0xad, 0x0f, 0xbd, 0xa7, 0x34, 0x7e, 0x42, 0xcd, 0x38, 0x09, 0x69, 0xa4, 0xfd,
	0x65, 0x0b, 0x3a, 0x72, 0xa0, 0x5e, 0x84, 0xd6, 0x09, 0xf5, 0x6c, 0x3f, 0x1c, 0xd6, 0x36, 0x6b,
	0x5b, 0x5d, 0x1d, 0x47, 0xea, 0x0d, 0xe8, 0xcf, 0xcc, 0xef, 0xf8, 0xa1, 0x71, 0x42, 0xc3, 0xc8,
	0xf1, 0xbd, 0x61, 0x7d, 0xb3, 0xb6, 0xd5, 0xd7, 0x15, 0x4e, 0x7c, 0x25, 0x68, 0x1c, 0xe4, 0x78,
	0x39, 0x50, 0x03, 0x41, 0x8c, 0x98, 0x03, 0x05, 0x66, 0x6c, 0x4d, 0x52, 0x50, 0x53, 0x80, 0x38,
	0x51, 0x82, 0x6e, 0xc3, 0xea, 0x91, 0xef, 0xc7, 0xae, 0x6f, 0xda, 0x34, 0x34, 0x66, 0xbe, 0x4d,
	0x87, 0x2b, 0x9b, 0xb5, 0xad, 0x8e, 0x3e, 0xc8, 0xc8, 0x7b, 0xbe, 0x4d, 0xd5, 0x2b, 0xd0, 0xb5,
	0xe9, 0x89, 0x63, 0x51, 0xc3, 0xb1, 0x87, 0x2d, 0x2e, 0x72, 0x47, 0x10, 0x9e, 0xd9, 0xea, 0xfb,
	0x30, 0x08, 0x1c, 0xcf, 0x60, 0x36, 0xa0, 0x56, 0xcc, 0xd6, 0x6a, 0x73, 0x26, 0xfd, 0xc0, 0xf1,
	0xf6, 0x53, 0xa2, 0xfa, 0x35, 0x58, 0x0b, 0xcc, 0x28, 0x0a, 0x26, 0xa1, 0x19, 0xd1, 0x3c, 0xba,
	0xc3, 0xd1, 0x17, 0xb2, 0xc9, 0xdc, 0x47, 0xeb, 0xd0, 0x71, 0x4d, 0x6f, 0x9c, 0x98, 0x63, 0x3a,
	0xec, 0x8a, 0x75, 0xe5, 0x58, 0xbd, 0x00, 0x2b, 0xae, 0x79, 0x44, 0xdd, 0x21, 0xf0, 0x09, 0x31,
	0x50, 0xaf, 0xc1, 0x8a, 0xe5, 0x3b, 0x5e, 0x34, 0xec, 0x6d, 0x36, 0xb6, 0x7a, 0xdb, 0xdd, 0xd1,
	0x8e, 0xef, 0x78, 0x87, 0xf3, 0x80, 0xea, 0x82, 0xae, 0x6e, 0x42, 0xcf, 0x49, 0x77, 0xc9, 0x1e,
	0x2a, 0x7c, 0xf5, 0x3c, 0x89, 0x2d, 0x1a, 0xd2, 0x13, 0x87, 0x9b, 0xad, 0xbf, 0x59, 0xdb, 0x52,
	0xf4, 0x74, 0x5c, 0x32, 0xd9, 0xc4, 0x8c, 0x26, 0xc3, 0x01, 0x87, 0xe4, 0x4c, 0xf6, 0xb1, 0x19,
	0x4d, 0x18, 0x13, 0x67, 0x16, 0xf8, 0x61, 0x4c, 0xed, 0xe1, 0x2a, 0x5f, 0x23, 0x1d, 0xab, 0x1b,
	0x00, 0xcc, 0x62, 0x96, 0x69, 0x4d, 0xa8, 0x3d, 0x24, 0x7c, 0xb6, 0x1b, 0x38, 0xde, 0x0e, 0x27,
	0xa8, 0x5f, 0x81, 0x73, 0x39, 0x4b, 0x21, 0xea, 0x1c, 0x47, 0x91, 0x6c, 0x02, 0xc1, 0xb7, 0xa1,
	0x13, 0xf8, 0xae, 0x63, 0x39, 0x34, 0x1a, 0xaa, 0x5c, 0xe5, 0xde, 0x68, 0x9f, 0x11, 0xe6, 0x5c,
	0xe9, 0x74, 0x92, 0x99, 0x8b, 0xed, 0xb0, 0x3b, 0x5c, 0x13, 0xe6, 0xe2, 0x03, 0xf5, 0x0e, 0x90,
	0x63, 0x27, 0x9c, 0xbd, 0x31, 0x43, 0x6a, 0x9c, 0x98, 0xa1, 0x63, 0x7a, 0xf1, 0xf0, 0x22, 0x07,
	0xac, 0x4a, 0xfa, 0x2b, 0x41, 0x66, 0x2e, 0x95, 0x42, 0xb9, 0xe2, 0x97, 0xb8, 0xe2, 0x8a, 0x24,
	0x72, 0xb5, 0xaf, 0x40, 0xd7, 0xf3, 0x8d, 0x23, 0xd3, 0x9a, 0x26, 0xc1, 0x70, 0x28, 0xf4, 0xf6,
	0xfc, 0x47, 0x7c, 0xac, 0xde, 0x87, 0x0b, 0x6f, 0x9c, 0x80, 0x1a, 0x96, 0x6f, 0x17, 0x3c, 0xe0,
	0x32, 0xc7, 0xa9, 0x6c, 0x6e, 0xc7, 0xb7, 0x73, 0xfb, 0xaf, 0x7d, 0x04, 0xca, 0x53, 0x1a, 0xf3,
	0x2d, 0x34, 0x8f, 0x5c, 0xbe, 0xe7, 0x51, 0x6c, 0x86, 0x31, 0x8f, 0x9b, 0xbe, 0x2e, 0x06, 0x2a,
	0x81, 0x06, 0xf5, 0x6c, 0x0c, 0x16, 0xf6, 0x53, 0x9b, 0x40, 0x37, 0xfb, 0xe8, 0x1a, 0xac, 0xc4,
	0xec, 0xc7, 0xb0, 0xb6, 0xe0, 0x12, 0x9c, 0xce, 0x85, 0x4e, 0x66, 0x86, 0xf0, 0x1b, 0xc1, 0xa5,
	0xe3, 0x25, 0xb3, 0x1d, 0xee, 0x2f, 0x1b, 0x00, 0xd6, 0x24, 0xf1, 0xa6, 0x46, 0xe4, 0x7c, 0x8f,
	0x62, 0xac, 0x75, 0x39, 0xe5, 0x80, 0x85, 0xf9, 0x00, 0x94, 0x1d, 0x97, 0x9a, 0xe1, 0x01, 0x8d,
	0x98, 0x83, 0x68, 0x9f, 0xd5, 0xa0, 0xff, 0x30, 0x08, 0xdc, 0xf9, 0x01, 0x8d, 0x63, 0xc7, 0x1b,
	0x47, 0x05, 0x1f, 0xae, 0x2d, 0xf3, 0xe1, 0x7a, 0xde, 0x87, 0xdf, 0x87, 0x41, 0xc2, 0x62, 0x24,
	0xdd, 0x6b, 0xbe, 0x6c, 0x47, 0xef, 0x27, 0x11, 0xdd, 0x4f, 0x89, 0xea, 0x57, 0x40, 0x35, 0x93,
	0xd8, 0x37, 0x5c, 0xdf, 0x9a, 0x1a, 0x36, 0x75, 0xcd, 0xb9, 0x31, 0x8b, 0x30, 0xd0, 0x57, 0xd9,
	0xcc, 0x0b, 0xdf, 0x9a, 0xee, 0x32, 0xfa, 0x5e, 0xa4, 0x5e, 0x83, 0x5e, 0xb2, 0x7d, 0x6c, 0x58,
	0x7e, 0xe2, 0xc5, 0x34, 0xe4, 0x71, 0xde, 0xd7, 0x21, 0xd9, 0x3e, 0xde, 0x11, 0x14, 0xed, 0x06,
	0x74, 0x77, 0x26, 0xa6, 0x37, 0xa6, 0xfb, 0x8e, 0xc7, 0x12, 0x54, 0x48, 0x67, 0xfe, 0x89, 0x90,
	0xb8, 0xa3, 0xe3, 0x48, 0xfb, 0x69, 0x0d, 0x9a, 0xfb, 0x8e, 0x37, 0x56, 0x87, 0xd0, 0xc6, 0x54,
	0x88, 0x3a, 0xc9, 0x21, 0xf3, 0xde, 0xa3, 0x24, 0x8e, 0xfd, 0x42, 0x46, 0xa8, 0x0b, 0xef, 0x15,
	0x13, 0xb9, 0xf8, 0x5e, 0xcc, 0x1d, 0x8d, 0xcf, 0x95, 0x3b, 0x9a, 0xcb, 0x73, 0x87, 0x76, 0x03,
	0xda, 0x07, 0x89, 0x65, 0xd1, 0x28, 0x5a, 0x2e, 0xad, 0xf6, 0x18, 0xda, 0x4f, 0x4c, 0xc7, 0x4d,
	0x42, 0xaa, 0x6e, 0x42, 0x93, 0x39, 0x26, 0x47, 0x0c, 0xb6, 0x95, 0x11, 0xd2, 0xb9, 0xa3, 0xf0,
	0x99, 0x3c, 0x9b, 0x7a, 0x91, 0xcd, 0x73, 0xe8, 0x3f, 0xe2, 0xba, 0xe9, 0xf4, 0xbb, 0x09, 0x8d,
	0x62, 0xf5, 0x56, 0x81, 0x99, 0x3a, 0x2a, 0xcc, 0xe6, 0x58, 0xaa, 0xd0, 0xb4, 0xcd, 0xd8, 0x44,
	0x7e, 0xfc, 0xb7, 0xd6, 0x83, 0xae, 0x80, 0x3f, 0xb4, 0xa6, 0xda, 0x2f, 0x01, 0xd9, 0x77, 0xbc,
	0x3d, 0x33, 0x0e, 0x9d, 0x53, 0xc9, 0xfc, 0x0e, 0x34, 0xd9, 0xb9, 0x83, 0xcc, 0xd7, 0x46, 0x65,
	0x80, 0xe0, 0xcf, 0x20, 0xda, 0x26, 0x28, 0xe9, 0xec, 0x43, 0x6b, 0xca, 0x42, 0x25, 0x70, 0xbc,
	0x61, 0x6d, 0xb3, 0xbe, 0xd5, 0xd5, 0xd9, 0x4f, 0xad, 0x03, 0xad, 0x1d, 0xd3, 0xb3, 0xa8, 0xab,
	0x9d, 0x87, 0x73, 0x99, 0x77, 0x21, 0x2b, 0xed, 0x1e, 0xf4, 0x33, 0x22, 0xe3, 0x70, 0x15, 0x20,
	0xe7, 0x98, 0x82, 0x51, 0x8e, 0xa2, 0x6d, 0x02, 0x3c, 0xa5, 0xf1, 0x63, 0x2f, 0x0e, 0xfd, 0x60,
	0xce, 0xf4, 0xe3, 0x71, 0xc3, 0x70, 0x7d, 0x9d, 0xff, 0x66, 0x1b, 0x23, 0xa7, 0x87, 0xd0, 0xa6,
	0xe2, 0x27, 0x47, 0x28, 0xba, 0x1c, 0x6a, 0xff, 0x59, 0xe3, 0xa1, 0xbf, 0x9f, 0x1c, 0xb9, 0x8e,
	0xf5, 0x9c, 0xce, 0x59, 0x90, 0x9a, 0xb6, 0x1d, 0xd2, 0x28, 0x32, 0x3c, 0x1e, 0xc9, 0x7d, 0xbd,
	0x83, 0x84, 0x97, 0xea, 0x16, 0x10, 0x6a, 0xd9, 0x91, 0x69, 0x58, 0x49, 0x78, 0x42, 0x0d, 0xcf,
	0x9c, 0xc9, 0x2d, 0x1a, 0x70, 0xfa, 0x0e, 0x23, 0xbf, 0x34, 0x67, 0x54, 0xbd, 0x0e, 0x4a, 0x34,
	0xf1, 0xdf, 0x18, 0xb6, 0x13, 0x05, 0xae, 0x39, 0x47, 0x7f, 0xeb, 0x31, 0xda, 0xae, 0x20, 0xa9,
	0x37, 0xa1, 0xcb, 0x52, 0x81, 0xe0, 0xc2, 0x3c, 0xac, 0xfb, 0xa0, 0xfd, 0xc8, 0x89, 0x19, 0x4d,
	0xef, 0xb0, 0xbf, 0x9c, 0xd1, 0x37, 0xa1, 0x17, 0x59, 0xa1, 0x13, 0xc4, 0x06, 0xdf, 0x8b, 0x15,
	0xbe, 0x17, 0x64, 0xf4, 0xcc, 0x0b, 0x92, 0xf8, 0x80, 0x4f, 0xb0, 0x6d, 0x78, 0xa0, 0x1c, 0xec,
	0x3f, 0x7e, 0xb9, 0xfb, 0x70, 0x77, 0x57, 0x7f, 0x7c, 0x70, 0xa0, 0x43, 0x94, 0xce, 0x68, 0xbf,
	0x0c, 0xdd, 0x4c, 0xbb, 0x6b, 0xd0, 0xf4, 0x84, 0xbf, 0xd4, 0x79, 0x0a, 0xff, 0x78, 0xf7, 0xa5,
	0x6f, 0xa3, 0xef, 0x79, 0xe8, 0x28, 0xa7, 0x41, 0x72, 0x24, 0x1d, 0x85, 0xfd, 0xd6, 0xfe, 0xab,
	0xc6, 0x6d, 0xfd, 0x50, 0x58, 0xe1, 0x6c, 0x0b, 0x15, 0x94, 0xaa, 0x2f, 0x53, 0xea, 0x1d, 0xac,
	0xf3, 0x21, 0x74, 0x66, 0x89, 0x1b, 0x3b, 0x91, 0x33, 0xe6, 0xc6, 0xe9, 0x6d, 0x5f, 0x1e, 0xed,
	0x21, 0x41, 0xa7, 0x36, 0xa5, 0xb3, 0x4c, 0x7b, 0x3d, 0x85, 0x7e, 0x79, 0x73, 0x1d, 0x82, 0xfa,
	0x38, 0x9e, 0xd0, 0x90, 0x26, 0xb3, 0x77, 0xd5, 0xb9, 0xac, 0x4d, 0x7d, 0x41, 0x1b, 0xe6, 0x8b,
	0x92, 0xd5, 0x10, 0xda, 0xf8, 0x25, 0x7a, 0xb5, 0x1c, 0x6a, 0x2f, 0x60, 0x55, 0x2e, 0xbd, 0x04,
	0xac, 0xa4, 0x60, 0x96, 0x68, 0xa5, 0x44, 0x51, 0x1c, 0xe2, 0x7e, 0x01, 0x92, 0x0e, 0xe2, 0x90,
	0x95, 0x89, 0xaf, 0x9d, 0x80, 0xee, 0xf2, 0xfa, 0x49, 0xfb, 0x61, 0x1d, 0xe0, 0x85, 0x6f, 0xda,
	0x62, 0xc8, 0x0e, 0x8b, 0x99, 0x47, 0x67, 0xbe, 0xe7, 0x58, 0xf2, 0xb0, 0x90, 0xe3, 0xd4, 0x47,
	0xea, 0xdc, 0xea, 0x15, 0x3e, 0x82, 0xc1, 0xdd, 0xe0, 0xdf, 0xb1, 0x9f, 0x5f, 0x28, 0x71, 0xaa,
	0x37, 0x72, 0x07, 0xd6, 0x8a, 0xf0, 0x14, 0xea, 0x8d, 0x5d, 0x27, 0x9a, 0x54, 0x9d, 0x5c, 0xad,
	0xfc, 0xc9, 0x75, 0x03, 0xfa, 0xd1, 0xd4, 0x09, 0x0c, 0x6b, 0x42, 0xad, 0x69, 0x94, 0xcc, 0xb0,
	0x14, 0x54, 0x18, 0x71, 0x07, 0x69, 0xe5, 0xa3, 0xa8, 0xb3, 0x70, 0x14, 0xfd, 0x53, 0x1d, 0x7a,
	0x3a, 0x8d, 0x68, 0x8c, 0x46, 0x79, 0x1f, 0x06, 0xb8, 0x85, 0x46, 0x68, 0x7a, 0xb6, 0x3f, 0xc3,
	0x53, 0xa9, 0x8f, 0x54, 0x9d, 0x13, 0xd5, 0x6b, 0xd0, 0x89, 0xe2, 0x90, 0x7a, 0xe3, 0x78, 0x22,
	0x4e, 0xf1, 0x07, 0x8d, 0xed, 0x0f, 0x3f, 0xd2, 0x53, 0xe2, 0x72, 0x6b, 0x34, 0xce, 0xb0, 0xc6,
	0xe2, 0x11, 0xd5, 0xac, 0x3a, 0xa2, 0xbe, 0x84, 0xd1, 0x0a, 0x35, 0x53, 0xbb, 0x54, 0x33, 0x55,
	0x1f, 0xf2, 0x9d, 0x77, 0x3a, 0xe4, 0xbb, 0x0b, 0x96, 0x25, 0x30, 0xc0, 0xd4, 0x2b, 0xf3, 0xfb,
	0x2d, 0x00, 0xa4, 0xb0, 0xe4, 0x5e, 0xc8, 0xc7, 0xb5, 0x7c, 0x3e, 0xfe, 0xdd, 0x06, 0x0c, 0x74,
	0x6a, 0xf9, 0x27, 0x34, 0x9c, 0xe3, 0xb6, 0x6c, 0x00, 0xbc, 0xf1, 0x43, 0x5b, 0x2c, 0x87, 0x15,
	0x59, 0x97, 0x51, 0xf8, 0x6a, 0xcb, 0xad, 0x5d, 0xff, 0x5c, 0xd6, 0x6e, 0xbc, 0xcd, 0xda, 0xcd,
	0xb7, 0x5a, 0x7b, 0x25, 0x6f, 0xed, 0x3b, 0x40, 0xa8, 0x77, 0xec, 0x87, 0x16, 0x35, 0x98, 0xac,
	0xae, 0x13, 0xc5, 0x7c, 0x3b, 0x3a, 0xfa, 0x2a, 0xd2, 0x5f, 0x23, 0x99, 0xd5, 0xab, 0xac, 0x0e,
	0xb3, 0x26, 0x66, 0x68, 0x5a, 0x31, 0x0d, 0x0d, 0xcb, 0x09, 0x26, 0x34, 0xc4, 0x3d, 0x52, 0x93,
	0x88, 0xee, 0xc8, 0xa9, 0x1d, 0x3e, 0xf3, 0xff, 0xbb, 0x5b, 0xea, 0x25, 0x68, 0xdb, 0xe1, 0xdc,
	0x08, 0x13, 0x8f, 0xdf, 0x71, 0x3a, 0x7a, 0xcb, 0x0e, 0xe7, 0x7a, 0xe2, 0xb1, 0xbb, 0x25, 0x13,
	0x52, 0xee, 0xe1, 0x06, 0xb4, 0xd9, 0x90, 0x6d, 0xa0, 0x0a, 0x4d, 0xa6, 0x15, 0x66, 0x30, 0xfe,
	0x5b, 0xd3, 0x81, 0xa4, 0x72, 0xca, 0x12, 0xe2, 0x32, 0x74, 0xf8, 0xde, 0x05, 0x7e, 0x84, 0x67,
	0x73, 0x9b, 0x8d, 0xf7, 0xfd, 0x88, 0xc5, 0x70, 0xa6, 0x31, 0x9b, 0xaf, 0xf3, 0x79, 0x25, 0x25,
	0xee, 0xfb, 0x91, 0xf6, 0x6d, 0x50, 0x52, 0x9e, 0x6c, 0xdd, 0xf7, 0xa0, 0x9b, 0xce, 0x63, 0xe2,
	0xca, 0x08, 0xac, 0x9c, 0xb4, 0xa9, 0x4b, 0x63, 0x8a, 0x7b, 0x8f, 0x23, 0x5e, 0xfd, 0xf8, 0x9e,
	0x2c, 0x6f, 0xf9, 0x6f, 0xed, 0x2f, 0x6a, 0xd0, 0x3b, 0x70, 0xc6, 0xde, 0x1e, 0xd6, 0x93, 0x67,
	0x66, 0xf8, 0x42, 0x45, 0xc6, 0xd3, 0xb0, 0x2c, 0x43, 0x0b, 0xe7, 0x5d, 0xe3, 0x1d, 0x0f, 0xf1,
	0xe6, 0xe7, 0x3e, 0x95, 0xbe, 0x5f, 0x83, 0xfe, 0x2b, 0x1a, 0x3a, 0xc7, 0x73, 0x29, 0x6f, 0xe1,
	0x64, 0xa8, 0xe5, 0x8e, 0x11, 0x66, 0xa3, 0xc8, 0x19, 0x7b, 0xbc, 0x07, 0xc0, 0x0d, 0xa1, 0xe8,
	0x19, 0x21, 0xaf, 0x4a, 0x43, 0x84, 0x5e, 0xa5, 0x2a, 0xcb, 0xea, 0x11, 0xed, 0x57, 0x80, 0xa0,
	0x08, 0x07, 0x79, 0x9e, 0x5f, 0x44, 0x16, 0xed, 0xd3, 0x1a, 0xcb, 0x13, 0x56, 0x38, 0x0f, 0x62,
	0xa9, 0xd6, 0x45, 0x68, 0x05, 0xc9, 0xd1, 0x94, 0xca, 0xc4, 0x80, 0xa3, 0x72, 0x4d, 0x9c, 0x13,
	0xfb, 0x3a, 0x28, 0x32, 0x6b, 0xfb, 0x9e, 0x9b, 0xd6, 0x12, 0x48, 0xfb, 0xc4, 0x73, 0x4b, 0x35,
	0x5d, 0xf3, 0xac, 0x8a, 0x65, 0x65, 0x99, 0xda, 0xaf, 0x80, 0xa0, 0xa4, 0xd4, 0x96, 0xb2, 0x5e,
	0x80, 0x15, 0xcf, 0xf7, 0x2c, 0x8a, 0xa2, 0x8a, 0xc1, 0x19, 0x92, 0xaa, 0xd0, 0x9c, 0xcc, 0x4c,
	0x0b, 0xed, 0xce, 0x7f, 0x6b, 0xdf, 0x85, 0xc1, 0x2e, 0x2d, 0x58, 0xe0, 0x4c, 0x47, 0x4c, 0x97,
	0xac, 0x2f, 0x59, 0xb2, 0x51, 0xbd, 0x64, 0x33, 0xb7, 0xe4, 0x13, 0x20, 0xb8, 0x64, 0xa6, 0x4a,
	0xe9, 0xe6, 0x92, 0xe3, 0x90, 0xdb, 0xdb, 0x7a, 0x61, 0x6f, 0xb5, 0x7f, 0xa8, 0xc1, 0x40, 0xe4,
	0xa3, 0xe7, 0x74, 0xfe, 0xca, 0x74, 0x93, 0xb7, 0xc8, 0x4e, 0xa0, 0xc1, 0xf6, 0x55, 0x70, 0x61,
	0x3f, 0x99, 0x36, 0x27, 0xec, 0x3b, 0x94, 0x5a, 0x0c, 0xc4, 0xe1, 0xc0, 0xe5, 0xc3, 0x23, 0x50,
	0x0e, 0xd5, 0x9b, 0x30, 0x30, 0xa3, 0xa9, 0xe1, 0x7b, 0x86, 0x04, 0x88, 0x3e, 0x92, 0x62, 0x46,
	0xd3, 0x4f, 0xbc, 0xc7, 0x0b, 0x28, 0x5b, 0xa8, 0x89, 0x79, 0x57, 0xa0, 0x50, 0x75, 0x75, 0x00,
	0x75, 0xe7, 0x84, 0xa7, 0x58, 0x45, 0xaf, 0x3b, 0x27, 0xda, 0x16, 0x10, 0xa1, 0x0c, 0xb5, 0x53,
	0x75, 0x52, 0xf9, 0x6a, 0x39, 0xf9, 0xb4, 0xcf, 0xea, 0xd0, 0x62, 0xbe, 0x7f, 0x78, 0xca, 0x72,
	0x98, 0x9f, 0xc4, 0x41, 0x12, 0x47, 0xe9, 0xe9, 0xc4, 0x73, 0x18, 0x12, 0xc5, 0x01, 0x75, 0x1d,
	0x14, 0xc7, 0xcb, 0x61, 0x44, 0x9e, 0xeb, 0x09, 0x9a, 0x80, 0xbc, 0x5b, 0x16, 0xb9, 0x02, 0xed,
	0x42, 0x9b, 0xed, 0x41, 0xed, 0xab, 0xba, 0xa4, 0xa8, 0x57, 0xa1, 0xcb, 0x4f, 0x83, 0xd8, 0x41,
	0x37, 0xee, 0x3f, 0xa8, 0xdd, 0xd7, 0x3b, 0x8c, 0x76, 0xe8, 0xcc, 0x78, 0x60, 0xd1, 0xd3, 0xc0,
	0x09, 0xe7, 0xdc, 0x1a, 0x7d, 0x1d, 0x47, 0xaa, 0x06, 0x0a, 0x3b, 0x6c, 0xdf, 0x38, 0xec, 0x28,
	0xa0, 0xb6, 0xac, 0xa4, 0xf2, 0x34, 0x76, 0xed, 0xc1, 0x65, 0x8c, 0x71, 0xe8, 0x27, 0x81, 0xe1,
	0xd8, 0x78, 0xd8, 0x0c, 0x90, 0xfe, 0x94, 0x91, 0x9f, 0xd9, 0xcc, 0x01, 0x8e, 0x42, 0xd3, 0xb3,
	0x26, 0x0c, 0x02, 0xa2, 0xc5, 0x21, 0x08, 0xcf, 0x6c, 0xed, 0x27, 0x35, 0xe8, 0x1e, 0xa6, 0xb7,
	0xcb, 0x7b, 0xa0, 0x84, 0xe2, 0xa7, 0x91, 0xbb, 0x65, 0x2a, 0xa3, 0xfc, 0xe5, 0xb2, 0x17, 0x66,
	0x03, 0xf5, 0x1e, 0xb4, 0x6d, 0x1a, 0x9b, 0x8e, 0x1b, 0x61, 0x69, 0xba, 0x36, 0x4a, 0xb9, 0xed,
	0x8a, 0x09, 0xfe, 0x91, 0x44, 0xa9, 0xdf, 0x00, 0x88, 0x68, 0x28, 0x3b, 0x70, 0x0d, 0xfe, 0xcd,
	0x30, 0xfb, 0xe6, 0x20, 0x9d, 0xe3, 0x9f, 0xe5, 0xb0, 0xda, 0x1d, 0x58, 0x39, 0xe4, 0xf7, 0xd8,
	0x4d, 0xa8, 0xc7, 0xa7, 0x5c, 0xb4, 0xde, 0x36, 0x19, 0x1d, 0x86, 0xa6, 0x17, 0x99, 0xbc, 0x34,
	0xe0, 0x9f, 0xd4, 0xe3, 0x53, 0xed, 0x1e, 0x74, 0x74, 0xf3, 0x8d, 0x40, 0xdf, 0xc8, 0xa1, 0xcf,
	0x8f, 0x18, 0xb9, 0xe2, 0x83, 0x3f, 0x68, 0xc2, 0x40, 0x96, 0xf9, 0xe8, 0x46, 0x5f, 0x20, 0xe4,
	0xaf, 0x40, 0x77, 0x6c, 0x46, 0x46, 0x10, 0x3a, 0x96, 0x0c, 0x9f, 0xce, 0xd8, 0x8c, 0xf6, 0xd9,
	0x58, 0x4e, 0xba, 0xce, 0xcc, 0x89, 0x31, 0xf4, 0xd9, 0xe4, 0x0b, 0x36, 0x66, 0x8e, 0x1f, 0xfb,
	0xdc, 0x43, 0x14, 0xbd, 0x1e, 0xfb, 0x99, 0x93, 0xb7, 0xf2, 0x41, 0xf8, 0x01, 0xa8, 0xb6, 0x19,
	0x9b, 0x06, 0x36, 0x2c, 0x0d, 0xde, 0x89, 0xc2, 0x70, 0x21, 0x6c, 0x06, 0x5b, 0xd0, 0x3b, 0x8c,
	0xce, 0x4a, 0x0c, 0x8e, 0x76, 0x45, 0x55, 0x8c, 0xa5, 0x36, 0x23, 0xbd, 0x10, 0x25, 0xf1, 0x26,
	0x28, 0xb1, 0x6f, 0x64, 0x4a, 0x76, 0xb9, 0x92, 0x10, 0xfb, 0x0f, 0xa5, 0x9a, 0x1f, 0x82, 0x22,
	0xa7, 0xb9, 0x3b, 0x00, 0x76, 0x34, 0x3e, 0xe1, 0xa1, 0x84, 0x30, 0xe1, 0x14, 0x66, 0x36, 0x50,
	0xb7, 0xa1, 0x4f, 0x4f, 0x2d, 0xde, 0x50, 0x12, 0xdf, 0xf5, 0xb8, 0xf5, 0xfb, 0xa3, 0xc7, 0x48,
	0xe5, 0x9f, 0x28, 0x34, 0x37, 0x62, 0x45, 0x89, 0x35, 0x31, 0x1d, 0x8f, 0xf9, 0xa8, 0xc2, 0x45,
	0x6d, 0xf3, 0xf1, 0x33, 0x9b, 0x29, 0x12, 0xfb, 0x53, 0xea, 0x19, 0xc2, 0x24, 0x36, 0xd7, 0x17,
	0x38, 0x49, 0xa4, 0x84, 0xcb, 0xd0, 0x11, 0x80, 0xd8, 0x1f, 0x52, 0x91, 0x29, 0xf9, 0xf8, 0xd0,
	0x67, 0x35, 0xa5, 0x98, 0x8a, 0x26, 0x7e, 0x18, 0x5b, 0x49, 0x3c, 0x3c, 0xe6, 0xa9, 0xae, 0xcf,
	0xa9, 0x07, 0x48, 0x64, 0xd5, 0x56, 0x7c, 0x2a, 0x64, 0x1d, 0x8b, 0x48, 0x8c, 0x4f, 0xf9, 0x19,
	0xff, 0x8f, 0x35, 0x38, 0x27, 0x1d, 0x23, 0x0b, 0x93, 0x92, 0x69, 0x6b, 0x0b, 0xa6, 0xbd, 0x06,
	0xbd, 0xf4, 0x44, 0x35, 0x4e, 0xb0, 0xaf, 0x08, 0x29, 0xe9, 0x55, 0x11, 0x10, 0xa2, 0xb3, 0x64,
	0x00, 0xbd, 0x08, 0x88, 0xd0, 0x61, 0x32, 0xc0, 0x01, 0x3f, 0x45, 0xcc, 0x68, 0x82, 0x4e, 0xc3,
	0x7f, 0xf3, 0x2b, 0x58, 0xfa, 0x91, 0x4d, 0x43, 0x74, 0x1f, 0x25, 0x25, 0xee, 0xd2, 0x50, 0x1b,
	0x41, 0x3f, 0xd3, 0x88, 0x45, 0xc8, 0x06, 0x70, 0xd1, 0xd1, 0x9d, 0x44, 0x5a, 0xed, 0x32, 0x0a,
	0xf7, 0x23, 0xed, 0x05, 0x9c, 0xcf, 0x87, 0xc6, 0x97, 0xab, 0xcd, 0x34, 0x07, 0xd6, 0x24, 0xb7,
	0x33, 0x6b, 0x27, 0xe5, 0x4b, 0xd7, 0x4e, 0x9a, 0x0e, 0x43, 0xb9, 0xd4, 0xdb, 0xaa, 0xa3, 0x77,
	0x5d, 0x4d, 0xfb, 0xeb, 0x1a, 0x28, 0x8c, 0xcb, 0x33, 0x9b, 0x7a, 0xb1, 0x13, 0xcf, 0xd5, 0x3b,
	0xd0, 0x71, 0xf0, 0x37, 0x26, 0x99, 0xfe, 0x48, 0x4e, 0x8a, 0x36, 0x88, 0x93, 0x41, 0x89, 0x35,
	0x31, 0x5d, 0xe6, 0x34, 0xd4, 0x98, 0x38, 0xb6, 0x4d, 0x3d, 0x5c, 0x60, 0x35, 0xa5, 0x7f, 0xcc,
	0xc9, 0x45, 0xe8, 0x89, 0x13, 0x25, 0xa6, 0x8b, 0x57, 0xfb, 0x0c, 0xfa, 0x8a, 0x93, 0x2b, 0xdb,
	0x5f, 0xcd, 0xaa, 0xf6, 0x97, 0x36, 0x86, 0x01, 0x13, 0x9d, 0xda, 0xa9, 0xf0, 0xcb, 0x6b, 0xc4,
	0x0d, 0x80, 0x80, 0x37, 0xa8, 0x0c, 0x59, 0x1e, 0x28, 0x7a, 0x37, 0x48, 0x5b, 0x56, 0x05, 0x23,
	0x35, 0xca, 0x46, 0xfa, 0x3a, 0xb6, 0xc1, 0xf7, 0xe5, 0xfb, 0xc3, 0x0d, 0x68, 0xf1, 0xb7, 0x88,
	0x39, 0xb6, 0xe1, 0x0b, 0xcf, 0x14, 0x38, 0xa5, 0xfd, 0x3a, 0x74, 0x9f, 0xb8, 0x66, 0x34, 0xe1,
	0x6f, 0x09, 0x25, 0xc9, 0xfa, 0x99, 0x64, 0x17, 0xa1, 0xe5, 0xe6, 0xee, 0xf9, 0x3a, 0x8e, 0xf0,
	0x16, 0x22, 0x4c, 0x23, 0x45, 0x4a, 0x09, 0xda, 0x3e, 0x00, 0x67, 0xfe, 0x3a, 0x74, 0x62, 0x7a,
	0x06, 0xf7, 0x7c, 0x4f, 0x56, 0x11, 0x3d, 0x59, 0x96, 0x8c, 0x69, 0xae, 0x13, 0x2f, 0x06, 0xda,
	0x6d, 0x38, 0x97, 0x8a, 0xab, 0xd3, 0x28, 0xf0, 0xbd, 0x28, 0x6b, 0xe9, 0xd6, 0xb2, 0xcf, 0xb5,
	0x27, 0xa0, 0xee, 0xd2, 0xa3, 0x64, 0xfc, 0xc2, 0xf1, 0xa6, 0xfc, 0x8b, 0xdd, 0x64, 0x16, 0x7c,
	0x7e, 0x05, 0xb5, 0xfb, 0xb0, 0xbe, 0xc8, 0xe7, 0xcc, 0x95, 0x7b, 0xd0, 0x3d, 0xf0, 0x8f, 0x63,
	0xde, 0x4e, 0xd1, 0x56, 0xa1, 0xff, 0x04, 0x5f, 0x6b, 0x1e, 0x73, 0x05, 0xf6, 0x60, 0x20, 0x09,
	0xdf, 0x0a, 0x5c, 0xdf, 0xb4, 0x59, 0x51, 0x14, 0x98, 0x73, 0xf6, 0x53, 0x3c, 0xf2, 0x88, 0xee,
	0x56, 0x0f, 0x69, 0x72, 0x5f, 0x70, 0x28, 0x03, 0x1b, 0x87, 0xda, 0x5d, 0x38, 0x97, 0x8a, 0xb7,
	0x4b, 0x2d, 0xf1, 0x64, 0xb6, 0x06, 0xad, 0x39, 0x8d, 0x0c, 0xcf, 0xe7, 0xbc, 0x3a, 0xfa, 0xca,
	0x9c, 0x46, 0x2f, 0x7d, 0xed, 0x7c, 0x0e, 0xfb, 0x94, 0xc6, 0x07, 0xb1, 0x19, 0x53, 0xed, 0xf7,
	0x9b, 0xac, 0xec, 0x46, 0x2a, 0x27, 0x71, 0x53, 0x98, 0x73, 0x3f, 0x89, 0xe5, 0xc5, 0x43, 0x8c,
	0x64, 0xb3, 0xab, 0x9e, 0x35, 0xbb, 0x2e, 0x42, 0x6b, 0xc6, 0x1b, 0xdd, 0x18, 0x26, 0x38, 0x2a,
	0xf4, 0xd4, 0x9a, 0x4b, 0x7a, 0x6a, 0x2b, 0xcb, 0x7a, 0x6a, 0x4b, 0xbb, 0x18, 0xad, 0x33, 0xba,
	0x18, 0x1b, 0x00, 0x21, 0x33, 0x38, 0xef, 0x30, 0xf0, 0xc3, 0xb9, 0xab, 0x77, 0x39, 0x85, 0xdd,
	0xd3, 0x59, 0x8a, 0x16, 0xd3, 0xb2, 0xd7, 0xd2, 0x11, 0x29, 0x9a, 0x13, 0x65, 0x6b, 0xfc, 0x03,
	0x50, 0x43, 0xec, 0xb7, 0x18, 0xc7, 0xe6, 0x54, 0x74, 0x2b, 0xf0, 0x11, 0x94, 0xc8, 0x99, 0x27,
	0xe6, 0x94, 0xb7, 0x2b, 0xd4, 0xbb, 0x70, 0x2e, 0x45, 0xa7, 0x17, 0x7b, 0x51, 0xe7, 0xad, 0xca,
	0x89, 0xd7, 0x78, 0xc1, 0xbf, 0x0d, 0x29, 0x49, 0x76, 0x34, 0x7a, 0x22, 0x59, 0x48, 0x32, 0x76,
	0x33, 0xbe, 0x09, 0xef, 0xa5, 0x40, 0xde, 0xd6, 0xb0, 0xfc, 0x59, 0xc0, 0x2e, 0xee, 0xb6, 0x10,
	0x46, 0xe1, 0x5f, 0x5d, 0x96, 0x98, 0x87, 0x49, 0xec, 0xef, 0x48, 0x84, 0x54, 0xb4, 0xf8, 0x64,
	0xd8, 0xaf, 0x78, 0x32, 0xbc, 0x0e, 0x4a, 0x14, 0xfb, 0xa1, 0x39, 0xa6, 0xf9, 0xf7, 0xd4, 0x1e,
	0xd2, 0x18, 0x84, 0xf9, 0x6d, 0xce, 0x2b, 0xfc, 0x40, 0xdb, 0x07, 0x25, 0x25, 0xbc, 0xf0, 0xc7,
	0xbc, 0xd5, 0x43, 0x4f, 0xa8, 0x2b, 0xdf, 0x05, 0xf9, 0x80, 0x39, 0xc4, 0x51, 0x62, 0x4d, 0x69,
	0x8c, 0x5e, 0x82, 0x23, 0x16, 0x27, 0x31, 0x3d, 0x8d, 0xd1, 0x4d, 0xf8, 0x6f, 0x6d, 0x0d, 0xce,
	0x67, 0x91, 0xe5, 0xb8, 0xee, 0x8e, 0xef, 0x1d, 0x3b, 0x63, 0x6d, 0x0b, 0x06, 0xe2, 0x55, 0xec,
	0x35, 0x3e, 0x4e, 0x2e, 0x7b, 0x1a, 0xbb, 0xfb, 0xa3, 0xab, 0xd0, 0xc3, 0x23, 0x86, 0x17, 0x33,
	0x9b, 0x70, 0x31, 0x37, 0x34, 0xb2, 0xff, 0x0c, 0x20, 0x3f, 0xb3, 0xde, 0xfc, 0xc1, 0x5f, 0x0d,
	0x6b, 0xea, 0x7a, 0x7a, 0x63, 0xe7, 0x88, 0x7d, 0xc7, 0x1b, 0x93, 0x1a, 0xce, 0x6d, 0xc0, 0xf9,
	0xfc, 0x1c, 0x3e, 0x64, 0x91, 0xfa, 0x7a, 0xf3, 0x0f, 0x2b, 0xa6, 0xf1, 0xa9, 0x8a, 0x34, 0x70,
	0xfa, 0x1a, 0xac, 0xe5, 0xa7, 0xd3, 0x77, 0x3d, 0xd2, 0x44, 0xf6, 0x25, 0xe1, 0xb2, 0x7e, 0x34,
	0x59, 0x41, 0xc4, 0x0d, 0xb8, 0x5c, 0x58, 0x21, 0x9f, 0x36, 0x48, 0x0b, 0x41, 0x37, 0x61, 0xbd,
	0x0a, 0x24, 0x52, 0x09, 0x69, 0x57, 0x2f, 0x96, 0xbd, 0x0e, 0x91, 0x6e, 0xb5, 0xb6, 0x72, 0x1a,
	0x50, 0x1d, 0x0d, 0x86, 0x25, 0x06, 0xe9, 0xc3, 0x09, 0xe9, 0x21, 0x8b, 0x92, 0xca, 0x19, 0x40,
	0x41, 0x26, 0x25, 0x29, 0xb2, 0x9e, 0x3b, 0xe9, 0x23, 0x8b, 0xeb, 0x70, 0x29, 0x8f, 0xc8, 0x75,
	0xa0, 0xc9, 0x00, 0x21, 0xef, 0x81, 0x5a, 0xd8, 0x16, 0x7e, 0x4d, 0x20, 0xab, 0x38, 0x7b, 0x15,
	0x2e, 0x14, 0xcc, 0x81, 0xff, 0xee, 0x41, 0xce, 0xa1, 0x08, 0xb7, 0xe0, 0xbd, 0xd2, 0x86, 0x17,
	0x9e, 0xed, 0x88, 0x5a, 0xad, 0x6f, 0xfe, 0x01, 0x8f, 0x9c, 0xaf, 0x96, 0x44, 0x3c, 0xe1, 0x91,
	0x0b, 0xd5, 0xd6, 0x48, 0xab, 0x56, 0xb2, 0x86, 0x4b, 0x5c, 0x81, 0x73, 0x45, 0x00, 0xe3, 0x7d,
	0xb1, 0x7a, 0x5b, 0x8b, 0xbd, 0x04, 0x72, 0x09, 0x51, 0x25, 0x29, 0xf3, 0xaf, 0xe0, 0x64, 0x58,
	0xed, 0x45, 0x85, 0x87, 0x71, 0x72, 0xb9, 0x1a, 0x54, 0x78, 0x2a, 0x25, 0xeb, 0xd5, 0x2e, 0x9d,
	0x3e, 0x90, 0x92, 0x2b, 0x4b, 0xbd, 0x0c, 0xef, 0x26, 0x64, 0xa3, 0xda, 0xcb, 0xe4, 0xf4, 0x55,
	0x5c, 0xa1, 0xa4, 0x75, 0xb1, 0x4f, 0x4e, 0x6e, 0x54, 0xbb, 0x51, 0xd6, 0x3b, 0x27, 0x37, 0xab,
	0xdd, 0x28, 0x57, 0x2f, 0x93, 0x5b, 0xd5, 0x1a, 0x17, 0x8a, 0x60, 0x72, 0x1b, 0x41, 0x25, 0x6f,
	0x29, 0x97, 0xaf, 0x64, 0x0b, 0x25, 0xba, 0x0d, 0x1b, 0x05, 0x6f, 0x29, 0x3f, 0xe1, 0x92, 0x3b,
	0x08, 0x2c, 0xad, 0x5a, 0x78, 0xd6, 0x25, 0x77, 0xab, 0xf7, 0xbe, 0xd8, 0xf2, 0x27, 0x3f, 0x5b,
	0xad, 0x63, 0xae, 0x19, 0x4d, 0x46, 0xd5, 0x29, 0x0a, 0x1b, 0xd4, 0xe4, 0x5e, 0xb5, 0x76, 0xe5,
	0x16, 0x0f, 0xb9, 0xbf, 0x6c, 0x57, 0xf2, 0x3d, 0x39, 0xf2, 0xd5, 0x6a, 0x6e, 0xe5, 0x8e, 0x20,
	0xd9, 0xae, 0xe6, 0x56, 0xec, 0xf0, 0x91, 0xaf, 0x55, 0x73, 0x2b, 0x37, 0xe5, 0xc8, 0xd7, 0xab,
	0xe3, 0x34, 0x7f, 0x27, 0x20, 0x1f, 0x56, 0xdb, 0xb3, 0x58, 0x7c, 0x93, 0x8f, 0x90, 0x53, 0xc9,
	0x9e, 0xb9, 0x7f, 0x1c, 0x23, 0x3f, 0x87, 0x8c, 0xb6, 0xe0, 0x6a, 0x41, 0xc5, 0x85, 0xb7, 0x50,
	0xf2, 0x0d, 0x44, 0xbe, 0x0f, 0x57, 0xaa, 0x90, 0x12, 0xf6, 0xf3, 0x4b, 0x2c, 0x5b, 0x68, 0x7d,
	0x90, 0x07, 0xc8, 0xac, 0xe4, 0x5d, 0x0b, 0xf7, 0x60, 0xf2, 0x0b, 0xd5, 0xde, 0x55, 0xb8, 0x5e,
	0x92, 0x5f, 0x5c, 0xb2, 0xeb, 0xa5, 0x67, 0x09, 0xb2, 0x5f, 0x6d, 0xd9, 0xfc, 0x53, 0x03, 0xf9,
	0xd5, 0xea, 0x6c, 0x2b, 0x9b, 0x3d, 0x44, 0x3f, 0x23, 0xf7, 0xc8, 0xdb, 0x08, 0x39, 0xa8, 0x4e,
	0x94, 0x69, 0x35, 0x4f, 0x0e, 0xab, 0xd3, 0x4a, 0x76, 0x81, 0x20, 0xdf, 0xaa, 0xb6, 0xd0, 0xc2,
	0x85, 0x80, 0xbc, 0x42, 0xa5, 0x4a, 0x3b, 0xb8, 0x58, 0xc8, 0x93, 0xd7, 0xeb, 0xcd, 0x1f, 0x33,
	0xe4, 0x7d, 0xb8, 0x75, 0x36, 0x32, 0xe5, 0xfd, 0xed, 0xf5, 0xe6, 0xa7, 0x15, 0x7a, 0xa4, 0x25,
	0x3f, 0xf9, 0x35, 0x64, 0x59, 0x92, 0x72, 0xa1, 0x4c, 0x27, 0xf6, 0x5b, 0x80, 0xb2, 0x46, 0x27,
	0x14, 0x81, 0x0b, 0xb1, 0x94, 0x2f, 0xdb, 0xc9, 0x31, 0x0a, 0x56, 0xda, 0x85, 0x42, 0x19, 0x47,
	0xc6, 0xc8, 0xaa, 0xb4, 0xdd, 0xf9, 0xd2, 0x8e, 0x4c, 0x90, 0xd1, 0x1d, 0xb8, 0x56, 0x6d, 0x93,
	0xb4, 0x58, 0x23, 0x0e, 0x42, 0x17, 0xeb, 0x85, 0xf4, 0x9f, 0xc1, 0xc8, 0x77, 0xaa, 0x37, 0x3e,
	0x03, 0x4c, 0xab, 0xc3, 0xa3, 0x58, 0x05, 0x12, 0x37, 0xdd, 0xfc, 0x82, 0x43, 0xeb, 0x4e, 0x10,
	0xb8, 0x34, 0x17, 0x93, 0x3f, 0x68, 0xa4, 0x79, 0xe0, 0xf2, 0x22, 0x50, 0xa2, 0x7e, 0xd8, 0x48,
	0x83, 0x68, 0xb8, 0x88, 0xc2, 0x88, 0xfc, 0xbd, 0x46, 0x1a, 0xdf, 0xeb, 0xd5, 0x20, 0x6a, 0x1f,
	0x9e, 0x92, 0x1f, 0x49, 0xd8, 0xdd, 0xa2, 0xc1, 0x2a, 0xfa, 0x37, 0xe4, 0xbf, 0x25, 0xf6, 0x03,
	0xb8, 0x5e, 0x85, 0x2d, 0x1e, 0x4c, 0xff, 0x23, 0xd1, 0xf7, 0xe0, 0x66, 0x15, 0x7a, 0xe1, 0x84,
	0xfa, 0xdf, 0x46, 0x5a, 0xf8, 0x14, 0x33, 0x92, 0x1f, 0x15, 0x6a, 0xb8, 0x7f, 0x6e, 0xa6, 0x21,
	0x3b, 0x2c, 0xe1, 0x32, 0xd0, 0xbf, 0x34, 0xd3, 0x13, 0x78, 0xad, 0x04, 0x42, 0x03, 0xfd, 0xab,
	0x64, 0x73, 0xa7, 0x94, 0x2a, 0xfd, 0x88, 0x65, 0x06, 0x76, 0x33, 0x93, 0x79, 0xe6, 0xdf, 0x24,
	0xb3, 0x92, 0x2d, 0x73, 0x50, 0x96, 0x4a, 0xfe, 0xbd, 0x99, 0xd6, 0x3a, 0x97, 0x2a, 0xd6, 0xe4,
	0xf6, 0xfe, 0x8f, 0x25, 0xac, 0x5e, 0x9a, 0x9e, 0x9f, 0x73, 0x84, 0xbf, 0x59, 0xa9, 0x66, 0xc5,
	0x60, 0x12, 0xf3, 0xb7, 0x2b, 0xe9, 0x71, 0x70, 0xb1, 0x8c, 0x41, 0x1d, 0xff, 0x6e, 0xa5, 0xda,
	0x54, 0x12, 0xc2, 0x45, 0xfa, 0xfb, 0x95, 0x34, 0xe3, 0x14, 0x62, 0xf9, 0x91, 0xe3, 0xb1, 0x32,
	0x31, 0x27, 0xd5, 0x8f, 0x5b, 0xd5, 0x3e, 0x85, 0x48, 0x09, 0xfb, 0xa3, 0x16, 0x32, 0x2c, 0xf9,
	0x54, 0xc6, 0x30, 0xdb, 0xa7, 0x3f, 0x6e, 0x55, 0x87, 0x06, 0x62, 0x33, 0xe0, 0x9f, 0xb4, 0xd2,
	0x48, 0xbb, 0x5c, 0x01, 0x44, 0x85, 0xff, 0xf4, 0x6c, 0x76, 0xd9, 0x39, 0xf4, 0x67, 0x92, 0x5d,
	0x69, 0xf7, 0x25, 0x30, 0x34, 0xbd, 0xe8, 0x98, 0x86, 0x7b, 0xd1, 0x98, 0xfc, 0x79, 0x2b, 0x3d,
	0x8e, 0xae, 0x54, 0x40, 0x3f, 0x09, 0x6d, 0x81, 0xfb, 0xc9, 0xd9, 0x6b, 0x8b, 0x9a, 0x9b, 0x01,
	0x3f, 0x3d, 0x9b, 0x61, 0xba, 0x31, 0x3f, 0x6d, 0xa5, 0x35, 0x5b, 0xf1, 0x1c, 0xf4, 0xa3, 0x19,
	0x8f, 0x09, 0x69, 0xf0, 0xdf, 0x68, 0x57, 0xa7, 0x0d, 0x01, 0x94, 0xa8, 0xdf, 0x6c, 0x57, 0xa7,
	0x0d, 0x81, 0x42, 0x03, 0xfe, 0x56, 0xbb, 0x5a, 0x09, 0x01, 0xda, 0x8b, 0xc6, 0xd2, 0x80, 0xdf,
	0x3f, 0x93, 0xdb, 0x5e, 0x34, 0x66, 0x11, 0xf1, 0xdb, 0xed, 0x6a, 0x87, 0xc9, 0x96, 0xe4, 0x8a,
	0xfe, 0x0e, 0xf2, 0x7a, 0xf4, 0x01, 0xac, 0x5b, 0xfe, 0x6c, 0x34, 0xa5, 0x34, 0x98, 0xd2, 0xf9,
	0x48, 0xfc, 0xd3, 0x38, 0xff, 0x77, 0x79, 0xcb, 0x77, 0x1f, 0x0d, 0x9e, 0x53, 0x1a, 0x3c, 0xa7,
	0x32, 0xc3, 0xfc, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x04, 0xa0, 0x52, 0x94, 0x5f, 0x2f, 0x00,
	0x00,
}
