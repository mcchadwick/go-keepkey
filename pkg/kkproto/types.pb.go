// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package kkproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Type of failures returned by Failure message
// @used_in Failure
type FailureType int32

const (
	FailureType_Failure_UnexpectedMessage FailureType = 1
	FailureType_Failure_ButtonExpected    FailureType = 2
	FailureType_Failure_SyntaxError       FailureType = 3
	FailureType_Failure_ActionCancelled   FailureType = 4
	FailureType_Failure_PinExpected       FailureType = 5
	FailureType_Failure_PinCancelled      FailureType = 6
	FailureType_Failure_PinInvalid        FailureType = 7
	FailureType_Failure_InvalidSignature  FailureType = 8
	FailureType_Failure_Other             FailureType = 9
	FailureType_Failure_NotEnoughFunds    FailureType = 10
	FailureType_Failure_NotInitialized    FailureType = 11
	FailureType_Failure_PinMismatch       FailureType = 12
	FailureType_Failure_FirmwareError     FailureType = 99
)

var FailureType_name = map[int32]string{
	1:  "Failure_UnexpectedMessage",
	2:  "Failure_ButtonExpected",
	3:  "Failure_SyntaxError",
	4:  "Failure_ActionCancelled",
	5:  "Failure_PinExpected",
	6:  "Failure_PinCancelled",
	7:  "Failure_PinInvalid",
	8:  "Failure_InvalidSignature",
	9:  "Failure_Other",
	10: "Failure_NotEnoughFunds",
	11: "Failure_NotInitialized",
	12: "Failure_PinMismatch",
	99: "Failure_FirmwareError",
}
var FailureType_value = map[string]int32{
	"Failure_UnexpectedMessage": 1,
	"Failure_ButtonExpected":    2,
	"Failure_SyntaxError":       3,
	"Failure_ActionCancelled":   4,
	"Failure_PinExpected":       5,
	"Failure_PinCancelled":      6,
	"Failure_PinInvalid":        7,
	"Failure_InvalidSignature":  8,
	"Failure_Other":             9,
	"Failure_NotEnoughFunds":    10,
	"Failure_NotInitialized":    11,
	"Failure_PinMismatch":       12,
	"Failure_FirmwareError":     99,
}

func (x FailureType) Enum() *FailureType {
	p := new(FailureType)
	*p = x
	return p
}
func (x FailureType) String() string {
	return proto.EnumName(FailureType_name, int32(x))
}
func (x *FailureType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FailureType_value, data, "FailureType")
	if err != nil {
		return err
	}
	*x = FailureType(value)
	return nil
}
func (FailureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{0}
}

// *
// Type of script which will be used for transaction output
// @used_in TxOutputType
type OutputScriptType int32

const (
	OutputScriptType_PAYTOADDRESS     OutputScriptType = 0
	OutputScriptType_PAYTOSCRIPTHASH  OutputScriptType = 1
	OutputScriptType_PAYTOMULTISIG    OutputScriptType = 2
	OutputScriptType_PAYTOOPRETURN    OutputScriptType = 3
	OutputScriptType_PAYTOWITNESS     OutputScriptType = 4
	OutputScriptType_PAYTOP2SHWITNESS OutputScriptType = 5
)

var OutputScriptType_name = map[int32]string{
	0: "PAYTOADDRESS",
	1: "PAYTOSCRIPTHASH",
	2: "PAYTOMULTISIG",
	3: "PAYTOOPRETURN",
	4: "PAYTOWITNESS",
	5: "PAYTOP2SHWITNESS",
}
var OutputScriptType_value = map[string]int32{
	"PAYTOADDRESS":     0,
	"PAYTOSCRIPTHASH":  1,
	"PAYTOMULTISIG":    2,
	"PAYTOOPRETURN":    3,
	"PAYTOWITNESS":     4,
	"PAYTOP2SHWITNESS": 5,
}

func (x OutputScriptType) Enum() *OutputScriptType {
	p := new(OutputScriptType)
	*p = x
	return p
}
func (x OutputScriptType) String() string {
	return proto.EnumName(OutputScriptType_name, int32(x))
}
func (x *OutputScriptType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OutputScriptType_value, data, "OutputScriptType")
	if err != nil {
		return err
	}
	*x = OutputScriptType(value)
	return nil
}
func (OutputScriptType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{1}
}

// *
// Type of script which will be used for transaction output
// @used_in TxInputType
type InputScriptType int32

const (
	InputScriptType_SPENDADDRESS     InputScriptType = 0
	InputScriptType_SPENDMULTISIG    InputScriptType = 1
	InputScriptType_EXTERNAL         InputScriptType = 2
	InputScriptType_SPENDWITNESS     InputScriptType = 3
	InputScriptType_SPENDP2SHWITNESS InputScriptType = 4
)

var InputScriptType_name = map[int32]string{
	0: "SPENDADDRESS",
	1: "SPENDMULTISIG",
	2: "EXTERNAL",
	3: "SPENDWITNESS",
	4: "SPENDP2SHWITNESS",
}
var InputScriptType_value = map[string]int32{
	"SPENDADDRESS":     0,
	"SPENDMULTISIG":    1,
	"EXTERNAL":         2,
	"SPENDWITNESS":     3,
	"SPENDP2SHWITNESS": 4,
}

func (x InputScriptType) Enum() *InputScriptType {
	p := new(InputScriptType)
	*p = x
	return p
}
func (x InputScriptType) String() string {
	return proto.EnumName(InputScriptType_name, int32(x))
}
func (x *InputScriptType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InputScriptType_value, data, "InputScriptType")
	if err != nil {
		return err
	}
	*x = InputScriptType(value)
	return nil
}
func (InputScriptType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{2}
}

// *
// Type of information required by transaction signing process
// @used_in TxRequest
type RequestType int32

const (
	RequestType_TXINPUT     RequestType = 0
	RequestType_TXOUTPUT    RequestType = 1
	RequestType_TXMETA      RequestType = 2
	RequestType_TXFINISHED  RequestType = 3
	RequestType_TXEXTRADATA RequestType = 4
)

var RequestType_name = map[int32]string{
	0: "TXINPUT",
	1: "TXOUTPUT",
	2: "TXMETA",
	3: "TXFINISHED",
	4: "TXEXTRADATA",
}
var RequestType_value = map[string]int32{
	"TXINPUT":     0,
	"TXOUTPUT":    1,
	"TXMETA":      2,
	"TXFINISHED":  3,
	"TXEXTRADATA": 4,
}

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}
func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}
func (x *RequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RequestType_value, data, "RequestType")
	if err != nil {
		return err
	}
	*x = RequestType(value)
	return nil
}
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{3}
}

// *
// Type of ouput address specify in transaction
// @used_in TxOutputType
type OutputAddressType int32

const (
	OutputAddressType_SPEND    OutputAddressType = 0
	OutputAddressType_TRANSFER OutputAddressType = 1
	OutputAddressType_CHANGE   OutputAddressType = 2
	OutputAddressType_EXCHANGE OutputAddressType = 3
)

var OutputAddressType_name = map[int32]string{
	0: "SPEND",
	1: "TRANSFER",
	2: "CHANGE",
	3: "EXCHANGE",
}
var OutputAddressType_value = map[string]int32{
	"SPEND":    0,
	"TRANSFER": 1,
	"CHANGE":   2,
	"EXCHANGE": 3,
}

func (x OutputAddressType) Enum() *OutputAddressType {
	p := new(OutputAddressType)
	*p = x
	return p
}
func (x OutputAddressType) String() string {
	return proto.EnumName(OutputAddressType_name, int32(x))
}
func (x *OutputAddressType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OutputAddressType_value, data, "OutputAddressType")
	if err != nil {
		return err
	}
	*x = OutputAddressType(value)
	return nil
}
func (OutputAddressType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{4}
}

// *
// Type of button request
// @used_in ButtonRequest
type ButtonRequestType int32

const (
	ButtonRequestType_ButtonRequest_Other                     ButtonRequestType = 1
	ButtonRequestType_ButtonRequest_FeeOverThreshold          ButtonRequestType = 2
	ButtonRequestType_ButtonRequest_ConfirmOutput             ButtonRequestType = 3
	ButtonRequestType_ButtonRequest_ResetDevice               ButtonRequestType = 4
	ButtonRequestType_ButtonRequest_ConfirmWord               ButtonRequestType = 5
	ButtonRequestType_ButtonRequest_WipeDevice                ButtonRequestType = 6
	ButtonRequestType_ButtonRequest_ProtectCall               ButtonRequestType = 7
	ButtonRequestType_ButtonRequest_SignTx                    ButtonRequestType = 8
	ButtonRequestType_ButtonRequest_FirmwareCheck             ButtonRequestType = 9
	ButtonRequestType_ButtonRequest_Address                   ButtonRequestType = 10
	ButtonRequestType_ButtonRequest_FirmwareErase             ButtonRequestType = 11
	ButtonRequestType_ButtonRequest_ConfirmTransferToAccount  ButtonRequestType = 12
	ButtonRequestType_ButtonRequest_ConfirmTransferToNodePath ButtonRequestType = 13
	ButtonRequestType_ButtonRequest_ChangeLabel               ButtonRequestType = 14
	ButtonRequestType_ButtonRequest_ChangeLanguage            ButtonRequestType = 15
	ButtonRequestType_ButtonRequest_EnablePassphrase          ButtonRequestType = 16
	ButtonRequestType_ButtonRequest_DisablePassphrase         ButtonRequestType = 17
	ButtonRequestType_ButtonRequest_EncryptAndSignMessage     ButtonRequestType = 18
	ButtonRequestType_ButtonRequest_EncryptMessage            ButtonRequestType = 19
	ButtonRequestType_ButtonRequest_ImportPrivateKey          ButtonRequestType = 20
	ButtonRequestType_ButtonRequest_ImportRecoverySentence    ButtonRequestType = 21
	ButtonRequestType_ButtonRequest_SignIdentity              ButtonRequestType = 22
	ButtonRequestType_ButtonRequest_Ping                      ButtonRequestType = 23
	ButtonRequestType_ButtonRequest_RemovePin                 ButtonRequestType = 24
	ButtonRequestType_ButtonRequest_ChangePin                 ButtonRequestType = 25
	ButtonRequestType_ButtonRequest_CreatePin                 ButtonRequestType = 26
	ButtonRequestType_ButtonRequest_GetEntropy                ButtonRequestType = 27
	ButtonRequestType_ButtonRequest_SignMessage               ButtonRequestType = 28
	ButtonRequestType_ButtonRequest_ApplyPolicies             ButtonRequestType = 29
	ButtonRequestType_ButtonRequest_SignExchange              ButtonRequestType = 30
	ButtonRequestType_ButtonRequest_AutoLockDelayMs           ButtonRequestType = 31
	ButtonRequestType_ButtonRequest_U2FCounter                ButtonRequestType = 32
	ButtonRequestType_ButtonRequest_ConfirmEosAction          ButtonRequestType = 33
	ButtonRequestType_ButtonRequest_ConfirmEosBudget          ButtonRequestType = 34
	ButtonRequestType_ButtonRequest_ConfirmMemo               ButtonRequestType = 35
	ButtonRequestType_ButtonRequest_ChangeWipeCode            ButtonRequestType = 36
)

var ButtonRequestType_name = map[int32]string{
	1:  "ButtonRequest_Other",
	2:  "ButtonRequest_FeeOverThreshold",
	3:  "ButtonRequest_ConfirmOutput",
	4:  "ButtonRequest_ResetDevice",
	5:  "ButtonRequest_ConfirmWord",
	6:  "ButtonRequest_WipeDevice",
	7:  "ButtonRequest_ProtectCall",
	8:  "ButtonRequest_SignTx",
	9:  "ButtonRequest_FirmwareCheck",
	10: "ButtonRequest_Address",
	11: "ButtonRequest_FirmwareErase",
	12: "ButtonRequest_ConfirmTransferToAccount",
	13: "ButtonRequest_ConfirmTransferToNodePath",
	14: "ButtonRequest_ChangeLabel",
	15: "ButtonRequest_ChangeLanguage",
	16: "ButtonRequest_EnablePassphrase",
	17: "ButtonRequest_DisablePassphrase",
	18: "ButtonRequest_EncryptAndSignMessage",
	19: "ButtonRequest_EncryptMessage",
	20: "ButtonRequest_ImportPrivateKey",
	21: "ButtonRequest_ImportRecoverySentence",
	22: "ButtonRequest_SignIdentity",
	23: "ButtonRequest_Ping",
	24: "ButtonRequest_RemovePin",
	25: "ButtonRequest_ChangePin",
	26: "ButtonRequest_CreatePin",
	27: "ButtonRequest_GetEntropy",
	28: "ButtonRequest_SignMessage",
	29: "ButtonRequest_ApplyPolicies",
	30: "ButtonRequest_SignExchange",
	31: "ButtonRequest_AutoLockDelayMs",
	32: "ButtonRequest_U2FCounter",
	33: "ButtonRequest_ConfirmEosAction",
	34: "ButtonRequest_ConfirmEosBudget",
	35: "ButtonRequest_ConfirmMemo",
	36: "ButtonRequest_ChangeWipeCode",
}
var ButtonRequestType_value = map[string]int32{
	"ButtonRequest_Other":                     1,
	"ButtonRequest_FeeOverThreshold":          2,
	"ButtonRequest_ConfirmOutput":             3,
	"ButtonRequest_ResetDevice":               4,
	"ButtonRequest_ConfirmWord":               5,
	"ButtonRequest_WipeDevice":                6,
	"ButtonRequest_ProtectCall":               7,
	"ButtonRequest_SignTx":                    8,
	"ButtonRequest_FirmwareCheck":             9,
	"ButtonRequest_Address":                   10,
	"ButtonRequest_FirmwareErase":             11,
	"ButtonRequest_ConfirmTransferToAccount":  12,
	"ButtonRequest_ConfirmTransferToNodePath": 13,
	"ButtonRequest_ChangeLabel":               14,
	"ButtonRequest_ChangeLanguage":            15,
	"ButtonRequest_EnablePassphrase":          16,
	"ButtonRequest_DisablePassphrase":         17,
	"ButtonRequest_EncryptAndSignMessage":     18,
	"ButtonRequest_EncryptMessage":            19,
	"ButtonRequest_ImportPrivateKey":          20,
	"ButtonRequest_ImportRecoverySentence":    21,
	"ButtonRequest_SignIdentity":              22,
	"ButtonRequest_Ping":                      23,
	"ButtonRequest_RemovePin":                 24,
	"ButtonRequest_ChangePin":                 25,
	"ButtonRequest_CreatePin":                 26,
	"ButtonRequest_GetEntropy":                27,
	"ButtonRequest_SignMessage":               28,
	"ButtonRequest_ApplyPolicies":             29,
	"ButtonRequest_SignExchange":              30,
	"ButtonRequest_AutoLockDelayMs":           31,
	"ButtonRequest_U2FCounter":                32,
	"ButtonRequest_ConfirmEosAction":          33,
	"ButtonRequest_ConfirmEosBudget":          34,
	"ButtonRequest_ConfirmMemo":               35,
	"ButtonRequest_ChangeWipeCode":            36,
}

func (x ButtonRequestType) Enum() *ButtonRequestType {
	p := new(ButtonRequestType)
	*p = x
	return p
}
func (x ButtonRequestType) String() string {
	return proto.EnumName(ButtonRequestType_name, int32(x))
}
func (x *ButtonRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ButtonRequestType_value, data, "ButtonRequestType")
	if err != nil {
		return err
	}
	*x = ButtonRequestType(value)
	return nil
}
func (ButtonRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{5}
}

// *
// Type of PIN request
// @used_in PinMatrixRequest
type PinMatrixRequestType int32

const (
	PinMatrixRequestType_PinMatrixRequestType_Current   PinMatrixRequestType = 1
	PinMatrixRequestType_PinMatrixRequestType_NewFirst  PinMatrixRequestType = 2
	PinMatrixRequestType_PinMatrixRequestType_NewSecond PinMatrixRequestType = 3
)

var PinMatrixRequestType_name = map[int32]string{
	1: "PinMatrixRequestType_Current",
	2: "PinMatrixRequestType_NewFirst",
	3: "PinMatrixRequestType_NewSecond",
}
var PinMatrixRequestType_value = map[string]int32{
	"PinMatrixRequestType_Current":   1,
	"PinMatrixRequestType_NewFirst":  2,
	"PinMatrixRequestType_NewSecond": 3,
}

func (x PinMatrixRequestType) Enum() *PinMatrixRequestType {
	p := new(PinMatrixRequestType)
	*p = x
	return p
}
func (x PinMatrixRequestType) String() string {
	return proto.EnumName(PinMatrixRequestType_name, int32(x))
}
func (x *PinMatrixRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PinMatrixRequestType_value, data, "PinMatrixRequestType")
	if err != nil {
		return err
	}
	*x = PinMatrixRequestType(value)
	return nil
}
func (PinMatrixRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{6}
}

// *
// Structure representing BIP32 (hierarchical deterministic) node
// Used for imports of private key into the device and exporting public key out of device
// @used_in PublicKey
// @used_in LoadDevice
// @used_in DebugLinkState
// @used_in Storage
type HDNodeType struct {
	Depth                *uint32  `protobuf:"varint,1,req,name=depth" json:"depth,omitempty"`
	Fingerprint          *uint32  `protobuf:"varint,2,req,name=fingerprint" json:"fingerprint,omitempty"`
	ChildNum             *uint32  `protobuf:"varint,3,req,name=child_num,json=childNum" json:"child_num,omitempty"`
	ChainCode            []byte   `protobuf:"bytes,4,req,name=chain_code,json=chainCode" json:"chain_code,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,5,opt,name=private_key,json=privateKey" json:"private_key,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,6,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HDNodeType) Reset()         { *m = HDNodeType{} }
func (m *HDNodeType) String() string { return proto.CompactTextString(m) }
func (*HDNodeType) ProtoMessage()    {}
func (*HDNodeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{0}
}
func (m *HDNodeType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HDNodeType.Unmarshal(m, b)
}
func (m *HDNodeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HDNodeType.Marshal(b, m, deterministic)
}
func (dst *HDNodeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HDNodeType.Merge(dst, src)
}
func (m *HDNodeType) XXX_Size() int {
	return xxx_messageInfo_HDNodeType.Size(m)
}
func (m *HDNodeType) XXX_DiscardUnknown() {
	xxx_messageInfo_HDNodeType.DiscardUnknown(m)
}

var xxx_messageInfo_HDNodeType proto.InternalMessageInfo

func (m *HDNodeType) GetDepth() uint32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *HDNodeType) GetFingerprint() uint32 {
	if m != nil && m.Fingerprint != nil {
		return *m.Fingerprint
	}
	return 0
}

func (m *HDNodeType) GetChildNum() uint32 {
	if m != nil && m.ChildNum != nil {
		return *m.ChildNum
	}
	return 0
}

func (m *HDNodeType) GetChainCode() []byte {
	if m != nil {
		return m.ChainCode
	}
	return nil
}

func (m *HDNodeType) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *HDNodeType) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type HDNodePathType struct {
	Node                 *HDNodeType `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	AddressN             []uint32    `protobuf:"varint,2,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HDNodePathType) Reset()         { *m = HDNodePathType{} }
func (m *HDNodePathType) String() string { return proto.CompactTextString(m) }
func (*HDNodePathType) ProtoMessage()    {}
func (*HDNodePathType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{1}
}
func (m *HDNodePathType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HDNodePathType.Unmarshal(m, b)
}
func (m *HDNodePathType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HDNodePathType.Marshal(b, m, deterministic)
}
func (dst *HDNodePathType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HDNodePathType.Merge(dst, src)
}
func (m *HDNodePathType) XXX_Size() int {
	return xxx_messageInfo_HDNodePathType.Size(m)
}
func (m *HDNodePathType) XXX_DiscardUnknown() {
	xxx_messageInfo_HDNodePathType.DiscardUnknown(m)
}

var xxx_messageInfo_HDNodePathType proto.InternalMessageInfo

func (m *HDNodePathType) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *HDNodePathType) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

// *
// Structure representing Coin
// @used_in Features
type CoinType struct {
	CoinName        *string `protobuf:"bytes,1,opt,name=coin_name,json=coinName" json:"coin_name,omitempty"`
	CoinShortcut    *string `protobuf:"bytes,2,opt,name=coin_shortcut,json=coinShortcut" json:"coin_shortcut,omitempty"`
	AddressType     *uint32 `protobuf:"varint,3,opt,name=address_type,json=addressType,def=0" json:"address_type,omitempty"`
	MaxfeeKb        *uint64 `protobuf:"varint,4,opt,name=maxfee_kb,json=maxfeeKb" json:"maxfee_kb,omitempty"`
	AddressTypeP2Sh *uint32 `protobuf:"varint,5,opt,name=address_type_p2sh,json=addressTypeP2sh,def=5" json:"address_type_p2sh,omitempty"`
	// optional uint32 address_type_p2wpkh = 6 [default=6]; REMOVED
	// optional uint32 address_type_p2wsh = 7 [default=10]; REMOVED
	SignedMessageHeader *string `protobuf:"bytes,8,opt,name=signed_message_header,json=signedMessageHeader" json:"signed_message_header,omitempty"`
	Bip44AccountPath    *uint32 `protobuf:"varint,9,opt,name=bip44_account_path,json=bip44AccountPath" json:"bip44_account_path,omitempty"`
	Forkid              *uint32 `protobuf:"varint,12,opt,name=forkid" json:"forkid,omitempty"`
	Decimals            *uint32 `protobuf:"varint,13,opt,name=decimals" json:"decimals,omitempty"`
	ContractAddress     []byte  `protobuf:"bytes,14,opt,name=contract_address,json=contractAddress" json:"contract_address,omitempty"`
	// optional bytes gas_limit = 15; REMOVED
	XpubMagic *uint32 `protobuf:"varint,16,opt,name=xpub_magic,json=xpubMagic,def=76067358" json:"xpub_magic,omitempty"`
	// optional uint32 xprv_magic = 17 [default=76066276]; REMOVED
	Segwit         *bool   `protobuf:"varint,18,opt,name=segwit" json:"segwit,omitempty"`
	ForceBip143    *bool   `protobuf:"varint,19,opt,name=force_bip143,json=forceBip143" json:"force_bip143,omitempty"`
	CurveName      *string `protobuf:"bytes,20,opt,name=curve_name,json=curveName" json:"curve_name,omitempty"`
	CashaddrPrefix *string `protobuf:"bytes,21,opt,name=cashaddr_prefix,json=cashaddrPrefix" json:"cashaddr_prefix,omitempty"`
	Bech32Prefix   *string `protobuf:"bytes,22,opt,name=bech32_prefix,json=bech32Prefix" json:"bech32_prefix,omitempty"`
	Decred         *bool   `protobuf:"varint,23,opt,name=decred" json:"decred,omitempty"`
	// optional uint32 version_group_id = 24; REMOVED
	XpubMagicSegwitP2Sh   *uint32  `protobuf:"varint,25,opt,name=xpub_magic_segwit_p2sh,json=xpubMagicSegwitP2sh" json:"xpub_magic_segwit_p2sh,omitempty"`
	XpubMagicSegwitNative *uint32  `protobuf:"varint,26,opt,name=xpub_magic_segwit_native,json=xpubMagicSegwitNative" json:"xpub_magic_segwit_native,omitempty"`
	NanoaddrPrefix        *string  `protobuf:"bytes,27,opt,name=nanoaddr_prefix,json=nanoaddrPrefix" json:"nanoaddr_prefix,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CoinType) Reset()         { *m = CoinType{} }
func (m *CoinType) String() string { return proto.CompactTextString(m) }
func (*CoinType) ProtoMessage()    {}
func (*CoinType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{2}
}
func (m *CoinType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinType.Unmarshal(m, b)
}
func (m *CoinType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinType.Marshal(b, m, deterministic)
}
func (dst *CoinType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinType.Merge(dst, src)
}
func (m *CoinType) XXX_Size() int {
	return xxx_messageInfo_CoinType.Size(m)
}
func (m *CoinType) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinType.DiscardUnknown(m)
}

var xxx_messageInfo_CoinType proto.InternalMessageInfo

const Default_CoinType_AddressType uint32 = 0
const Default_CoinType_AddressTypeP2Sh uint32 = 5
const Default_CoinType_XpubMagic uint32 = 76067358

func (m *CoinType) GetCoinName() string {
	if m != nil && m.CoinName != nil {
		return *m.CoinName
	}
	return ""
}

func (m *CoinType) GetCoinShortcut() string {
	if m != nil && m.CoinShortcut != nil {
		return *m.CoinShortcut
	}
	return ""
}

func (m *CoinType) GetAddressType() uint32 {
	if m != nil && m.AddressType != nil {
		return *m.AddressType
	}
	return Default_CoinType_AddressType
}

func (m *CoinType) GetMaxfeeKb() uint64 {
	if m != nil && m.MaxfeeKb != nil {
		return *m.MaxfeeKb
	}
	return 0
}

func (m *CoinType) GetAddressTypeP2Sh() uint32 {
	if m != nil && m.AddressTypeP2Sh != nil {
		return *m.AddressTypeP2Sh
	}
	return Default_CoinType_AddressTypeP2Sh
}

func (m *CoinType) GetSignedMessageHeader() string {
	if m != nil && m.SignedMessageHeader != nil {
		return *m.SignedMessageHeader
	}
	return ""
}

func (m *CoinType) GetBip44AccountPath() uint32 {
	if m != nil && m.Bip44AccountPath != nil {
		return *m.Bip44AccountPath
	}
	return 0
}

func (m *CoinType) GetForkid() uint32 {
	if m != nil && m.Forkid != nil {
		return *m.Forkid
	}
	return 0
}

func (m *CoinType) GetDecimals() uint32 {
	if m != nil && m.Decimals != nil {
		return *m.Decimals
	}
	return 0
}

func (m *CoinType) GetContractAddress() []byte {
	if m != nil {
		return m.ContractAddress
	}
	return nil
}

func (m *CoinType) GetXpubMagic() uint32 {
	if m != nil && m.XpubMagic != nil {
		return *m.XpubMagic
	}
	return Default_CoinType_XpubMagic
}

func (m *CoinType) GetSegwit() bool {
	if m != nil && m.Segwit != nil {
		return *m.Segwit
	}
	return false
}

func (m *CoinType) GetForceBip143() bool {
	if m != nil && m.ForceBip143 != nil {
		return *m.ForceBip143
	}
	return false
}

func (m *CoinType) GetCurveName() string {
	if m != nil && m.CurveName != nil {
		return *m.CurveName
	}
	return ""
}

func (m *CoinType) GetCashaddrPrefix() string {
	if m != nil && m.CashaddrPrefix != nil {
		return *m.CashaddrPrefix
	}
	return ""
}

func (m *CoinType) GetBech32Prefix() string {
	if m != nil && m.Bech32Prefix != nil {
		return *m.Bech32Prefix
	}
	return ""
}

func (m *CoinType) GetDecred() bool {
	if m != nil && m.Decred != nil {
		return *m.Decred
	}
	return false
}

func (m *CoinType) GetXpubMagicSegwitP2Sh() uint32 {
	if m != nil && m.XpubMagicSegwitP2Sh != nil {
		return *m.XpubMagicSegwitP2Sh
	}
	return 0
}

func (m *CoinType) GetXpubMagicSegwitNative() uint32 {
	if m != nil && m.XpubMagicSegwitNative != nil {
		return *m.XpubMagicSegwitNative
	}
	return 0
}

func (m *CoinType) GetNanoaddrPrefix() string {
	if m != nil && m.NanoaddrPrefix != nil {
		return *m.NanoaddrPrefix
	}
	return ""
}

// *
// Type of redeem script used in input
// @used_in TxInputType
type MultisigRedeemScriptType struct {
	Pubkeys              []*HDNodePathType `protobuf:"bytes,1,rep,name=pubkeys" json:"pubkeys,omitempty"`
	Signatures           [][]byte          `protobuf:"bytes,2,rep,name=signatures" json:"signatures,omitempty"`
	M                    *uint32           `protobuf:"varint,3,opt,name=m" json:"m,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MultisigRedeemScriptType) Reset()         { *m = MultisigRedeemScriptType{} }
func (m *MultisigRedeemScriptType) String() string { return proto.CompactTextString(m) }
func (*MultisigRedeemScriptType) ProtoMessage()    {}
func (*MultisigRedeemScriptType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{3}
}
func (m *MultisigRedeemScriptType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultisigRedeemScriptType.Unmarshal(m, b)
}
func (m *MultisigRedeemScriptType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultisigRedeemScriptType.Marshal(b, m, deterministic)
}
func (dst *MultisigRedeemScriptType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultisigRedeemScriptType.Merge(dst, src)
}
func (m *MultisigRedeemScriptType) XXX_Size() int {
	return xxx_messageInfo_MultisigRedeemScriptType.Size(m)
}
func (m *MultisigRedeemScriptType) XXX_DiscardUnknown() {
	xxx_messageInfo_MultisigRedeemScriptType.DiscardUnknown(m)
}

var xxx_messageInfo_MultisigRedeemScriptType proto.InternalMessageInfo

func (m *MultisigRedeemScriptType) GetPubkeys() []*HDNodePathType {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

func (m *MultisigRedeemScriptType) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *MultisigRedeemScriptType) GetM() uint32 {
	if m != nil && m.M != nil {
		return *m.M
	}
	return 0
}

// *
// Structure representing transaction input
// @used_in TransactionType
type TxInputType struct {
	AddressN             []uint32                  `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	PrevHash             []byte                    `protobuf:"bytes,2,req,name=prev_hash,json=prevHash" json:"prev_hash,omitempty"`
	PrevIndex            *uint32                   `protobuf:"varint,3,req,name=prev_index,json=prevIndex" json:"prev_index,omitempty"`
	ScriptSig            []byte                    `protobuf:"bytes,4,opt,name=script_sig,json=scriptSig" json:"script_sig,omitempty"`
	Sequence             *uint32                   `protobuf:"varint,5,opt,name=sequence,def=4294967295" json:"sequence,omitempty"`
	ScriptType           *InputScriptType          `protobuf:"varint,6,opt,name=script_type,json=scriptType,enum=InputScriptType,def=0" json:"script_type,omitempty"`
	Multisig             *MultisigRedeemScriptType `protobuf:"bytes,7,opt,name=multisig" json:"multisig,omitempty"`
	Amount               *uint64                   `protobuf:"varint,8,opt,name=amount" json:"amount,omitempty"`
	DecredTree           *uint32                   `protobuf:"varint,9,opt,name=decred_tree,json=decredTree" json:"decred_tree,omitempty"`
	DecredScriptVersion  *uint32                   `protobuf:"varint,10,opt,name=decred_script_version,json=decredScriptVersion" json:"decred_script_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TxInputType) Reset()         { *m = TxInputType{} }
func (m *TxInputType) String() string { return proto.CompactTextString(m) }
func (*TxInputType) ProtoMessage()    {}
func (*TxInputType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{4}
}
func (m *TxInputType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInputType.Unmarshal(m, b)
}
func (m *TxInputType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInputType.Marshal(b, m, deterministic)
}
func (dst *TxInputType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInputType.Merge(dst, src)
}
func (m *TxInputType) XXX_Size() int {
	return xxx_messageInfo_TxInputType.Size(m)
}
func (m *TxInputType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInputType.DiscardUnknown(m)
}

var xxx_messageInfo_TxInputType proto.InternalMessageInfo

const Default_TxInputType_Sequence uint32 = 4294967295
const Default_TxInputType_ScriptType InputScriptType = InputScriptType_SPENDADDRESS

func (m *TxInputType) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *TxInputType) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *TxInputType) GetPrevIndex() uint32 {
	if m != nil && m.PrevIndex != nil {
		return *m.PrevIndex
	}
	return 0
}

func (m *TxInputType) GetScriptSig() []byte {
	if m != nil {
		return m.ScriptSig
	}
	return nil
}

func (m *TxInputType) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return Default_TxInputType_Sequence
}

func (m *TxInputType) GetScriptType() InputScriptType {
	if m != nil && m.ScriptType != nil {
		return *m.ScriptType
	}
	return Default_TxInputType_ScriptType
}

func (m *TxInputType) GetMultisig() *MultisigRedeemScriptType {
	if m != nil {
		return m.Multisig
	}
	return nil
}

func (m *TxInputType) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *TxInputType) GetDecredTree() uint32 {
	if m != nil && m.DecredTree != nil {
		return *m.DecredTree
	}
	return 0
}

func (m *TxInputType) GetDecredScriptVersion() uint32 {
	if m != nil && m.DecredScriptVersion != nil {
		return *m.DecredScriptVersion
	}
	return 0
}

// *
// Structure representing transaction output
// @used_in TransactionType
type TxOutputType struct {
	Address              *string                   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	AddressN             []uint32                  `protobuf:"varint,2,rep,name=address_n,json=addressN" json:"address_n,omitempty"`
	Amount               *uint64                   `protobuf:"varint,3,req,name=amount" json:"amount,omitempty"`
	ScriptType           *OutputScriptType         `protobuf:"varint,4,req,name=script_type,json=scriptType,enum=OutputScriptType" json:"script_type,omitempty"`
	Multisig             *MultisigRedeemScriptType `protobuf:"bytes,5,opt,name=multisig" json:"multisig,omitempty"`
	OpReturnData         []byte                    `protobuf:"bytes,6,opt,name=op_return_data,json=opReturnData" json:"op_return_data,omitempty"`
	AddressType          *OutputAddressType        `protobuf:"varint,7,opt,name=address_type,json=addressType,enum=OutputAddressType" json:"address_type,omitempty"`
	ExchangeType         *ExchangeType             `protobuf:"bytes,8,opt,name=exchange_type,json=exchangeType" json:"exchange_type,omitempty"`
	DecredScriptVersion  *uint32                   `protobuf:"varint,9,opt,name=decred_script_version,json=decredScriptVersion" json:"decred_script_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TxOutputType) Reset()         { *m = TxOutputType{} }
func (m *TxOutputType) String() string { return proto.CompactTextString(m) }
func (*TxOutputType) ProtoMessage()    {}
func (*TxOutputType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{5}
}
func (m *TxOutputType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutputType.Unmarshal(m, b)
}
func (m *TxOutputType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutputType.Marshal(b, m, deterministic)
}
func (dst *TxOutputType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutputType.Merge(dst, src)
}
func (m *TxOutputType) XXX_Size() int {
	return xxx_messageInfo_TxOutputType.Size(m)
}
func (m *TxOutputType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutputType.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutputType proto.InternalMessageInfo

func (m *TxOutputType) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *TxOutputType) GetAddressN() []uint32 {
	if m != nil {
		return m.AddressN
	}
	return nil
}

func (m *TxOutputType) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *TxOutputType) GetScriptType() OutputScriptType {
	if m != nil && m.ScriptType != nil {
		return *m.ScriptType
	}
	return OutputScriptType_PAYTOADDRESS
}

func (m *TxOutputType) GetMultisig() *MultisigRedeemScriptType {
	if m != nil {
		return m.Multisig
	}
	return nil
}

func (m *TxOutputType) GetOpReturnData() []byte {
	if m != nil {
		return m.OpReturnData
	}
	return nil
}

func (m *TxOutputType) GetAddressType() OutputAddressType {
	if m != nil && m.AddressType != nil {
		return *m.AddressType
	}
	return OutputAddressType_SPEND
}

func (m *TxOutputType) GetExchangeType() *ExchangeType {
	if m != nil {
		return m.ExchangeType
	}
	return nil
}

func (m *TxOutputType) GetDecredScriptVersion() uint32 {
	if m != nil && m.DecredScriptVersion != nil {
		return *m.DecredScriptVersion
	}
	return 0
}

// *
// Structure representing compiled transaction output
// @used_in TransactionType
type TxOutputBinType struct {
	Amount               *uint64  `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`
	ScriptPubkey         []byte   `protobuf:"bytes,2,req,name=script_pubkey,json=scriptPubkey" json:"script_pubkey,omitempty"`
	DecredScriptVersion  *uint32  `protobuf:"varint,3,opt,name=decred_script_version,json=decredScriptVersion" json:"decred_script_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxOutputBinType) Reset()         { *m = TxOutputBinType{} }
func (m *TxOutputBinType) String() string { return proto.CompactTextString(m) }
func (*TxOutputBinType) ProtoMessage()    {}
func (*TxOutputBinType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{6}
}
func (m *TxOutputBinType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutputBinType.Unmarshal(m, b)
}
func (m *TxOutputBinType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutputBinType.Marshal(b, m, deterministic)
}
func (dst *TxOutputBinType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutputBinType.Merge(dst, src)
}
func (m *TxOutputBinType) XXX_Size() int {
	return xxx_messageInfo_TxOutputBinType.Size(m)
}
func (m *TxOutputBinType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutputBinType.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutputBinType proto.InternalMessageInfo

func (m *TxOutputBinType) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *TxOutputBinType) GetScriptPubkey() []byte {
	if m != nil {
		return m.ScriptPubkey
	}
	return nil
}

func (m *TxOutputBinType) GetDecredScriptVersion() uint32 {
	if m != nil && m.DecredScriptVersion != nil {
		return *m.DecredScriptVersion
	}
	return 0
}

// *
// Structure representing transaction
type TransactionType struct {
	Version              *uint32            `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Inputs               []*TxInputType     `protobuf:"bytes,2,rep,name=inputs" json:"inputs,omitempty"`
	BinOutputs           []*TxOutputBinType `protobuf:"bytes,3,rep,name=bin_outputs,json=binOutputs" json:"bin_outputs,omitempty"`
	Outputs              []*TxOutputType    `protobuf:"bytes,5,rep,name=outputs" json:"outputs,omitempty"`
	LockTime             *uint32            `protobuf:"varint,4,opt,name=lock_time,json=lockTime" json:"lock_time,omitempty"`
	InputsCnt            *uint32            `protobuf:"varint,6,opt,name=inputs_cnt,json=inputsCnt" json:"inputs_cnt,omitempty"`
	OutputsCnt           *uint32            `protobuf:"varint,7,opt,name=outputs_cnt,json=outputsCnt" json:"outputs_cnt,omitempty"`
	ExtraData            []byte             `protobuf:"bytes,8,opt,name=extra_data,json=extraData" json:"extra_data,omitempty"`
	ExtraDataLen         *uint32            `protobuf:"varint,9,opt,name=extra_data_len,json=extraDataLen" json:"extra_data_len,omitempty"`
	Expiry               *uint32            `protobuf:"varint,10,opt,name=expiry" json:"expiry,omitempty"`
	Overwintered         *bool              `protobuf:"varint,11,opt,name=overwintered" json:"overwintered,omitempty"`
	VersionGroupId       *uint32            `protobuf:"varint,12,opt,name=version_group_id,json=versionGroupId" json:"version_group_id,omitempty"`
	BranchId             *uint32            `protobuf:"varint,13,opt,name=branch_id,json=branchId" json:"branch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TransactionType) Reset()         { *m = TransactionType{} }
func (m *TransactionType) String() string { return proto.CompactTextString(m) }
func (*TransactionType) ProtoMessage()    {}
func (*TransactionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{7}
}
func (m *TransactionType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionType.Unmarshal(m, b)
}
func (m *TransactionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionType.Marshal(b, m, deterministic)
}
func (dst *TransactionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionType.Merge(dst, src)
}
func (m *TransactionType) XXX_Size() int {
	return xxx_messageInfo_TransactionType.Size(m)
}
func (m *TransactionType) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionType.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionType proto.InternalMessageInfo

func (m *TransactionType) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *TransactionType) GetInputs() []*TxInputType {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TransactionType) GetBinOutputs() []*TxOutputBinType {
	if m != nil {
		return m.BinOutputs
	}
	return nil
}

func (m *TransactionType) GetOutputs() []*TxOutputType {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *TransactionType) GetLockTime() uint32 {
	if m != nil && m.LockTime != nil {
		return *m.LockTime
	}
	return 0
}

func (m *TransactionType) GetInputsCnt() uint32 {
	if m != nil && m.InputsCnt != nil {
		return *m.InputsCnt
	}
	return 0
}

func (m *TransactionType) GetOutputsCnt() uint32 {
	if m != nil && m.OutputsCnt != nil {
		return *m.OutputsCnt
	}
	return 0
}

func (m *TransactionType) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

func (m *TransactionType) GetExtraDataLen() uint32 {
	if m != nil && m.ExtraDataLen != nil {
		return *m.ExtraDataLen
	}
	return 0
}

func (m *TransactionType) GetExpiry() uint32 {
	if m != nil && m.Expiry != nil {
		return *m.Expiry
	}
	return 0
}

func (m *TransactionType) GetOverwintered() bool {
	if m != nil && m.Overwintered != nil {
		return *m.Overwintered
	}
	return false
}

func (m *TransactionType) GetVersionGroupId() uint32 {
	if m != nil && m.VersionGroupId != nil {
		return *m.VersionGroupId
	}
	return 0
}

func (m *TransactionType) GetBranchId() uint32 {
	if m != nil && m.BranchId != nil {
		return *m.BranchId
	}
	return 0
}

// *
// Structure representing raw transaction
// @used_in RawTxAck
type RawTransactionType struct {
	Payload              []byte   `protobuf:"bytes,1,req,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawTransactionType) Reset()         { *m = RawTransactionType{} }
func (m *RawTransactionType) String() string { return proto.CompactTextString(m) }
func (*RawTransactionType) ProtoMessage()    {}
func (*RawTransactionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{8}
}
func (m *RawTransactionType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionType.Unmarshal(m, b)
}
func (m *RawTransactionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionType.Marshal(b, m, deterministic)
}
func (dst *RawTransactionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionType.Merge(dst, src)
}
func (m *RawTransactionType) XXX_Size() int {
	return xxx_messageInfo_RawTransactionType.Size(m)
}
func (m *RawTransactionType) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionType.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionType proto.InternalMessageInfo

func (m *RawTransactionType) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// *
// Structure representing request details
// @used_in TxRequest
type TxRequestDetailsType struct {
	RequestIndex         *uint32  `protobuf:"varint,1,opt,name=request_index,json=requestIndex" json:"request_index,omitempty"`
	TxHash               []byte   `protobuf:"bytes,2,opt,name=tx_hash,json=txHash" json:"tx_hash,omitempty"`
	ExtraDataLen         *uint32  `protobuf:"varint,3,opt,name=extra_data_len,json=extraDataLen" json:"extra_data_len,omitempty"`
	ExtraDataOffset      *uint32  `protobuf:"varint,4,opt,name=extra_data_offset,json=extraDataOffset" json:"extra_data_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRequestDetailsType) Reset()         { *m = TxRequestDetailsType{} }
func (m *TxRequestDetailsType) String() string { return proto.CompactTextString(m) }
func (*TxRequestDetailsType) ProtoMessage()    {}
func (*TxRequestDetailsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{9}
}
func (m *TxRequestDetailsType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequestDetailsType.Unmarshal(m, b)
}
func (m *TxRequestDetailsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequestDetailsType.Marshal(b, m, deterministic)
}
func (dst *TxRequestDetailsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequestDetailsType.Merge(dst, src)
}
func (m *TxRequestDetailsType) XXX_Size() int {
	return xxx_messageInfo_TxRequestDetailsType.Size(m)
}
func (m *TxRequestDetailsType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequestDetailsType.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequestDetailsType proto.InternalMessageInfo

func (m *TxRequestDetailsType) GetRequestIndex() uint32 {
	if m != nil && m.RequestIndex != nil {
		return *m.RequestIndex
	}
	return 0
}

func (m *TxRequestDetailsType) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *TxRequestDetailsType) GetExtraDataLen() uint32 {
	if m != nil && m.ExtraDataLen != nil {
		return *m.ExtraDataLen
	}
	return 0
}

func (m *TxRequestDetailsType) GetExtraDataOffset() uint32 {
	if m != nil && m.ExtraDataOffset != nil {
		return *m.ExtraDataOffset
	}
	return 0
}

// *
// Structure representing serialized data
// @used_in TxRequest
type TxRequestSerializedType struct {
	SignatureIndex       *uint32  `protobuf:"varint,1,opt,name=signature_index,json=signatureIndex" json:"signature_index,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	SerializedTx         []byte   `protobuf:"bytes,3,opt,name=serialized_tx,json=serializedTx" json:"serialized_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRequestSerializedType) Reset()         { *m = TxRequestSerializedType{} }
func (m *TxRequestSerializedType) String() string { return proto.CompactTextString(m) }
func (*TxRequestSerializedType) ProtoMessage()    {}
func (*TxRequestSerializedType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{10}
}
func (m *TxRequestSerializedType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequestSerializedType.Unmarshal(m, b)
}
func (m *TxRequestSerializedType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequestSerializedType.Marshal(b, m, deterministic)
}
func (dst *TxRequestSerializedType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequestSerializedType.Merge(dst, src)
}
func (m *TxRequestSerializedType) XXX_Size() int {
	return xxx_messageInfo_TxRequestSerializedType.Size(m)
}
func (m *TxRequestSerializedType) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequestSerializedType.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequestSerializedType proto.InternalMessageInfo

func (m *TxRequestSerializedType) GetSignatureIndex() uint32 {
	if m != nil && m.SignatureIndex != nil {
		return *m.SignatureIndex
	}
	return 0
}

func (m *TxRequestSerializedType) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *TxRequestSerializedType) GetSerializedTx() []byte {
	if m != nil {
		return m.SerializedTx
	}
	return nil
}

// *
// Structure representing identity data
// @used_in IdentityType
type IdentityType struct {
	Proto                *string  `protobuf:"bytes,1,opt,name=proto" json:"proto,omitempty"`
	User                 *string  `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Host                 *string  `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Port                 *string  `protobuf:"bytes,4,opt,name=port" json:"port,omitempty"`
	Path                 *string  `protobuf:"bytes,5,opt,name=path" json:"path,omitempty"`
	Index                *uint32  `protobuf:"varint,6,opt,name=index,def=0" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityType) Reset()         { *m = IdentityType{} }
func (m *IdentityType) String() string { return proto.CompactTextString(m) }
func (*IdentityType) ProtoMessage()    {}
func (*IdentityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{11}
}
func (m *IdentityType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityType.Unmarshal(m, b)
}
func (m *IdentityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityType.Marshal(b, m, deterministic)
}
func (dst *IdentityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityType.Merge(dst, src)
}
func (m *IdentityType) XXX_Size() int {
	return xxx_messageInfo_IdentityType.Size(m)
}
func (m *IdentityType) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityType.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityType proto.InternalMessageInfo

const Default_IdentityType_Index uint32 = 0

func (m *IdentityType) GetProto() string {
	if m != nil && m.Proto != nil {
		return *m.Proto
	}
	return ""
}

func (m *IdentityType) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *IdentityType) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *IdentityType) GetPort() string {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return ""
}

func (m *IdentityType) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *IdentityType) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return Default_IdentityType_Index
}

// *
// Structure representing policy data
// @used_in ApplyPolicy
type PolicyType struct {
	PolicyName           *string  `protobuf:"bytes,1,opt,name=policy_name,json=policyName" json:"policy_name,omitempty"`
	Enabled              *bool    `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolicyType) Reset()         { *m = PolicyType{} }
func (m *PolicyType) String() string { return proto.CompactTextString(m) }
func (*PolicyType) ProtoMessage()    {}
func (*PolicyType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{12}
}
func (m *PolicyType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyType.Unmarshal(m, b)
}
func (m *PolicyType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyType.Marshal(b, m, deterministic)
}
func (dst *PolicyType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyType.Merge(dst, src)
}
func (m *PolicyType) XXX_Size() int {
	return xxx_messageInfo_PolicyType.Size(m)
}
func (m *PolicyType) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyType.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyType proto.InternalMessageInfo

func (m *PolicyType) GetPolicyName() string {
	if m != nil && m.PolicyName != nil {
		return *m.PolicyName
	}
	return ""
}

func (m *PolicyType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

// *
// Structure representing exchange data
// @used_in TxOutputType
type ExchangeType struct {
	SignedExchangeResponse *SignedExchangeResponse `protobuf:"bytes,1,opt,name=signed_exchange_response,json=signedExchangeResponse" json:"signed_exchange_response,omitempty"`
	WithdrawalCoinName     *string                 `protobuf:"bytes,2,opt,name=withdrawal_coin_name,json=withdrawalCoinName,def=Bitcoin" json:"withdrawal_coin_name,omitempty"`
	WithdrawalAddressN     []uint32                `protobuf:"varint,3,rep,name=withdrawal_address_n,json=withdrawalAddressN" json:"withdrawal_address_n,omitempty"`
	ReturnAddressN         []uint32                `protobuf:"varint,4,rep,name=return_address_n,json=returnAddressN" json:"return_address_n,omitempty"`
	// same as the coin_name of the transaction
	WithdrawalScriptType *InputScriptType `protobuf:"varint,5,opt,name=withdrawal_script_type,json=withdrawalScriptType,enum=InputScriptType,def=0" json:"withdrawal_script_type,omitempty"`
	ReturnScriptType     *InputScriptType `protobuf:"varint,6,opt,name=return_script_type,json=returnScriptType,enum=InputScriptType,def=0" json:"return_script_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ExchangeType) Reset()         { *m = ExchangeType{} }
func (m *ExchangeType) String() string { return proto.CompactTextString(m) }
func (*ExchangeType) ProtoMessage()    {}
func (*ExchangeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_fa68714d69ff1991, []int{13}
}
func (m *ExchangeType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeType.Unmarshal(m, b)
}
func (m *ExchangeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeType.Marshal(b, m, deterministic)
}
func (dst *ExchangeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeType.Merge(dst, src)
}
func (m *ExchangeType) XXX_Size() int {
	return xxx_messageInfo_ExchangeType.Size(m)
}
func (m *ExchangeType) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeType.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeType proto.InternalMessageInfo

const Default_ExchangeType_WithdrawalCoinName string = "Bitcoin"
const Default_ExchangeType_WithdrawalScriptType InputScriptType = InputScriptType_SPENDADDRESS
const Default_ExchangeType_ReturnScriptType InputScriptType = InputScriptType_SPENDADDRESS

func (m *ExchangeType) GetSignedExchangeResponse() *SignedExchangeResponse {
	if m != nil {
		return m.SignedExchangeResponse
	}
	return nil
}

func (m *ExchangeType) GetWithdrawalCoinName() string {
	if m != nil && m.WithdrawalCoinName != nil {
		return *m.WithdrawalCoinName
	}
	return Default_ExchangeType_WithdrawalCoinName
}

func (m *ExchangeType) GetWithdrawalAddressN() []uint32 {
	if m != nil {
		return m.WithdrawalAddressN
	}
	return nil
}

func (m *ExchangeType) GetReturnAddressN() []uint32 {
	if m != nil {
		return m.ReturnAddressN
	}
	return nil
}

func (m *ExchangeType) GetWithdrawalScriptType() InputScriptType {
	if m != nil && m.WithdrawalScriptType != nil {
		return *m.WithdrawalScriptType
	}
	return Default_ExchangeType_WithdrawalScriptType
}

func (m *ExchangeType) GetReturnScriptType() InputScriptType {
	if m != nil && m.ReturnScriptType != nil {
		return *m.ReturnScriptType
	}
	return Default_ExchangeType_ReturnScriptType
}

var E_WireIn = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50002,
	Name:          "wire_in",
	Tag:           "varint,50002,opt,name=wire_in,json=wireIn",
	Filename:      "types.proto",
}

var E_WireOut = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50003,
	Name:          "wire_out",
	Tag:           "varint,50003,opt,name=wire_out,json=wireOut",
	Filename:      "types.proto",
}

var E_WireDebugIn = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50004,
	Name:          "wire_debug_in",
	Tag:           "varint,50004,opt,name=wire_debug_in,json=wireDebugIn",
	Filename:      "types.proto",
}

var E_WireDebugOut = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50005,
	Name:          "wire_debug_out",
	Tag:           "varint,50005,opt,name=wire_debug_out,json=wireDebugOut",
	Filename:      "types.proto",
}

func init() {
	proto.RegisterType((*HDNodeType)(nil), "HDNodeType")
	proto.RegisterType((*HDNodePathType)(nil), "HDNodePathType")
	proto.RegisterType((*CoinType)(nil), "CoinType")
	proto.RegisterType((*MultisigRedeemScriptType)(nil), "MultisigRedeemScriptType")
	proto.RegisterType((*TxInputType)(nil), "TxInputType")
	proto.RegisterType((*TxOutputType)(nil), "TxOutputType")
	proto.RegisterType((*TxOutputBinType)(nil), "TxOutputBinType")
	proto.RegisterType((*TransactionType)(nil), "TransactionType")
	proto.RegisterType((*RawTransactionType)(nil), "RawTransactionType")
	proto.RegisterType((*TxRequestDetailsType)(nil), "TxRequestDetailsType")
	proto.RegisterType((*TxRequestSerializedType)(nil), "TxRequestSerializedType")
	proto.RegisterType((*IdentityType)(nil), "IdentityType")
	proto.RegisterType((*PolicyType)(nil), "PolicyType")
	proto.RegisterType((*ExchangeType)(nil), "ExchangeType")
	proto.RegisterEnum("FailureType", FailureType_name, FailureType_value)
	proto.RegisterEnum("OutputScriptType", OutputScriptType_name, OutputScriptType_value)
	proto.RegisterEnum("InputScriptType", InputScriptType_name, InputScriptType_value)
	proto.RegisterEnum("RequestType", RequestType_name, RequestType_value)
	proto.RegisterEnum("OutputAddressType", OutputAddressType_name, OutputAddressType_value)
	proto.RegisterEnum("ButtonRequestType", ButtonRequestType_name, ButtonRequestType_value)
	proto.RegisterEnum("PinMatrixRequestType", PinMatrixRequestType_name, PinMatrixRequestType_value)
	proto.RegisterExtension(E_WireIn)
	proto.RegisterExtension(E_WireOut)
	proto.RegisterExtension(E_WireDebugIn)
	proto.RegisterExtension(E_WireDebugOut)
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_types_fa68714d69ff1991) }

var fileDescriptor_types_fa68714d69ff1991 = []byte{
	// 2604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xcd, 0x72, 0xdb, 0xc8,
	0xf1, 0x5f, 0x8a, 0xfa, 0x20, 0x9b, 0x1f, 0x1a, 0x8f, 0x65, 0x09, 0xfe, 0xa6, 0x69, 0xd7, 0x5a,
	0xab, 0xff, 0x3f, 0xdc, 0x5d, 0xda, 0x5e, 0xc7, 0xaa, 0x54, 0x52, 0x94, 0x44, 0x59, 0x2c, 0x5b,
	0x14, 0x03, 0x42, 0xbb, 0xca, 0x09, 0x05, 0x02, 0x23, 0x72, 0x4a, 0x24, 0x80, 0x0c, 0x06, 0x12,
	0x99, 0x4b, 0xaa, 0x52, 0x95, 0xe4, 0xb4, 0x97, 0x9c, 0x73, 0xce, 0x23, 0xe4, 0x9c, 0x67, 0xd8,
	0x24, 0xaf, 0x90, 0xd7, 0x48, 0x6a, 0x3e, 0x40, 0x82, 0xa2, 0xb4, 0x71, 0x6e, 0x9c, 0xdf, 0xaf,
	0xbb, 0xa7, 0xa7, 0xa7, 0xbb, 0xa7, 0x09, 0x28, 0xf0, 0x49, 0x48, 0xa2, 0x5a, 0xc8, 0x02, 0x1e,
	0x3c, 0xa8, 0xf4, 0x83, 0xa0, 0x3f, 0x24, 0x5f, 0xca, 0x55, 0x2f, 0x3e, 0xff, 0xd2, 0x23, 0x91,
	0xcb, 0x68, 0xc8, 0x03, 0xa6, 0x25, 0xca, 0x64, 0xec, 0x0e, 0x1c, 0xbf, 0x4f, 0xd4, 0xba, 0xfa,
	0xb7, 0x0c, 0xc0, 0xd1, 0x41, 0x3b, 0xf0, 0x88, 0x35, 0x09, 0x09, 0xde, 0x80, 0x15, 0x8f, 0x84,
	0x7c, 0x60, 0x64, 0x2a, 0x4b, 0xdb, 0x25, 0x53, 0x2d, 0x70, 0x05, 0x0a, 0xe7, 0xd4, 0xef, 0x13,
	0x16, 0x32, 0xea, 0x73, 0x63, 0x49, 0x72, 0x69, 0x08, 0x3f, 0x84, 0xbc, 0x3b, 0xa0, 0x43, 0xcf,
	0xf6, 0xe3, 0x91, 0x91, 0x95, 0x7c, 0x4e, 0x02, 0xed, 0x78, 0x84, 0x1f, 0x03, 0xb8, 0x03, 0x87,
	0xfa, 0xb6, 0x1b, 0x78, 0xc4, 0x58, 0xae, 0x2c, 0x6d, 0x17, 0xcd, 0xbc, 0x44, 0xf6, 0x03, 0x8f,
	0xe0, 0xa7, 0x50, 0x08, 0x19, 0xbd, 0x74, 0x38, 0xb1, 0x2f, 0xc8, 0xc4, 0x58, 0xa9, 0x64, 0xb6,
	0x8b, 0x26, 0x68, 0xe8, 0x03, 0x99, 0x08, 0xfd, 0x30, 0xee, 0x0d, 0xa9, 0x2b, 0xf9, 0x55, 0xc9,
	0xe7, 0x15, 0xf2, 0x81, 0x4c, 0xaa, 0x6d, 0x28, 0xab, 0x13, 0x74, 0x1c, 0x3e, 0x90, 0xa7, 0x78,
	0x0a, 0xcb, 0xbe, 0xd8, 0x4a, 0x1c, 0xa2, 0x50, 0x2f, 0xd4, 0x66, 0x07, 0x34, 0x25, 0x21, 0xdc,
	0x75, 0x3c, 0x8f, 0x91, 0x28, 0xb2, 0x7d, 0x63, 0xa9, 0x92, 0x15, 0xee, 0x6a, 0xa0, 0x5d, 0xfd,
	0xf7, 0x0a, 0xe4, 0xf6, 0x03, 0xea, 0x4b, 0x53, 0xe2, 0x60, 0x01, 0xf5, 0x6d, 0xdf, 0x19, 0x09,
	0x7b, 0x99, 0xed, 0xbc, 0x99, 0x13, 0x40, 0xdb, 0x19, 0x11, 0xfc, 0x1c, 0x4a, 0x92, 0x8c, 0x06,
	0x01, 0xe3, 0x6e, 0x2c, 0x22, 0x23, 0x04, 0x8a, 0x02, 0xec, 0x6a, 0x0c, 0xbf, 0x80, 0x62, 0xb2,
	0x97, 0xb8, 0x2a, 0x23, 0x5b, 0xc9, 0x6c, 0x97, 0x76, 0x33, 0x5f, 0x99, 0x05, 0x0d, 0x27, 0xfb,
	0x8c, 0x9c, 0xf1, 0x39, 0x21, 0xf6, 0x45, 0xcf, 0x58, 0xae, 0x64, 0xb6, 0x97, 0xcd, 0x9c, 0x02,
	0x3e, 0xf4, 0xf0, 0x4f, 0xe0, 0x4e, 0xda, 0x84, 0x1d, 0xd6, 0xa3, 0x81, 0x8c, 0x53, 0x69, 0x37,
	0xf3, 0xc6, 0x5c, 0x4f, 0xd9, 0xe9, 0xd4, 0xa3, 0x01, 0xae, 0xc3, 0xbd, 0x88, 0xf6, 0x7d, 0xe2,
	0xd9, 0x23, 0x12, 0x45, 0x4e, 0x9f, 0xd8, 0x03, 0xe2, 0x78, 0x84, 0x19, 0x39, 0xe9, 0xde, 0x5d,
	0x45, 0x1e, 0x2b, 0xee, 0x48, 0x52, 0xf8, 0xff, 0x01, 0xf7, 0x68, 0xf8, 0xfa, 0xb5, 0xed, 0xb8,
	0x6e, 0x10, 0xfb, 0xdc, 0x0e, 0x1d, 0x3e, 0x30, 0xf2, 0x62, 0x0f, 0x13, 0x49, 0xa6, 0xa1, 0x08,
	0x11, 0x64, 0xbc, 0x09, 0xab, 0xe7, 0x01, 0xbb, 0xa0, 0x9e, 0x51, 0x94, 0x12, 0x7a, 0x85, 0x1f,
	0x40, 0xce, 0x23, 0x2e, 0x1d, 0x39, 0xc3, 0xc8, 0x28, 0x49, 0x66, 0xba, 0xc6, 0x5f, 0x00, 0x72,
	0x03, 0x9f, 0x33, 0xc7, 0xe5, 0xb6, 0xf6, 0xd8, 0x28, 0xcb, 0xbb, 0x5c, 0x4f, 0xf0, 0x86, 0x82,
	0xf1, 0x4b, 0x80, 0x71, 0x18, 0xf7, 0xec, 0x91, 0xd3, 0xa7, 0xae, 0x81, 0xe4, 0x41, 0x73, 0x6f,
	0xbf, 0xf9, 0xea, 0x9b, 0xb7, 0xaf, 0xde, 0xfc, 0xd4, 0xcc, 0x0b, 0xee, 0x58, 0x50, 0xc2, 0x8f,
	0x88, 0xf4, 0xaf, 0x28, 0x37, 0x70, 0x25, 0xb3, 0x9d, 0x33, 0xf5, 0x0a, 0x3f, 0x83, 0xe2, 0x79,
	0xc0, 0x5c, 0x62, 0xf7, 0x68, 0xf8, 0xf5, 0xeb, 0x57, 0xc6, 0x5d, 0xc9, 0x16, 0x24, 0xb6, 0x27,
	0x21, 0x99, 0x94, 0x31, 0xbb, 0x24, 0xea, 0x66, 0x37, 0x64, 0x64, 0xf2, 0x12, 0x91, 0x57, 0xfb,
	0x12, 0xd6, 0x5d, 0x27, 0x1a, 0x08, 0x47, 0xed, 0x90, 0x91, 0x73, 0x3a, 0x36, 0xee, 0x49, 0x99,
	0x72, 0x02, 0x77, 0x24, 0x2a, 0x72, 0xa0, 0x47, 0xdc, 0xc1, 0xab, 0x7a, 0x22, 0xb6, 0xa9, 0x72,
	0x40, 0x81, 0x5a, 0x68, 0x13, 0x56, 0x3d, 0xe2, 0x32, 0xe2, 0x19, 0x5b, 0xca, 0x4f, 0xb5, 0xc2,
	0xaf, 0x60, 0x73, 0x76, 0x50, 0x5b, 0x39, 0xaf, 0x6e, 0xf7, 0xbe, 0x8c, 0xde, 0xdd, 0xe9, 0x51,
	0xbb, 0x92, 0x93, 0xd7, 0xfb, 0x16, 0x8c, 0x45, 0x25, 0xdf, 0xe1, 0xf4, 0x92, 0x18, 0x0f, 0xa4,
	0xda, 0xbd, 0x6b, 0x6a, 0x6d, 0x49, 0x8a, 0x33, 0xf9, 0x8e, 0x1f, 0xa4, 0xcf, 0xf4, 0x50, 0x9d,
	0x29, 0x81, 0x95, 0xbb, 0xd5, 0x08, 0x8c, 0xe3, 0x78, 0xc8, 0x69, 0x44, 0xfb, 0x26, 0xf1, 0x08,
	0x19, 0x75, 0x65, 0x13, 0x91, 0x89, 0xfa, 0x05, 0xac, 0x85, 0x71, 0xef, 0x82, 0x4c, 0x22, 0x23,
	0x53, 0xc9, 0x6e, 0x17, 0xea, 0xeb, 0xb5, 0xf9, 0xea, 0x33, 0x13, 0x1e, 0x3f, 0x01, 0x10, 0xa9,
	0xe6, 0xf0, 0x98, 0x91, 0x48, 0x96, 0x59, 0xd1, 0x4c, 0x21, 0xb8, 0x08, 0x99, 0x91, 0x2a, 0x07,
	0x33, 0x33, 0xaa, 0xfe, 0x29, 0x0b, 0x05, 0x6b, 0xdc, 0xf2, 0xc3, 0x98, 0x27, 0x15, 0x31, 0xab,
	0xd1, 0xcc, 0x7c, 0x8d, 0x0a, 0x32, 0x64, 0xe4, 0xd2, 0x1e, 0x38, 0xd1, 0x40, 0xf6, 0xa3, 0xa2,
	0x99, 0x13, 0xc0, 0x91, 0x13, 0x0d, 0x64, 0xbf, 0x10, 0x24, 0xf5, 0x3d, 0x32, 0xd6, 0xdd, 0x48,
	0x8a, 0xb7, 0x04, 0x20, 0x68, 0xd5, 0x14, 0xed, 0x88, 0xf6, 0x65, 0xad, 0x15, 0xcd, 0xbc, 0x42,
	0xba, 0xb4, 0x8f, 0x3f, 0x87, 0x5c, 0x44, 0x7e, 0x1d, 0x13, 0xdf, 0x25, 0xba, 0xc6, 0xe0, 0x75,
	0xfd, 0xdd, 0xeb, 0x77, 0xdf, 0xbc, 0xad, 0xbf, 0x7b, 0x63, 0x4e, 0x39, 0xfc, 0x0b, 0x28, 0x68,
	0x33, 0xb2, 0xac, 0x45, 0x5b, 0x2a, 0xd7, 0x51, 0x4d, 0x1e, 0x60, 0x16, 0xaf, 0xdd, 0x62, 0xb7,
	0xd3, 0x6c, 0x1f, 0x34, 0x0e, 0x0e, 0xcc, 0x66, 0xb7, 0x6b, 0xea, 0x9d, 0xe5, 0x01, 0xdf, 0x40,
	0x6e, 0xa4, 0xa3, 0x6c, 0xac, 0x55, 0x32, 0xdb, 0x85, 0xfa, 0xfd, 0xda, 0x6d, 0x61, 0x37, 0xa7,
	0xa2, 0x22, 0x97, 0x9c, 0x91, 0xa8, 0x44, 0x59, 0xce, 0xcb, 0xa6, 0x5e, 0x89, 0x36, 0xaa, 0xb2,
	0xca, 0xe6, 0x8c, 0x10, 0x5d, 0xba, 0xa0, 0x20, 0x8b, 0x11, 0x22, 0xda, 0x82, 0x16, 0xd0, 0x7e,
	0x5f, 0x12, 0x16, 0xd1, 0xc0, 0x37, 0x40, 0xe5, 0x9a, 0x22, 0xd5, 0x9e, 0xdf, 0x2a, 0xaa, 0xfa,
	0x7d, 0x16, 0x8a, 0xd6, 0xf8, 0x24, 0xe6, 0xc9, 0xad, 0x18, 0xb0, 0x96, 0x14, 0xaf, 0xea, 0x86,
	0xc9, 0xf2, 0x47, 0x7b, 0x6a, 0xca, 0x69, 0x71, 0x1d, 0x33, 0xa7, 0xeb, 0xf3, 0x41, 0x14, 0x6f,
	0x43, 0xb9, 0x7e, 0xa7, 0xa6, 0x36, 0x4c, 0x1d, 0xff, 0xb6, 0xb8, 0xad, 0x7c, 0x7a, 0xdc, 0x5e,
	0x40, 0x39, 0x08, 0x6d, 0x46, 0x78, 0xcc, 0x7c, 0xdb, 0x73, 0xb8, 0xa3, 0x5f, 0x92, 0x62, 0x10,
	0x9a, 0x12, 0x3c, 0x70, 0xb8, 0x83, 0xdf, 0x5c, 0xeb, 0xd6, 0x6b, 0xf2, 0x5a, 0xb1, 0xf6, 0xa8,
	0x31, 0xeb, 0xb4, 0xf3, 0xed, 0xbb, 0x0e, 0xa5, 0xe4, 0x61, 0x55, 0x7a, 0x39, 0xe9, 0x58, 0xa9,
	0xd6, 0xd4, 0xa8, 0x54, 0x29, 0x92, 0xd4, 0xea, 0xf6, 0xfb, 0xc8, 0xdf, 0x7e, 0x1f, 0xbf, 0xcb,
	0xc0, 0x7a, 0x72, 0x1f, 0x7b, 0xfa, 0x89, 0x9a, 0xc5, 0x36, 0x33, 0x17, 0xdb, 0xe7, 0x50, 0xd2,
	0x86, 0x55, 0x41, 0xea, 0x3a, 0x29, 0x2a, 0xb0, 0x23, 0xb1, 0xdb, 0x9d, 0xc8, 0xde, 0xee, 0xc4,
	0x0f, 0x59, 0x58, 0xb7, 0x98, 0xe3, 0x47, 0x8e, 0xcb, 0x69, 0xe0, 0x27, 0x79, 0x91, 0x68, 0x66,
	0xa4, 0x66, 0xb2, 0xc4, 0x2f, 0x60, 0x95, 0x8a, 0x9a, 0x50, 0x1d, 0xa0, 0x50, 0x2f, 0xd6, 0x52,
	0x55, 0x6e, 0x6a, 0x0e, 0x7f, 0x0d, 0x85, 0x1e, 0xf5, 0xed, 0x40, 0x9e, 0x2c, 0x32, 0xb2, 0x52,
	0x14, 0xd5, 0xae, 0x9d, 0xd5, 0x84, 0x1e, 0xf5, 0x15, 0x22, 0x5e, 0x89, 0xb5, 0x44, 0x7c, 0x45,
	0x8a, 0x97, 0x6a, 0xe9, 0x54, 0x35, 0x13, 0x56, 0x64, 0xe6, 0x30, 0x70, 0x2f, 0x6c, 0x4e, 0x47,
	0x44, 0xd6, 0x7b, 0xc9, 0xcc, 0x09, 0xc0, 0xa2, 0x23, 0x22, 0xba, 0x81, 0x72, 0xc1, 0x76, 0x7d,
	0x2e, 0x53, 0xa2, 0x64, 0xe6, 0x15, 0xb2, 0xaf, 0xaa, 0x4a, 0x9b, 0x91, 0xfc, 0x9a, 0xaa, 0x2a,
	0x0d, 0x09, 0x81, 0xc7, 0x00, 0x64, 0xcc, 0x99, 0xa3, 0x52, 0x2a, 0xa7, 0xba, 0x89, 0x44, 0x64,
	0x3e, 0xbd, 0x80, 0xf2, 0x8c, 0xb6, 0x87, 0x24, 0xb9, 0xdd, 0xe2, 0x54, 0xe4, 0x23, 0xf1, 0xc5,
	0x15, 0x92, 0x71, 0x48, 0xd9, 0x44, 0xd7, 0xa2, 0x5e, 0xe1, 0x2a, 0x14, 0x83, 0x4b, 0xc2, 0xae,
	0xa8, 0xcf, 0x89, 0x78, 0x3d, 0x0a, 0xf2, 0xf5, 0x98, 0xc3, 0xf0, 0x36, 0x20, 0x1d, 0x6a, 0xbb,
	0xcf, 0x82, 0x38, 0xb4, 0xa7, 0xaf, 0x72, 0x59, 0xe3, 0xef, 0x05, 0xdc, 0xf2, 0x44, 0x1c, 0x7a,
	0xcc, 0xf1, 0xdd, 0x81, 0x10, 0xd1, 0xcf, 0xb3, 0x02, 0x5a, 0x5e, 0xb5, 0x06, 0xd8, 0x74, 0xae,
	0x6e, 0xb8, 0xd6, 0xd0, 0x99, 0x0c, 0x03, 0xc7, 0x93, 0xc9, 0x55, 0x34, 0x93, 0x65, 0xf5, 0x2f,
	0x19, 0xd8, 0xb0, 0xc6, 0xa6, 0xe8, 0x86, 0x11, 0x3f, 0x20, 0xdc, 0xa1, 0x43, 0x55, 0x0a, 0xcf,
	0xa1, 0xc4, 0x14, 0xaa, 0x1b, 0xb0, 0xca, 0x87, 0xa2, 0x06, 0x55, 0x0f, 0xde, 0x82, 0x35, 0x3e,
	0x4e, 0xba, 0xb7, 0x08, 0xd9, 0x2a, 0x1f, 0xcb, 0xde, 0xbd, 0x18, 0xaf, 0xec, 0x0d, 0xf1, 0xda,
	0x81, 0x3b, 0x29, 0xa9, 0xe0, 0xfc, 0x3c, 0x22, 0x5c, 0xdf, 0xec, 0xfa, 0x54, 0xf0, 0x44, 0xc2,
	0xd5, 0xdf, 0x67, 0x60, 0x6b, 0xea, 0x68, 0x97, 0x30, 0xea, 0x0c, 0xe9, 0x6f, 0x88, 0x27, 0x7d,
	0x7d, 0x09, 0xeb, 0xd3, 0xf7, 0x68, 0xce, 0xdb, 0xf2, 0x14, 0x56, 0xfe, 0x3e, 0x82, 0xfc, 0x14,
	0xd1, 0x1e, 0xcf, 0x00, 0x59, 0x69, 0x53, 0xc3, 0x36, 0x1f, 0x4b, 0x9f, 0x45, 0xa5, 0xcd, 0x76,
	0x1b, 0x57, 0xbf, 0xcf, 0x40, 0xb1, 0xe5, 0x11, 0x9f, 0x53, 0x3e, 0x49, 0x66, 0x6d, 0x39, 0x83,
	0xeb, 0x46, 0xaa, 0x16, 0x18, 0xc3, 0x72, 0x1c, 0x11, 0xa6, 0x47, 0x49, 0xf9, 0x5b, 0x60, 0x83,
	0x20, 0xe2, 0xd2, 0x6c, 0xde, 0x94, 0xbf, 0x05, 0x16, 0x06, 0x4c, 0x9d, 0x3a, 0x6f, 0xca, 0xdf,
	0x12, 0x13, 0x63, 0xdb, 0x8a, 0xc6, 0xc4, 0xa8, 0xb6, 0x05, 0x2b, 0xea, 0x60, 0xab, 0xc9, 0xdc,
	0xa9, 0xd6, 0xd5, 0xf7, 0x00, 0x9d, 0x60, 0x48, 0xdd, 0x89, 0x1e, 0x99, 0x0b, 0xa1, 0x5c, 0xa5,
	0x27, 0x5d, 0x50, 0x90, 0x1c, 0x88, 0x0c, 0x58, 0x23, 0xbe, 0xd3, 0x1b, 0x12, 0x4f, 0xba, 0x96,
	0x33, 0x93, 0x65, 0xf5, 0xcf, 0x59, 0x28, 0xa6, 0xdb, 0x1c, 0xfe, 0x25, 0x18, 0x7a, 0xfe, 0x9c,
	0xf6, 0x44, 0x46, 0xa2, 0x30, 0xf0, 0x23, 0x65, 0xb8, 0x50, 0xdf, 0xaa, 0x75, 0xa5, 0x40, 0xa2,
	0x66, 0x6a, 0xda, 0xdc, 0x8c, 0x6e, 0xc4, 0xf1, 0x3b, 0xd8, 0xb8, 0xa2, 0x7c, 0xe0, 0x31, 0xe7,
	0xca, 0x19, 0xda, 0xb3, 0x89, 0x5c, 0x46, 0x69, 0x77, 0x6d, 0x8f, 0x72, 0x81, 0x99, 0x78, 0x26,
	0xb4, 0x9f, 0x0c, 0xe9, 0x5f, 0xcd, 0xa9, 0xce, 0x9e, 0xa8, 0xac, 0x7c, 0xa2, 0x52, 0x1a, 0x8d,
	0xe4, 0xb1, 0xda, 0x06, 0xa4, 0x9f, 0x89, 0x99, 0xf4, 0xb2, 0x94, 0x2e, 0x2b, 0x7c, 0x2a, 0x69,
	0xc1, 0x66, 0xca, 0x76, 0xfa, 0x25, 0x5b, 0xf9, 0xa4, 0x71, 0x20, 0xe5, 0x59, 0x6a, 0xc4, 0xfa,
	0x08, 0x58, 0xef, 0xff, 0xbf, 0x0f, 0x18, 0xda, 0xf3, 0x19, 0xbf, 0xf3, 0xaf, 0x25, 0x28, 0x1c,
	0x3a, 0x74, 0x18, 0x33, 0x75, 0x3b, 0x8f, 0xe1, 0xbe, 0x5e, 0xda, 0xa7, 0x3e, 0x19, 0x87, 0xc4,
	0xe5, 0xd3, 0x3f, 0x03, 0x28, 0x83, 0x1f, 0xc0, 0x66, 0x42, 0xef, 0xc5, 0x9c, 0x07, 0x7e, 0x53,
	0x8b, 0xa0, 0x25, 0xbc, 0x05, 0x77, 0x13, 0xae, 0x3b, 0xf1, 0xb9, 0x33, 0x6e, 0x32, 0x16, 0x30,
	0x94, 0xc5, 0x0f, 0x61, 0x2b, 0x21, 0x1a, 0xb2, 0x79, 0xec, 0x3b, 0xbe, 0x4b, 0x86, 0x43, 0xe2,
	0xa1, 0xe5, 0xb4, 0x56, 0x87, 0xce, 0xcc, 0xad, 0x60, 0x03, 0x36, 0x52, 0xc4, 0x4c, 0x65, 0x15,
	0x6f, 0x02, 0x4e, 0x31, 0x2d, 0xff, 0xd2, 0x19, 0x52, 0x0f, 0xad, 0xe1, 0x47, 0x60, 0x24, 0xb8,
	0x06, 0xbb, 0x49, 0x11, 0xa2, 0x1c, 0xbe, 0x03, 0xa5, 0x84, 0x3d, 0xe1, 0x03, 0xc2, 0x50, 0x3e,
	0x7d, 0x9a, 0x76, 0xc0, 0x9b, 0x7e, 0x10, 0xf7, 0x07, 0x87, 0xb1, 0xef, 0x45, 0x08, 0xae, 0x71,
	0x2d, 0x9f, 0x72, 0x5d, 0xac, 0xa8, 0x70, 0xcd, 0xe7, 0x63, 0x1a, 0x8d, 0x1c, 0xee, 0x0e, 0x50,
	0x11, 0xdf, 0x87, 0x7b, 0x09, 0x71, 0x48, 0xd9, 0xe8, 0xca, 0x61, 0x44, 0x05, 0xc1, 0xdd, 0xf9,
	0x63, 0x06, 0xd0, 0xf5, 0xc1, 0x05, 0x23, 0x28, 0x76, 0x1a, 0xbf, 0xb2, 0x4e, 0xf4, 0xfd, 0xa0,
	0xcf, 0xf0, 0x5d, 0x58, 0x97, 0x48, 0x77, 0xdf, 0x6c, 0x75, 0xac, 0xa3, 0x46, 0xf7, 0x08, 0x65,
	0x84, 0xeb, 0x12, 0x3c, 0x3e, 0xfd, 0x68, 0xb5, 0xba, 0xad, 0xf7, 0x68, 0x69, 0x0a, 0x9d, 0x74,
	0xcc, 0xa6, 0x75, 0x6a, 0xb6, 0x51, 0x76, 0x6a, 0xec, 0xbb, 0x96, 0xd5, 0x16, 0xc6, 0x96, 0xf1,
	0x06, 0x20, 0x89, 0x74, 0xea, 0xdd, 0xa3, 0x04, 0x5d, 0xd9, 0x19, 0xc2, 0xfa, 0xb5, 0x2c, 0x11,
	0xaa, 0xe9, 0x3c, 0x41, 0x9f, 0x09, 0xfb, 0x12, 0x99, 0x6e, 0x99, 0xc1, 0x45, 0xc8, 0x35, 0xcf,
	0xac, 0xa6, 0xd9, 0x6e, 0x7c, 0x44, 0x4b, 0x53, 0x95, 0xc4, 0x6e, 0x56, 0xec, 0x26, 0x91, 0xf4,
	0x6e, 0xcb, 0x3b, 0xa7, 0x50, 0xd0, 0xdd, 0x55, 0xee, 0x54, 0x80, 0x35, 0xeb, 0xac, 0xd5, 0xee,
	0x9c, 0x5a, 0xe8, 0x33, 0x61, 0xd1, 0x3a, 0x3b, 0x39, 0xb5, 0xc4, 0x2a, 0x83, 0x01, 0x56, 0xad,
	0xb3, 0xe3, 0xa6, 0xd5, 0x40, 0x4b, 0xb8, 0x0c, 0x60, 0x9d, 0x1d, 0xb6, 0xda, 0xad, 0xee, 0x51,
	0xf3, 0x00, 0x65, 0xf1, 0x3a, 0x14, 0xac, 0xb3, 0xe6, 0x99, 0x65, 0x36, 0x0e, 0x1a, 0x56, 0x03,
	0x2d, 0xef, 0x1c, 0xc2, 0x9d, 0x85, 0xa1, 0x0b, 0xe7, 0x61, 0x45, 0x7a, 0xa0, 0x4d, 0x9b, 0x8d,
	0x76, 0xf7, 0xb0, 0x69, 0x2a, 0xd3, 0xfb, 0x47, 0x8d, 0xf6, 0xfb, 0x26, 0x5a, 0x52, 0xc7, 0xd0,
	0xab, 0xec, 0xce, 0x5f, 0xf3, 0x70, 0x47, 0x65, 0x72, 0xda, 0xcb, 0x2d, 0xb8, 0x3b, 0x07, 0xea,
	0x8c, 0xc9, 0xe0, 0x2a, 0x3c, 0x99, 0x27, 0x0e, 0x09, 0x39, 0xb9, 0x24, 0xcc, 0x1a, 0x30, 0x12,
	0x0d, 0x82, 0xa1, 0xa8, 0x83, 0xa7, 0xf0, 0x70, 0x5e, 0x66, 0x3f, 0xf0, 0xcf, 0x29, 0x1b, 0x29,
	0x7f, 0x51, 0x56, 0xd4, 0xd8, 0xbc, 0x80, 0x49, 0x22, 0xc2, 0x0f, 0xc8, 0x25, 0x75, 0x09, 0x5a,
	0x5e, 0xa4, 0xb5, 0xfe, 0x77, 0x01, 0x13, 0x75, 0xf1, 0x08, 0x8c, 0x79, 0xfa, 0x3b, 0x1a, 0x12,
	0xad, 0xbc, 0xba, 0xa8, 0xdc, 0x61, 0x01, 0x27, 0x2e, 0xdf, 0x77, 0x86, 0x43, 0xb4, 0x26, 0x8a,
	0x6a, 0x9e, 0x16, 0x15, 0x62, 0x8d, 0x51, 0x6e, 0xd1, 0xeb, 0x24, 0x81, 0xf7, 0x07, 0xc4, 0xbd,
	0x40, 0x79, 0x91, 0xdb, 0xf3, 0x02, 0x3a, 0xf2, 0x08, 0x6e, 0xd7, 0x6d, 0x32, 0x27, 0x22, 0xa8,
	0x80, 0x77, 0xe0, 0xf3, 0x1b, 0x8f, 0x24, 0x07, 0x8a, 0x73, 0xc2, 0xac, 0x40, 0x7f, 0x3f, 0x40,
	0x45, 0xfc, 0x7f, 0xf0, 0xf2, 0xbf, 0xc8, 0x26, 0xff, 0x27, 0x51, 0xe9, 0x86, 0x58, 0xc9, 0x97,
	0xe1, 0xa3, 0xd3, 0x23, 0x43, 0x54, 0xc6, 0x15, 0x78, 0x74, 0x33, 0xed, 0xf7, 0x63, 0xd1, 0xd0,
	0xd6, 0x17, 0x2f, 0xb4, 0x29, 0xdf, 0xad, 0x8e, 0x13, 0x45, 0xe1, 0x40, 0x7a, 0x8f, 0xf0, 0x73,
	0x78, 0x3a, 0x2f, 0x73, 0x40, 0xa3, 0x6b, 0x42, 0x77, 0xf0, 0x4b, 0x78, 0x7e, 0xdd, 0x90, 0xcb,
	0x26, 0x21, 0x6f, 0xf8, 0xb2, 0x0b, 0x25, 0x2d, 0x14, 0x2f, 0xfa, 0xa4, 0x05, 0x13, 0x89, 0xbb,
	0x8b, 0x3e, 0xb5, 0x46, 0xe2, 0x01, 0xef, 0x4c, 0xbf, 0x79, 0xa1, 0x0d, 0xbc, 0x0d, 0x2f, 0x6e,
	0x92, 0x31, 0x89, 0x2b, 0xc6, 0xbf, 0x49, 0x97, 0xf8, 0x5c, 0xfc, 0x0f, 0x45, 0xf7, 0xf0, 0x13,
	0x78, 0xb0, 0x78, 0xe5, 0xc9, 0xa8, 0x81, 0x36, 0x45, 0x37, 0xbd, 0x96, 0x31, 0xd4, 0xef, 0xa3,
	0x2d, 0xd1, 0xb5, 0xaf, 0x67, 0xe9, 0x28, 0xb8, 0x24, 0x1d, 0xea, 0x23, 0x63, 0x91, 0x54, 0x81,
	0x15, 0xe4, 0xfd, 0x1b, 0x48, 0x46, 0x1c, 0x2e, 0xc9, 0x07, 0x8b, 0xe9, 0xfb, 0x9e, 0xf0, 0xa6,
	0xcf, 0x59, 0x10, 0x4e, 0xd0, 0xc3, 0xc5, 0xfb, 0x4c, 0xc7, 0xee, 0xd1, 0x62, 0xa2, 0x35, 0xc2,
	0x70, 0x38, 0x91, 0x83, 0x0a, 0x25, 0x11, 0x7a, 0x7c, 0xf3, 0x61, 0x93, 0x79, 0x01, 0x3d, 0xc1,
	0xcf, 0xe0, 0xf1, 0x35, 0x03, 0x31, 0x0f, 0x3e, 0x06, 0xee, 0xc5, 0x01, 0x19, 0x3a, 0x93, 0xe3,
	0x08, 0x3d, 0x5d, 0x74, 0xf0, 0xb4, 0x7e, 0xb8, 0x2f, 0x72, 0x93, 0x30, 0x54, 0x59, 0xbc, 0x1b,
	0x9d, 0x9d, 0xcd, 0x20, 0x52, 0x6f, 0x1b, 0x7a, 0xf6, 0x63, 0x32, 0x7b, 0xb1, 0xd7, 0x27, 0x1c,
	0x55, 0x6f, 0x2d, 0xf2, 0x63, 0x32, 0x0a, 0xd0, 0xf3, 0xdb, 0x12, 0x57, 0x94, 0xfa, 0x7e, 0xe0,
	0x11, 0xf4, 0x62, 0xe7, 0xb7, 0xb0, 0x21, 0xde, 0x1e, 0x87, 0x33, 0x3a, 0x4e, 0xb7, 0xae, 0x0a,
	0x3c, 0xba, 0x09, 0xb7, 0xf7, 0x63, 0xc6, 0x88, 0xcf, 0x51, 0x46, 0xc4, 0xe0, 0x46, 0x89, 0x36,
	0xb9, 0x3a, 0xa4, 0x2c, 0xe2, 0x68, 0x49, 0x9c, 0xe0, 0x36, 0x91, 0x2e, 0x71, 0x03, 0xdf, 0x43,
	0xd9, 0xdd, 0x9f, 0xc1, 0xda, 0x15, 0x95, 0x83, 0x31, 0x7e, 0x56, 0x53, 0x5f, 0x96, 0x6b, 0xc9,
	0x97, 0xe5, 0x5a, 0xd3, 0x8f, 0x47, 0xdf, 0x3a, 0xc3, 0x98, 0x9c, 0x84, 0x22, 0x28, 0x91, 0xf1,
	0xc3, 0x1f, 0xb2, 0xea, 0xdb, 0x96, 0xd0, 0x69, 0xf9, 0xbb, 0x3f, 0x87, 0x9c, 0xd4, 0x0e, 0x62,
	0xfe, 0x29, 0xea, 0x7f, 0xd7, 0xea, 0x72, 0xcb, 0x93, 0x98, 0xef, 0xbe, 0x87, 0x92, 0xd4, 0xf7,
	0x48, 0x2f, 0xee, 0x7f, 0xa2, 0x0f, 0xff, 0xd0, 0x46, 0x0a, 0x42, 0xf3, 0x40, 0x28, 0xb6, 0xfc,
	0xdd, 0x16, 0x94, 0x53, 0x86, 0x3e, 0xd1, 0x9d, 0x7f, 0x6a, 0x4b, 0xc5, 0xa9, 0xa5, 0x93, 0x98,
	0xef, 0x7d, 0x01, 0x0f, 0xdc, 0x60, 0x54, 0xbb, 0x20, 0x24, 0xbc, 0x20, 0x93, 0x9a, 0x27, 0x7b,
	0xb2, 0x34, 0xe2, 0x06, 0xc3, 0xbd, 0xc2, 0x07, 0x42, 0xc2, 0x0f, 0x44, 0x0e, 0xd4, 0xff, 0x09,
	0x00, 0x00, 0xff, 0xff, 0x88, 0x00, 0x93, 0xc7, 0x98, 0x17, 0x00, 0x00,
}
